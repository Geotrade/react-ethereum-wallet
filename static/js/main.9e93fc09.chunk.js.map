{"version":3,"sources":["web3.js","actions/actionTypes.js","actions/actions.js","utils/utils.js","components/elements/TransactionItem.js","components/elements/LatestTransactions.js","components/elements/NoMatchingTransaction.js","constants/TokenInterfaceConstant.js","components/elements/TokenListForItems.js","components/elements/AccountItem.js","components/Addresses.js","components/elements/SecurityIcon.js","utils/helperFunctions.js","components/elements/ContractItem.js","components/ButtonDescription.js","components/DeployedWallets.js","views/Account.js","components/elements/SelectableUnit.js","components/elements/ActionBarItem.js","components/elements/AccountActionBar.js","components/TokenList.js","components/EditableName.js","views/NotFound.js","views/SingleAccountView.js","components/elements/ContractActionBar.js","components/elements/inputs/Inputs.js","components/elements/ExecuteConstants.js","components/elements/WalletDropdown.js","components/elements/ExecuteFunctions.js","components/elements/ExecutableContract.js","components/elements/ContractEvents.js","views/SingleContractView.js","components/CustomContracts.js","components/elements/TokenBox.js","components/CustomTokens.js","constants/FieldConstants.js","constants/DevConstants.js","components/DeployToken.js","views/Contracts.js","components/FromToRow.js","components/elements/RadioTokenSelect.js","components/AmountRow.js","components/GasFeeRow.js","components/TotalGas.js","views/Send.js","constants/InitConstants.js","views/NewWalletContract.js","views/ViewContainer.js","components/elements/TestInputItem.js","components/modals/WatchContract.js","components/modals/WatchToken.js","components/modals/DeleteToken.js","components/modals/SendTransaction.js","components/modals/TransactionInfo.js","components/modals/QRCode.js","components/modals/EventInfo.js","components/modals/JSONInterface.js","components/modals/ModalContainer.js","components/Navbar.js","App.js","registerServiceWorker.js","errorBoundaries/ErrorBoundary.js","reducers/reducers.js","reducers/index.js","store/store.js","index.js"],"names":["web3","window","Web3","currentProvider","actionTypes","updateContractName","name","dispatch","type","payload","updateWalletContractName","updateAddressName","walletData","updateTokenToSend","tokenData","updateContractTokenBalance","token","updateAccountTokenBalance","setEthereumProviderConfig","data","updateWalletContracts","contract","value","transactionHash","updatePendingContracts","hash","updateInitialDeployedContractMethodOutputs","outputs","updateInitialObservedContractMethodOutputs","updateFunctionInput","input","updateExecutingWallet","address","emptySelectedFunction","func","updateSelectedFunction","updateJSON","json","updateQRCode","updateSelectedEvent","event","addDeployedContractFunctions","funcs","addDeployedContractConstants","consts","addObservedContractFunctions","addObservedContractConstants","updateContractLog","newLog","addPastContractLogs","contractWithLogs","fetchTokensForAutoScan","accounts","updateBalanceChecked","num","updateErrChecked","requestTokens","fetch","then","response","error","console","warn","displayGlobalNotification","display","msg","duration","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee2","tokens","balancesChecked","errChecked","wrap","_context2","prev","next","map","account","callData","concat","substring","replace","_sendTransactionPromise","_callee","params","_context","abrupt","Promise","resolve","reject","eth","call","to","result","tokenAmt","utils","toBN","fromWei","addObservedToken","assign","amount","catch","stop","this","apply","arguments","_x2","sendTransactionPromise","_x","updateMainDCF","updateDCFRadio","updateMainContractAddress","updateDeployContractForm","updateSelectedTransaction","tx","clearTransactionToSend","updateTransactionConfirmation","cn","updateTransaction","txnInfo","addTransaction","txHash","updateTransactionToSend","fetchEthGasStationStats","gasStats","requestGas","actions_this","jsonGasStats","receiveGas","emptySelectedContract","empty","selectedContract","tokenToDelete","deleteToken","cancelTokenToWatch","updateTokenToWatch","tokenInfo","addObservedContract","cancelContractToWatch","updateContractToWatch","contractInfo","closeModal","modalName","displayModal","createInitWalletContract","wc","updateEtherPrices","exchangeRates","emptySelectedWallet","selectedWallet","wallet","updateTotalBalance","totalBalance","setWallets","Wallets","updateProvider","provider","updateBlockHeader","blockHeader","updatePeerCount","PeerCount","updateCurrency","_ref2","CurrencyUnit","updateConnectedNetwork","network","BigNumber","ethUtils","BN","newWeb3","floatToTime","str","Math","round","ceil","getMonthName","string","Date","getMonth","getDate","getFullTime","h","getHours","amORpm","getDay","getDayOfWeek","getFullYear","getYear","getMinutes","displayPriceFormatter","props","balance","currencyOverride","undefined","isNaN","displayPrice","currency","reducers","Number","toLowerCase","url","moment","unix","resp","status","respJSON","ETH","body","keys","key","isFinite","err","cb","getBlock","block","t0","getAccounts","forEach","acc","getBalance","add","TransactionInfo","confirmationNumber","react_default","createElement","className","MinusIcon","DateInfo","data-tool-tip","dateSent","PendingIcons","Fragment","TransactionItem","_Component","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","updateToTransaction","bind","assertThisInitialized","inherits","createClass","state","completed","LinearProgress_default","variant","e","stopPropagation","_this2","ethereum_react_components_dist","classes","title","size","Link","pathname","onClick","transactionType","renderAddressLink","from","_this3","transaction","shortid","generate","data-transaction-hash","data-block-hash","blockHash","target","tagName","TransactionItem_DateInfo","renderTransactionType","TransactionItem_PendingIcons","TransactionItem_TransactionInfo","renderTransactionAmount","TransactionItem_MinusIcon","Component","connect","objectSpread","sortOptionsArr","displayName","txKey","searchOptionsArr","LatestTransactions","filterOptions","searchValue","searchField","ascending","sortOption","filteredTransactions","fetchTransactions","updateSearchValue","filterSearchValue","selectSearchField","selectSortOption","sortOptions","toggleSortDirection","sortTransactions","transactions","length","setState","log","field","sorted","sort","b","filteredArr","filter","txValue","includes","reverse","_this4","placeholder","onKeyUp","style","marginLeft","onChange","val","i","_this5","_this6","icon","_this7","elements_TransactionItem","renderSearchField","renderSortOptions","renderDirectionalIcon","renderTransactions","NoMatchingTransaction","colSpan","tokenInterface","constant","inputs","anonymous","indexed","payable","TokenListForItems","untrackedTokens","walletAddress","ObservedTokens","tokenAddress","TokenContract","Contract","options","methods","balanceOf","tokenResult","addressType","message","tokenCheck","currentObservedTokens","Set","WalletContracts","currentWalletsTokens","trackedTokens","Array","toConsumableArray","x","has","getTokenBalanceForAddress","data-tooltip","symbol","Actions","AccountItem","openAccountPage","prevProps","prevState","w","number","number_format_default","displayType","thousandSeparator","ot","tokenList","displayTokens","constructor","elements_TokenListForItems","AccountURL","renderTokens","renderName","renderBalance","short","Addresses","wallets","elements_AccountItem","index","ToolTip","src","divStyle","alt","makeBlockie","backgroundImage","SecurityIcon_ToolTip","combineWallets","addresses","walletContracts","makeID","text","possible","charAt","floor","random","toSentence","trim","toUpperCase","slice","ContractItem","fakeAddress","fakeAddressInterval","setInterval","clearInterval","percent","width","elements_SecurityIcon","renderPendingProgress","renderPendingSecurityIcon","pending","contractAddress","ContractUrl","renderPending","renderCreating","ButtonDescription","description","WalletLink","DeployedWallets","_this$props$reducers","ContractsPendingConfirmations","contracts","elements_ContractItem","components_ButtonDescription","renderWalletBoxList","DeployedWallets_WalletLink","Title","StatelessPageContent","Account_Title","components_Addresses","components_DeployedWallets","AccountView","txs","Transactions","Account_StatelessPageContent","elements_LatestTransactions","elements_NoMatchingTransaction","selectableUnits","SelectableUnit","unitSelected","displaySU","document","addEventListener","removeEventListener","node","contains","newUnit","getAttribute","item","data-value","newClasses","require","simple-modal","animate","id","ref","renderList","ActionBarItem","href","AccountActionBar","preventDefault","etherScanAddress","transferEtherAddress","changellyAddress","elements_ActionBarItem","lib","displayCopiedNotification","displayAndSetQRCode","TokenList","sw","sendUrl","renderIdentity","renderInfo","renderLink","EditableName","handleChange","newName","toggleEditability","contentEditable","walletName","html","React","createRef","handleClickOutside","react_contenteditable_default","innerRef","disabled","components_EditableName","NotFound","StickyHeader","AccountDetails","AccountDescription","SingleAccountView","handleScroll","accountTxns","data-name","toggleSU","elements_SelectableUnit","SingleAccountView_StickyHeader","SingleAccountView_AccountDetails","components_TokenList","SingleAccountView_AccountDescription","elements_AccountActionBar","renderAccountTransactions","views_NotFound","renderSingleAccount","ContractActionBar","jsonInterface","displayAndSetJSON","Inputs","inputType","pattern","step","cols","rows","min","match","renderAddress","renderBool","renderBytes","renderInt","renderJson","renderString","renderUint","ExecuteConstants","executeInput","_console","funcName","inp","toWei","JSON","parse","_contract$methods","res","Helpers","inputs_Inputs","output","bool","renderOutputType","constants","ObservedContracts","contractConstants","renderFunctionInputs","renderFunctionOutputs","showContractFunctions","WalletDropdown","WalletsCombined","fromWallet","dropdownConfig","owners","DeployContractForm","multiSigContract","obj","MainOwnerAddress","chooseWallet","component","returnDeployTokenAddress","config","selectClassName","selectName","toFixed","compose","withStyles","theme","keyIcon","WebkitTransform","MozTransform","MsTransform","OTransform","transform","ExecuteFunctions","executingWallet","chooseFunction","executeContractFunction","functions","chosenFunction","contractFunctions","selectedIndex","web3Instance","selectedFunction","execWallet","send","on","receipt","elements_WalletDropdown","defaultValue","c","executable","renderAccountDropdown","renderSelectFunction","renderIsExecutable","ExecutableContract","show","toggleContractInfo","elements_ExecuteConstants","elements_ExecuteFunctions","DateFormat","Utils","timestamp","LogValue","wordBreak","returnValues","Event","ContractEvents_LogValue","ContractEvents","displayEventModal","originalContractName","originalContractAddress","logs","ContractEvents_DateFormat","ContractEvents_Event","StickyBar","StatelessSummary","SingleContractView","dailyEtherLimit","requiredSignatures","ownersList","redirectToOwnersSingleView","watchContractEvents","executeAndWatch","executeFunctions","updateContractWithMethods","updateContractWithMethodOutputs","deployedWalletContract","method","contractInstance","push","args","typeShort","_contractInstance$met","_console2","subscription","events","allEvents","getPastEvents","blockNumber","fontWeight","SingleContractView_StatelessSummary","renderWalletDetails","htmlFor","elements_ContractEvents","SingleContractView_StickyBar","renderSummary","elements_ContractActionBar","elements_ExecutableContract","renderEvents","renderSingleContract","CustomContracts","isEqual","oc","renderObservedContracts","renderWatchContractButton","TokenBox","deleteTokenModal","totalSupply","iconStyle","color","toDataUrl","CustomTokens","elements_TokenBox","float","autoScanTokens","renderObservedTokens","renderAddTokenButton","renderAutoScan","NavFields","liClass","displayText","ReplicateBinanceToken","ABI","DeployToken","_this$props","combinedWallets","deployingAddress","disabledWallet","deployBinanceToken","code","deploy","gas","decimals","Fab_default","aria-label","fab","Add_default","renderButton","renderWallet","margin","spacing","unit","extendedIcon","marginRight","ContractsView","Contracts_Title","components_CustomContracts","components_CustomTokens","components_DeployToken","Send","switchChecked","checkbox","standardFee","handleInputChange","checkIsAddress","targetValue","toAddress","isAddress","toIsAddress","dapp-error","autoFocus","renderIcon","renderFrom","renderTo","TransactionToSend","RadioTokenSelect","chooseToken","sendToken","tokenToSend","renderEtherChoice","renderTokensChoice","AmountRow","handleOnKeyUp","toggleCheckbox","split","tokenAmount","elements_RadioTokenSelect","renderEtherBalance","renderAmount","renderAmountSummary","renderEtherDropDown","GasStats","GasFeeRow","changeGas","estimateGas","toggleFee","fastest","safeLow","safeLowWait","fastWait","renderFeePriority","renderEstimateTime","TokenInfo","EstimatedFee","total","TotalGas","TotalGas_TokenInfo","gasPrice","renderTotal","TotalGas_EstimatedFee","validateForm","validateSendingEther","validateSendingTokens","valid","action","autoComplete","Send_Title","FromToRow","components_AmountRow","components_GasFeeRow","components_TotalGas","renderSubmitButton","ethereumConfig","rollBackBy","requiredConfirmations","dailyLimitDefault","WalletInterfaceItems","SelectOwner","dcfRadio","NewWalletContract","defaultWallet","selectWallet","createContract","checkIfImportableWallet","prop","dcf","prevDcf","importWalletAddress","pendingConf","originalABI","getCode","buttonValue","ownerCount","confirmationAddressesRequired","dailyLimitAmount","_dcf$multiSigContract","TextField_default","label","InputProps","startAdornment","InputAdornment_default","position","ownerSet","msContract","multisigChecked","toString","validateMultipleAddress","history","stringify","newContractInstance","FormControlLabel_default","control","Radio_default","checked","simpleChecked","Collapse_default","in","verticalAlign","lineHeight","select","multiline","MenuItem_default","InputLabelProps","shrink","renderMultiSigOwners","importWalletChecked","_this8","FormControl_default","formControl","NewWalletContract_Title","NewWalletContract_SelectOwner","radioRoot","FormLabel_default","RadioGroup_default","group","renderMultiSigButton","renderImportButton","renderCreateButton","fadeRoot","height","noHeight","paper","svg","polygon","fill","palette","common","white","stroke","divider","strokeWidth","ViewContainer","Route","exact","path","SendContractForm","TestInputItem","f","divClass","editor","renderTextAreaType","renderInputType","listInputs","WatchItem","cancelFunction","submitFunction","ContractToWatch","con","_this2$props$reducers","deployedWalletContracts","elements_TestInputItem","renderInputs","renderButtons","WatchToken","invokeContractMethod","getTokenContractInfo","variableMethodName","defineProperty","toCheckSum","toChecksumAddress","isCheckSummed","checkAddressChecksum","TokenToWatch","Name","DeleteToken","DeleteToken_Name","SendTransactionModal","sendTransaction","sendEtherTransaction","sendTokenTransaction","updateTokenBalances","returnAccountName","date","transfer","walletArray","walletContractArray","observedContracts","observedContractsArray","observedTokens","observedTokensArray","fromName","toName","SendTransaction_Title","estimatedGas","withRouter","Header","nw","fontSize","rel","DateRow","today","txDate","timeDiff","abs","getTime","diffDays","GasStat","displayValue","gasAmount","BlockInfo","handleRoute","evt","direction","TransactionInfo_Header","TransactionInfo_DateRow","renderSentAmount","TransactionInfo_GasStat","gasUsed","TransactionInfo_BlockInfo","QRCode","EventName","Outputs","tokenId","Origin","EventInfo","diff","hours","parseInt","EventInfo_EventName","EventInfo_Outputs","EventInfo_Origin","JSONInterface","readOnly","ModalContainer","classList","remove","snapshot","globalNotification","notification","toastConfig","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","toast","warning","success","info","values","modals","watchContract","dapp-modal-overlay","displayWatchContract","watchToken","displayWatchToken","displayDeleteToken","viewTransaction","displayTransaction","JsonInterface","displayJSONInterface","qrCode","displayQRCode","displaySendTransaction","viewEventInfo","displayEventInfo","txToSend","react_toastify_lib","newestOnTop","rtl","pauseOnVisibilityChange","modals_WatchToken","WatchContract","TokenToDelete","modals_DeleteToken","SelectedTransaction","modals_TransactionInfo","SelectedEvent","modals_EventInfo","SendTransaction","modals_QRCode","modals_JSONInterface","NavBar","small","sticky","time","interval","scrollPosition","scrollY","inlineStyle","Tooltip_default","IconButton_default","redirectToSettings","SettingsSharp_default","peerCount","newStyles","dapp-header","dapp-sticky-bar","dapp-small","renderHeaderField","renderNetworkHeader","renderBalanceHeader","timeSinceLastBlock","peerCountIntervalId","App","getCryptoComparePrices","CryptoCompareInterval","GasInterval","getEverything","_checkNetwork","subscribe","gasLimit","net","getPeerCount","unconfirmed","currentBlock","getTransaction","confirmations","getTransactionReceipt","_getCryptoComparePrices","BrowserRouter","Navbar","views_ViewContainer","modals_ModalContainer","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ErrorBoundary","hasError","children","initialState","displayAlertMessage","alertKey","PendingConfirmations","Events","Tokens","balancesAutoScanChecked","errorsAutoScanReceived","SelectedFunction","entries","slicedToArray","_ref3","_ref4","k","v","ind","_ref6","_ref8","_ref9","Wallet","prices","appReducer","combineReducers","rootReducer","updatedState","middlewares","thunk","persistConfig","storage","blacklist","store","createStore","persistReducer","applyMiddleware","__REDUX_DEVTOOLS_EXTENSION__","persistStore","ReactDOM","render","es","errorBoundaries_ErrorBoundary","src_App_0","getElementById","URL","process","origin","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.9e93fc09.chunk.js","sourcesContent":["import Web3 from 'web3';\n\nlet web3;\n\nif (window.web3) {\n  web3 = new Web3(window.web3.currentProvider);\n} else {\n  web3 = new Web3('http://127.0.0.1:8545');\n}\n\nexport default web3;\n","export const actionTypes = {\n  UPDATE_OBSERVED_CONTRACT_NAME: 'UPDATE_OBSERVED_CONTRACT_NAME',\n  UPDATE_WALLET_CONTRACT_NAME: 'UPDATE_WALLET_CONTRACT_NAME',\n  UPDATE_ADDRESS_NAME: 'UPDATE_ADDRESS_NAME',\n  UPDATE_TOKEN_TO_SEND: 'UPDATE_TOKEN_TO_SEND',\n  UPDATE_CONTRACT_TOKEN_BALANCE: 'UPDATE_CONTRACT_TOKEN_BALANCE',\n  UPDATE_ACCOUNT_TOKEN_BALANCE: 'UPDATE_ACCOUNT_TOKEN_BALANCE',\n  SET_ETHEREUM_PROVIDER_CONFIG: 'SET_ETHEREUM_PROVIDER_CONFIG',\n  UPDATE_MAIN_DCF: 'UPDATE_MAIN_DCF',\n  UPDATE_WALLET_CONTRACT: 'UPDATE_WALLET_CONTRACT',\n  DELETE_PENDING_CONTRACT: 'DELETE_PENDING_CONTRACT',\n  UPDATE_PENDING_CONTRACTS: 'UPDATE_PENDING_CONTRACTS',\n  UPDATE_FUNCTION_INPUT: 'UPDATE_FUNCTION_INPUT',\n  UPDATE_EXECUTING_WALLET: 'UPDATE_EXECUTING_WALLET',\n  EMPTY_SELECTED_FUNCTION: 'EMPTY_SELECTED_FUNCTION',\n  UPDATE_SELECTED_FUNCTION: 'UPDATE_SELECTED_FUNCTION',\n  UPDATE_INITIAL_DEPLOYED_CONTRACT_METHOD_OUTPUTS:\n    'UPDATE_INITIAL_DEPLOYED_CONTRACT_METHOD_OUTPUTS',\n  UPDATE_INITIAL_OBSERVED_CONTRACT_METHOD_OUTPUTS:\n    'UPDATE_INITIAL_OBSERVED_CONTRACT_METHOD_OUTPUTS',\n  UPDATE_JSON_INTERFACE: 'UPDATE_JSON_INTERFACE',\n  UPDATE_QR_CODE: 'UPDATE_QR_CODE',\n  UPDATE_SELECTED_EVENT: 'UPDATE_SELECTED_EVENT',\n  ADD_DEPLOYED_CONTRACT_FUNCTIONS: 'ADD_DEPLOYED_CONTRACT_FUNCTIONS',\n  ADD_DEPLOYED_CONTRACT_CONSTANTS: 'ADD_DEPLOYED_CONTRACT_CONSTANTS',\n  ADD_OBSERVED_CONTRACT_FUNCTIONS: 'ADD_OBSERVED_CONTRACT_FUNCTIONS',\n  ADD_OBSERVED_CONTRACT_CONSTANTS: 'ADD_OBSERVED_CONTRACT_CONSTANTS',\n  UPDATE_PAST_CONTRACT_LOGS: 'UPDATE_PAST_CONTRACT_LOGS',\n  ADD_PAST_CONTRACT_LOGS: 'ADD_PAST_CONTRACT_LOGS',\n  UPDATE_BALANCE_CHECKED: 'UPDATE_BALANCE_CHECKED',\n  UPDATE_ERR_CHECKED: 'UPDATE_ERR_CHECKED',\n  REQUEST_TOKENS_AUTOSCAN: 'REQUEST_TOKENS_AUTOSCAN',\n  RECEIVE_GAS_AUTOSCAN: 'RECEIVE_GAS_AUTOSCAN',\n  UPDATE_DCF_RADIO: 'UPDATE_DCF_RADIO',\n  UPDATE_MAIN_CONTRACT_ADDRESS: 'UPDATE_MAIN_CONTRACT_ADDRESS',\n  UPDATE_DEPLOY_CONTRACT_FORM: 'UPDATE_DEPLOY_CONTRACT_FORM',\n  UPDATE_SELECTED_TRANSACTION: 'UPDATE_SELECTED_TRANSACTION',\n  CLEAR_TRANSACTION_TO_SEND: 'CLEAR_TRANSACTION_TO_SEND',\n  UPDATE_TRANSACTION_CONFIRMATION: 'UPDATE_TRANSACTION_CONFIRMATION',\n  UPDATE_TRANSACTION: 'UPDATE_TRANSACTION',\n  ADD_TRANSACTION: 'ADD_TRANSACTION',\n  DISPLAY_GLOBAL_NOTIFICATION: 'DISPLAY_GLOBAL_NOTIFICATION',\n  UPDATE_TRANSACTION_TO_SEND: 'UPDATE_TRANSACTION_TO_SEND',\n  REQUEST_GAS_STATS: 'REQUEST_GAS_STATS',\n  RECEIVE_GAS_STATS: 'RECEIVE_GAS_STATS',\n  EMPTY_SELECTED_CONTRACT: 'EMPTY_SELECTED_CONTRACT',\n  SET_SELECTED_CONTRACT: 'SET_SELECTED_CONTRACT',\n  SET_TOKEN_TO_DELETE: 'SET_TOKEN_TO_DELETE',\n  DELETE_TOKEN: 'DELETE_TOKEN',\n  ADD_OBSERVED_TOKEN: 'ADD_OBSERVED_TOKEN',\n  CANCEL_TOKEN_TO_WATCH: 'CANCEL_TOKEN_TO_WATCH',\n  UPDATE_TOKEN_TO_WATCH: 'UPDATE_TOKEN_TO_WATCH',\n  ADD_OBSERVED_CONTRACT: 'ADD_OBSERVED_CONTRACT',\n  CANCEL_CONTRACT_TO_WATCH: 'CANCEL_CONTRACT_TO_WATCH',\n  UPDATE_CONTRACT_TO_WATCH: 'UPDATE_CONTRACT_TO_WATCH',\n  CLOSE_MODAL: 'CLOSE_MODAL',\n  DISPLAY_MODAL: 'DISPLAY_MODAL',\n  CREATE_INIT_WALLET_CONTRACT: 'CREATE_INIT_WALLET_CONTRACT',\n  UPDATE_EXCHANGE_RATES: 'UPDATE_EXCHANGE_RATES',\n  UPDATE_ETHER_PRICES: 'UPDATE_ETHER_PRICES',\n  EMPTY_SELECTED_WALLET: 'EMPTY_SELECTED_WALLET',\n  SET_SELECTED_WALLET: 'SET_SELECTED_WALLET',\n  UPDATE_DISPLAY_VALUE: 'UPDATE_DISPLAY_VALUE',\n  UPDATE_TOTAL_BALANCE: 'UPDATE_TOTAL_BALANCE',\n  SET_WALLETS: 'SET_WALLETS',\n  UPDATE_PROVIDER: 'UPDATE_PROVIDER',\n  UPDATE_BLOCKHEADER: 'UPDATE_BLOCKHEADER',\n  UPDATE_PEERCOUNT: 'UPDATE_PEERCOUNT',\n  UPDATE_CURRENCY_UNIT: 'UPDATE_CURRENCY_UNIT',\n  UPDATE_CONNECTED_NETWORK: 'UPDATE_CONNECTED_NETWORK',\n};\n","import Web3 from 'web3';\nimport { actionTypes } from './actionTypes.js';\n// import io from 'socket.io-client';\n// let socket = io('wss://streamer.cryptocompare.com')\n\n// const web3 = new Web3('ws://127.0.0.1:8546');\nconst web3 = new Web3(\n  'https://mainnet.infura.io/v3/2e1f7de617754b72a8a61bef3f7de966'\n);\n\nexport const updateContractName = name => dispatch => {\n  dispatch({\n    type: actionTypes.UPDATE_OBSERVED_CONTRACT_NAME,\n    payload: name,\n  });\n};\n\nexport const updateWalletContractName = name => dispatch => {\n  dispatch({\n    type: actionTypes.UPDATE_WALLET_CONTRACT_NAME,\n    payload: name,\n  });\n};\n\nexport const updateAddressName = walletData => dispatch => {\n  dispatch({\n    type: actionTypes.UPDATE_ADDRESS_NAME,\n    payload: walletData,\n  });\n};\n\nexport const updateTokenToSend = tokenData => dispatch => {\n  dispatch({\n    type: actionTypes.UPDATE_TOKEN_TO_SEND,\n    payload: tokenData,\n  });\n};\n\nexport const updateContractTokenBalance = token => dispatch => {\n  dispatch({\n    type: actionTypes.UPDATE_CONTRACT_TOKEN_BALANCE,\n    payload: token,\n  });\n};\n\nexport const updateAccountTokenBalance = token => dispatch => {\n  dispatch({\n    type: actionTypes.UPDATE_ACCOUNT_TOKEN_BALANCE,\n    payload: token,\n  });\n};\n\nexport const setEthereumProviderConfig = data => dispatch => {\n  dispatch({\n    type: actionTypes.SET_ETHEREUM_PROVIDER_CONFIG,\n    payload: data,\n  });\n};\n\nexport const updateWalletContracts = contract => dispatch => {\n  dispatch({\n    type: actionTypes.UPDATE_WALLET_CONTRACT,\n    payload: contract,\n  });\n  // TODO: data structs must match\n  // dispatch({\n  //   type: actionTypes.ADD_OBSERVED_CONTRACT,\n  //   payload: contract,\n  // });\n  dispatch({\n    type: actionTypes.DELETE_PENDING_CONTRACT,\n    payload: contract.value.transactionHash,\n  });\n};\n\nexport const updatePendingContracts = hash => dispatch => {\n  dispatch({\n    type: actionTypes.UPDATE_PENDING_CONTRACTS,\n    payload: hash,\n  });\n};\n\nexport const updateInitialDeployedContractMethodOutputs = outputs => dispatch => {\n  dispatch({\n    type: actionTypes.UPDATE_INITIAL_DEPLOYED_CONTRACT_METHOD_OUTPUTS,\n    payload: outputs,\n  });\n};\n\nexport const updateInitialObservedContractMethodOutputs = outputs => dispatch => {\n  dispatch({\n    type: actionTypes.UPDATE_INITIAL_OBSERVED_CONTRACT_METHOD_OUTPUTS,\n    payload: outputs,\n  });\n};\n\nexport const updateFunctionInput = input => dispatch => {\n  dispatch({\n    type: actionTypes.UPDATE_FUNCTION_INPUT,\n    payload: input,\n  });\n};\n\nexport const updateExecutingWallet = address => dispatch => {\n  dispatch({\n    type: actionTypes.UPDATE_EXECUTING_WALLET,\n    payload: address,\n  });\n};\n\nexport const emptySelectedFunction = func => dispatch => {\n  dispatch({\n    type: actionTypes.EMPTY_SELECTED_FUNCTION,\n    payload: func,\n  });\n};\n\nexport const updateSelectedFunction = func => dispatch => {\n  dispatch({\n    type: actionTypes.UPDATE_SELECTED_FUNCTION,\n    payload: func,\n  });\n};\n\nexport const updateJSON = json => dispatch => {\n  dispatch({\n    type: actionTypes.UPDATE_JSON_INTERFACE,\n    payload: json,\n  });\n};\n\nexport const updateQRCode = address => dispatch => {\n  dispatch({\n    type: actionTypes.UPDATE_QR_CODE,\n    payload: address,\n  });\n};\n\nexport const updateSelectedEvent = event => dispatch => {\n  dispatch({\n    type: actionTypes.UPDATE_SELECTED_EVENT,\n    payload: event,\n  });\n};\n\nexport const addDeployedContractFunctions = funcs => dispatch => {\n  dispatch({\n    type: actionTypes.ADD_DEPLOYED_CONTRACT_FUNCTIONS,\n    payload: funcs,\n  });\n};\n\nexport const addDeployedContractConstants = consts => dispatch => {\n  dispatch({\n    type: actionTypes.ADD_DEPLOYED_CONTRACT_CONSTANTS,\n    payload: consts,\n  });\n};\n\nexport const addObservedContractFunctions = funcs => dispatch => {\n  dispatch({\n    type: actionTypes.ADD_OBSERVED_CONTRACT_FUNCTIONS,\n    payload: funcs,\n  });\n};\n\nexport const addObservedContractConstants = consts => dispatch => {\n  dispatch({\n    type: actionTypes.ADD_OBSERVED_CONTRACT_CONSTANTS,\n    payload: consts,\n  });\n};\nexport const updateContractLog = newLog => dispatch => {\n  dispatch({\n    type: actionTypes.UPDATE_PAST_CONTRACT_LOGS,\n    payload: newLog,\n  });\n};\n\nexport const addPastContractLogs = contractWithLogs => dispatch => {\n  dispatch({\n    type: actionTypes.ADD_PAST_CONTRACT_LOGS,\n    payload: contractWithLogs,\n  });\n};\n\nexport const fetchTokensForAutoScan = accounts => {\n  const requestTokens = accounts => {\n    return {\n      type: actionTypes.REQUEST_TOKENS_AUTOSCAN,\n      payload: accounts,\n    };\n  };\n  const receiveTokens = tokens => {\n    return {\n      type: actionTypes.RECEIVE_GAS_AUTOSCAN,\n      payload: tokens,\n    };\n  };\n  const updateBalanceChecked = num => {\n    return {\n      type: actionTypes.UPDATE_BALANCE_CHECKED,\n      payload: num,\n    };\n  };\n  const updateErrChecked = num => {\n    return {\n      type: actionTypes.UPDATE_ERR_CHECKED,\n      payload: num,\n    };\n  };\n  return dispatch => {\n    dispatch(requestTokens(accounts));\n    const tokenListURL =\n      'https://raw.githubusercontent.com/MyEtherWallet/ethereum-lists/master/dist/tokens/eth/tokens-eth.json';\n\n    return fetch(tokenListURL)\n      .then(\n        response => response.json(),\n        error => {\n          console.warn('An error occurred in fetchTokensForAutoScan', error);\n          dispatch(\n            displayGlobalNotification({\n              display: true,\n              type: 'error',\n              msg: 'There was an error scanning tokens for autoscan',\n              duration: 5,\n            })\n          );\n        }\n      )\n      .then(async tokens => {\n        let balancesChecked = 0;\n        let errChecked = 0;\n        tokens.map(token => {\n          accounts.map(account => {\n            // let web3 = new Web3('ws://127.0.0.1:8546');\n\n            // balanceOf(address)\n            const callData = `0x70a08231000000000000000000000000${account\n              .substring(2)\n              .replace(' ', '')}`;\n\n            async function sendTransactionPromise(params) {\n              return new Promise((resolve, reject) => {\n                web3.eth\n                  .call({\n                    to: token.address.replace(' ', ''),\n                    data: callData,\n                  })\n                  .then(result => {\n                    dispatch(updateBalanceChecked((balancesChecked += 1)));\n                    const tokenAmt = web3.utils.toBN(result);\n\n                    const tokenAmtInEther = web3.utils.fromWei(\n                      tokenAmt,\n                      'ether'\n                    );\n\n                    // TODO along with the rest of this action.\n                    // not token name, changing/changed to token address\n                    // if (!tokenAmt.isZero()) {\n                    dispatch(\n                      addObservedToken({\n                        name: token.name,\n                        value: Object.assign({}, token, {\n                          amount: web3.utils.fromWei(tokenAmt, 'ether'),\n                        }),\n                      })\n                    );\n                    // }\n\n                    return null;\n                  })\n                  .catch(error => {\n                    console.error(error);\n                    dispatch(updateErrChecked((errChecked += 1)));\n                    errChecked += 1;\n                  });\n              });\n            }\n\n            sendTransactionPromise();\n\n            // console.log(yield call(sendTransactionPromise, sendParams))\n            // tx = yield call(sendTransactionPromise, sendParams);\n\n            // const promise = new Promise(web3.eth.call({\n            //   to: token.address.replace(' ', ''),\n            //   data: callData\n            // }))\n            // // console.log(promise)\n            // let tokenArray = web3.eth.call({\n            //   to: token.address.replace(' ', ''),\n            //   data: callData\n            // })\n            // .then((result) => {\n            //   console.log(result)\n            //   dispatch(updateBalanceChecked(balancesChecked += 1));\n            //   const tokenAmt = web3.utils.toBN(result);\n            //   return null;\n            // })\n            // .catch(function(error) {\n            //   console.error(error);\n            //   dispatch(updateErrChecked(errChecked += 1));\n            //   errChecked += 1;\n            //   // this.displayGlobalNotification({\n            //   //   display: true,\n            //   //   type: 'error',\n            //   //   msg: 'There was an error tokens for autoscan during a web3 call',\n            //   //   duration: 5,\n            //   // });\n            // });\n          });\n        });\n        // dispatch(receiveTokens(tokens));\n      });\n  };\n};\n\nexport const updateMainDCF = data => dispatch => {\n  dispatch({\n    type: actionTypes.UPDATE_MAIN_DCF,\n    payload: data,\n  });\n};\n\nexport const updateDCFRadio = data => dispatch => {\n  dispatch({\n    type: actionTypes.UPDATE_DCF_RADIO,\n    payload: data,\n  });\n};\n\nexport const updateMainContractAddress = data => dispatch => {\n  dispatch({\n    type: actionTypes.UPDATE_MAIN_CONTRACT_ADDRESS,\n    payload: data,\n  });\n};\n\nexport const updateDeployContractForm = data => dispatch => {\n  dispatch({\n    type: actionTypes.UPDATE_DEPLOY_CONTRACT_FORM,\n    payload: data,\n  });\n};\n\nexport const updateSelectedTransaction = tx => dispatch => {\n  dispatch({\n    type: actionTypes.UPDATE_SELECTED_TRANSACTION,\n    payload: tx,\n  });\n};\n\nexport const clearTransactionToSend = () => dispatch => {\n  dispatch({\n    type: actionTypes.CLEAR_TRANSACTION_TO_SEND,\n  });\n};\n\nexport const updateTransactionConfirmation = cn => dispatch => {\n  dispatch({\n    type: actionTypes.UPDATE_TRANSACTION_CONFIRMATION,\n    payload: cn,\n  });\n};\n\nexport const updateTransaction = txnInfo => dispatch => {\n  dispatch({\n    type: actionTypes.UPDATE_TRANSACTION,\n    payload: txnInfo,\n  });\n};\n\nexport const addTransaction = txHash => dispatch => {\n  dispatch({\n    type: actionTypes.ADD_TRANSACTION,\n    payload: txHash,\n  });\n};\n\nexport const displayGlobalNotification = msg => dispatch => {\n  dispatch({\n    type: actionTypes.DISPLAY_GLOBAL_NOTIFICATION,\n    payload: msg,\n  });\n};\n\nexport const updateTransactionToSend = tx => dispatch => {\n  dispatch({\n    type: actionTypes.UPDATE_TRANSACTION_TO_SEND,\n    payload: tx,\n  });\n};\n\nexport const fetchEthGasStationStats = gasStats => {\n  const requestGas = gasStats => {\n    return {\n      type: actionTypes.REQUEST_GAS_STATS,\n      payload: gasStats,\n    };\n  };\n  const receiveGas = jsonGasStats => {\n    return {\n      type: actionTypes.RECEIVE_GAS_STATS,\n      payload: jsonGasStats,\n    };\n  };\n  return dispatch => {\n    dispatch(requestGas(gasStats));\n    return fetch('https://ethgasstation.info/json/ethgasAPI.json')\n      .then(\n        response => response.json(),\n        error => {\n          console.warn('An error occurred.', error);\n          this.displayGlobalNotification({\n            display: true,\n            type: 'error',\n            msg: 'There was an error fetching gas stats',\n            duration: 5,\n          });\n        }\n      )\n      .then(jsonGasStats => {\n        dispatch(receiveGas(jsonGasStats));\n      });\n  };\n};\n\nexport const emptySelectedContract = empty => dispatch => {\n  dispatch({\n    type: actionTypes.EMPTY_SELECTED_CONTRACT,\n    payload: empty,\n  });\n};\n\nexport const selectedContract = contract => dispatch => {\n  dispatch({\n    type: actionTypes.SET_SELECTED_CONTRACT,\n    payload: contract,\n  });\n};\n\nexport const tokenToDelete = token => dispatch => {\n  dispatch({\n    type: actionTypes.SET_TOKEN_TO_DELETE,\n    payload: token,\n  });\n};\n\nexport const deleteToken = token => dispatch => {\n  dispatch({\n    type: actionTypes.DELETE_TOKEN,\n    payload: token,\n  });\n};\n\nexport const addObservedToken = token => dispatch => {\n  dispatch({\n    type: actionTypes.ADD_OBSERVED_TOKEN,\n    payload: token,\n  });\n};\n\nexport const cancelTokenToWatch = () => dispatch => {\n  dispatch({\n    type: actionTypes.CANCEL_TOKEN_TO_WATCH,\n    payload: '',\n  });\n};\n\nexport const updateTokenToWatch = tokenInfo => dispatch => {\n  dispatch({\n    type: actionTypes.UPDATE_TOKEN_TO_WATCH,\n    payload: tokenInfo,\n  });\n};\n\nexport const addObservedContract = contract => dispatch => {\n  dispatch({\n    type: actionTypes.ADD_OBSERVED_CONTRACT,\n    payload: contract,\n  });\n};\n\nexport const cancelContractToWatch = () => dispatch => {\n  dispatch({\n    type: actionTypes.CANCEL_CONTRACT_TO_WATCH,\n    payload: '',\n  });\n};\n\nexport const updateContractToWatch = contractInfo => dispatch => {\n  dispatch({\n    type: actionTypes.UPDATE_CONTRACT_TO_WATCH,\n    payload: contractInfo,\n  });\n};\n\nexport const closeModal = modalName => dispatch => {\n  dispatch({\n    type: actionTypes.CLOSE_MODAL,\n    payload: modalName,\n  });\n};\n\nexport const displayModal = modalName => dispatch => {\n  dispatch({\n    type: actionTypes.DISPLAY_MODAL,\n    payload: modalName,\n  });\n};\n\nexport const createInitWalletContract = wc => dispatch => {\n  dispatch({\n    type: actionTypes.CREATE_INIT_WALLET_CONTRACT,\n    payload: wc,\n  });\n};\n\nexport const updateEtherPrices = exchangeRates => dispatch => {\n  dispatch({\n    type: actionTypes.UPDATE_EXCHANGE_RATES,\n    payload: exchangeRates,\n  });\n};\n\nexport const emptySelectedWallet = empty => dispatch => {\n  dispatch({\n    type: actionTypes.EMPTY_SELECTED_WALLET,\n    payload: empty,\n  });\n};\n\nexport const selectedWallet = wallet => dispatch => {\n  dispatch({\n    type: actionTypes.SET_SELECTED_WALLET,\n    payload: wallet,\n  });\n};\n\nexport const updateTotalBalance = totalBalance => dispatch => {\n  dispatch({\n    type: actionTypes.UPDATE_TOTAL_BALANCE,\n    payload: totalBalance,\n  });\n};\n\nexport const setWallets = Wallets => dispatch => {\n  dispatch({\n    type: actionTypes.SET_WALLETS,\n    payload: Wallets,\n  });\n};\n\nexport const updateProvider = provider => dispatch => {\n  dispatch({\n    type: actionTypes.UPDATE_PROVIDER,\n    payload: provider,\n  });\n};\n\nexport const updateBlockHeader = blockHeader => dispatch => {\n  dispatch({\n    type: actionTypes.UPDATE_BLOCKHEADER,\n    payload: blockHeader,\n  });\n};\n\nexport const updatePeerCount = PeerCount => dispatch => {\n  dispatch({\n    type: actionTypes.UPDATE_PEERCOUNT,\n    payload: PeerCount,\n  });\n};\n\nexport const updateCurrency = ({ CurrencyUnit }) => dispatch => {\n  dispatch({\n    type: actionTypes.UPDATE_CURRENCY_UNIT,\n    payload: CurrencyUnit,\n  });\n};\n\nexport const updateConnectedNetwork = network => dispatch => {\n  dispatch({\n    type: actionTypes.UPDATE_CONNECTED_NETWORK,\n    payload: network,\n  });\n};\n","import moment from 'moment';\nimport isFinite from 'lodash/isFinite';\nimport Web3 from 'web3';\nimport ethUtils from 'ethereumjs-util';\n\nconst BigNumber = ethUtils.BN;\n\nconst newWeb3 = new Web3();\n\nexport function updateTokenbalances(accounts, wallets, TokenContract) {\n  const addresses = Object.assign({}, accounts, wallets);\n\n  Object.keys(addresses).map(address => {\n    let balance;\n    TokenContract.methods\n      .balanceOf(address)\n      .call()\n      .then(res => {\n        console.log('res', res);\n        balance = res;\n      });\n  });\n}\n\nexport function displayPriceFormatter2(props, balance, currencyOverride) {\n  if (balance === undefined || isNaN(balance) || balance === null) balance = 0;\n  const currency = currencyOverride ? 'ETHER' : props.reducers.currency;\n  const totalBalance = balance.toString();\n  const exchangeRates = props.reducers.exchangeRates;\n  if (exchangeRates === undefined || exchangeRates === null) return;\n  let displayPrice;\n  if (currency === 'FINNEY') {\n    displayPrice = newWeb3.utils.fromWei(totalBalance, 'finney');\n  } else {\n    displayPrice = newWeb3.utils.fromWei(totalBalance, 'ether');\n    if (currency !== 'ETHER') {\n      displayPrice = Number(\n        `${Math.round(\n          `${displayPrice * exchangeRates[currency.toLowerCase()]}e2`\n        )}e-2`\n      );\n    }\n  }\n  return displayPrice;\n}\n/*\nReturns the from now time, using a javascript date obejct if less than 23 hours\n\n@method (timeFromNow)\n@return {String}\n*/\n\nexport function timeFromNow(string) {\n  const diff = new Date() - new Date(string);\n  const hours = parseInt(diff / 360000, 10);\n  if (hours <= 24) return '(Less than a day ago)';\n  return `(Less than ${Math.ceil(hours / 24)} days ago)`;\n}\n\nexport function floatToTime(input) {\n  let str = ' ~';\n  if (input < 1) {\n    str += `${Math.round((input * 60) / 10) * 10} seconds.`;\n  } else if (input < 60) {\n    str += `${Math.ceil(input)} minute(s).`;\n  } else {\n    str += `${Math.ceil(input / 60)} hour(s).`;\n  }\n  return str;\n}\n\nexport function getMinutes(string) {\n  const d = new Date(string);\n  return d.getMinutes();\n}\n\nexport function getHours(string) {\n  const d = new Date(string);\n  return d.getHours();\n}\n\nexport function getYear(string) {\n  const d = new Date(string);\n  return d.getFullYear();\n}\n\nexport function getDayOfWeek(string) {\n  const days = [\n    'Sunday',\n    'Monday',\n    'Tuesday',\n    'Wednesday',\n    'Thursday',\n    'Friday',\n    'Saturday',\n  ];\n  const d = new Date(string);\n  return days[d.getDay()];\n}\n\nexport function getMonthName(string) {\n  const monthNames = [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December',\n  ];\n  const d = new Date();\n  return monthNames[d.getMonth()];\n}\n\nexport function getDate(string) {\n  const d = new Date(string);\n  return d.getDate();\n}\n\nexport function getFullTime(string) {\n  let h = getHours(string);\n  const amORpm = h > 12 ? 'PM' : 'AM';\n  if (h > 12) h %= 12;\n\n  return `${getDayOfWeek(string)}, ${getMonthName(string)} ${getDate(\n    string\n  )}, ${getYear(string)} ${h}:${getMinutes(string)} ${amORpm}`;\n}\n\nexport function toNotWei(totalBalance, currency) {\n  return currency === 'FINNEY'\n    ? newWeb3.utils.fromWei(totalBalance, 'finney')\n    : newWeb3.utils.fromWei(totalBalance, 'ether');\n}\n\nexport function displayPriceFormatter(props, balance, currencyOverride) {\n  if (balance === undefined || isNaN(balance) || balance === null) {\n    balance = new BigNumber(0);\n  }\n  const currency = currencyOverride ? 'ETHER' : props.reducers.currency;\n  const totalBalance = new BigNumber(balance);\n  const exchangeRates = props.reducers.exchangeRates;\n  if (exchangeRates === undefined || exchangeRates === null) return;\n  let displayPrice;\n  if (currency === 'FINNEY') {\n    displayPrice = newWeb3.utils.fromWei(totalBalance, 'finney');\n  } else {\n    displayPrice = newWeb3.utils.fromWei(totalBalance, 'ether');\n    if (currency !== 'ETHER') {\n      displayPrice = Number(\n        `${Math.round(\n          `${displayPrice * exchangeRates[currency.toLowerCase()]}e2`\n        )}e-2`\n      );\n    }\n  }\n  return displayPrice;\n}\n\nexport async function getCryptoComparePrices() {\n  // TODO :  used to update transactions as well\n  // TODO : extraParams field in url\n  let url =\n    'https://min-api.cryptocompare.com/data/pricehistorical?fsym=ETH&tsyms=BTC,USD,EUR,GBP,BRL&ts=';\n  url += moment().unix();\n  return fetch(url)\n    .then(resp => {\n      if (resp && resp.status === 200) return resp.json();\n    })\n    .then(respJSON => {\n      if (respJSON.ETH) {\n        const body = respJSON.ETH;\n        const exchangeRates = {};\n        // eslint-disable-next-line\n        Object.keys(body).map(key => {\n          if (body[key] && isFinite(body[key]))\n            exchangeRates[key.toLowerCase()] = body[key];\n        });\n        return exchangeRates;\n      }\n    })\n    .catch(err => {\n      console.warn(\n        `Cannot connect to https://min-api.cryptocompare.com/ to get price ticker data, \n        please check your internet connection.${err}`\n      );\n      return err;\n    });\n}\n\nexport function s4() {\n  return Math.floor((1 + Math.random()) * 0x10000)\n    .toString(16)\n    .substring(1);\n}\n/**\nCreated random 32 byte string\n\n@method random32Bytes\n*/\nexport function random32Bytes() {\n  let randomBytes;\n  for (let i = 0; i < 16; i++) randomBytes += s4();\n  return randomBytes;\n}\n\nexport async function checkNetwork(web3, cb) {\n  try {\n    return web3.eth\n      .getBlock(0)\n      .then(block => {\n        switch (block.hash) {\n          case '0xd4e56740f876aef8c010b86a40d5f56745a118d0906a34e69aec8c0db1cb8fa3':\n            return 'main';\n          case '0x6341fd3daf94b748c72ced5a5b26028f2474f5f00d824504e4fa37a75767e177':\n            return 'rinkeby';\n          case '0x41941023680923e0fe4d74a34bdac8141f2540e3ae90623718e47d66d1ca4a2d':\n            return 'ropsten';\n          case '0xa3c565fc15c7478862d50ccd6561e3c06b24cc509bf388941c25ea985ce32cb9':\n            return 'kovan';\n          default:\n            return 'private';\n        }\n      })\n      .then(resp => cb(resp));\n  } catch (err) {\n    console.warn('web3 provider not open');\n    return err;\n  }\n}\n\nexport function nameProvider(prov) {\n  switch (prov.constructor.name) {\n    case 'MetamaskInpageProvider':\n      return 'metamask';\n    case 'WebsocketProvider':\n      return 'geth';\n    default:\n      return 'unknown';\n  }\n}\n\nexport function createNewAccount(web3, cb) {\n  alert('https://github.com/ethereum/web3.js/issues/494');\n  alert('https://github.com/ethereum/go-ethereum/issues/2723');\n}\n\nexport function getAccounts(web3, setWallets, updateTotalBalance) {\n  try {\n    web3.eth.getAccounts().then(accounts => {\n      let totalBalance = new BigNumber(0);\n      accounts.forEach(acc => {\n        const account = acc;\n        web3.eth.getBalance(acc, (err, balance) => {\n          setWallets({ account, balance: new BigNumber(balance) });\n          totalBalance = totalBalance.add(new BigNumber(balance));\n          updateTotalBalance(totalBalance);\n        });\n      });\n    });\n  } catch (err) {\n    console.warn('web3 provider not open');\n    return err;\n  }\n}\n\nexport function listenForIncomingTransactions(web3, accounts) {\n  // console.log('listenForIncomingTransactions');\n  // try {\n  //   let subscription = web3.eth\n  //     .subscribe('pendingTransactions', (err, res) => {\n  //       if (err) console.log(err);\n  //       if (res) {\n  //         console.log(res);\n  //       }\n  //     })\n  //     .on('data', function(transaction) {\n  //       console.log(transaction);\n  //     })\n  //     .on('error', function(error) {\n  //       console.log(error);\n  //     });\n  // } catch (err) {\n  //   console.warn('err in listen');\n  // }\n}\n\nexport function updatePendingConfirmations(\n  block,\n  web3,\n  transactions,\n  updateTransaction\n) {\n  if (!transactions) return;\n\n  const pending = Object.keys(transactions).filter(tx => {\n    return transactions[tx].confirmationNumber === 'Pending';\n  });\n\n  if (pending.length === 0) return;\n\n  const currentBlock = block.number;\n  pending.map((txHash, index) => {\n    web3.eth.getTransactionReceipt(txHash).then(receipt => {\n      if (receipt === null) return;\n      const confirmations = currentBlock - receipt.blockNumber;\n      receipt.confirmationNumber = confirmations;\n      updateTransaction({\n        name: [receipt.transactionHash],\n        value: receipt,\n      });\n    });\n  });\n}\n\nexport function updateTransactionConfirmation(\n  block,\n  web3,\n  transactions,\n  updateTransactionConfirmation\n) {\n  if (!transactions) return;\n\n  const unconfirmed = Object.keys(transactions).filter(tx => {\n    return (\n      transactions[tx].confirmationNumber !== 'Pending' &&\n      transactions[tx].confirmationNumber < 12\n    );\n  });\n\n  if (unconfirmed.length === 0) return;\n\n  const currentBlock = block.number;\n  unconfirmed.map((txHash, index) => {\n    web3.eth.getTransaction(txHash, (error, tx) => {\n      if (error) console.warn('error with transaction hash: ', txHash);\n      const confirmations = currentBlock - tx.blockNumber;\n      updateTransactionConfirmation({\n        name: [txHash],\n        value: confirmations,\n      });\n    });\n  });\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport shortid from 'shortid';\n\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { Identicon } from 'ethereum-react-components';\nimport { updateSelectedTransaction, displayModal } from '../../actions/actions';\n\nimport {\n  getMonthName,\n  getDate,\n  displayPriceFormatter,\n} from '../../utils/utils';\n\n// snapshotted\nconst TransactionInfo = props => {\n  const cn = props.tx.confirmationNumber;\n  return (\n    <td className=\"info\">\n      {cn === 'Pending'\n        ? 'Pending...'\n        : cn > 12\n        ? '12 of 12 Confirmations'\n        : `${cn} of 12 Confirmations`}\n    </td>\n  );\n};\n\nconst MinusIcon = () => {\n  return (\n    <td>\n      <i className=\"icon-arrow-right minus\" />\n    </td>\n  );\n};\n\nconst DateInfo = props => {\n  return (\n    <td\n      className=\"time simptip-position-right simptip-movable\"\n      data-tool-tip={props.tx.dateSent}\n    >\n      <h2>{getMonthName(props.tx.dateSent)}</h2>\n      <p>{getDate(props.tx.dateSent)}</p>\n    </td>\n  );\n};\n\nconst PendingIcons = props => {\n  return (\n    <React.Fragment>\n      <i className=\"icon-ban\" />\n      <i className=\"icon-reload\" />\n    </React.Fragment>\n  );\n};\n\nexport class TransactionItem extends Component {\n  constructor(props) {\n    super(props);\n    this.updateToTransaction = this.updateToTransaction.bind(this);\n  }\n\n  renderProgressBar(tx) {\n    this.state = {\n      completed:\n        tx.confirmationNumber !== 'Pending' ? tx.confirmationNumber : 0,\n    };\n    return (\n      <React.Fragment>\n        {tx.confirmationNumber === 'Pending' ? (\n          <LinearProgress />\n        ) : (\n          <LinearProgress\n            variant=\"determinate\"\n            value={(100 / 12) * this.state.completed}\n          />\n        )}\n      </React.Fragment>\n    );\n  }\n\n  updateToTransaction(e) {\n    e.stopPropagation();\n    console.warn('todo: moved from security icon and need to pudate');\n  }\n\n  renderAddressLink(address) {\n    return (\n      <span className=\"address dapp-shorten-text not-ens-name\">\n        <Identicon\n          classes=\"dapp-identicon dapp-tiny\"\n          title\n          size=\"tiny\"\n          address={address}\n        />\n        <Link\n          to={{ pathname: `/send-from/${address}` }}\n          title={address}\n          onClick={e => this.updateToTransaction(e)}\n        >\n          {address}\n        </Link>\n      </span>\n    );\n  }\n\n  // snapshotted\n  renderTransactionType(tx) {\n    // TODO: transaction type\n    return (\n      <td className=\"account-name\">\n        <h2>{tx.transactionType ? tx.transactionType : 'Transaction Type'}</h2>\n        <p>\n          {this.renderAddressLink(tx.from)}\n          <span className=\"arrow\">→</span>\n          {this.renderAddressLink(tx.to)}\n        </p>\n      </td>\n    );\n  }\n\n  // snapshotted\n  renderTransactionAmount(tx) {\n    return (\n      <td className=\"transaction-amount minus\">\n        - {`${displayPriceFormatter(this.props, tx.value, 'ETHER')} ETHER`}\n      </td>\n    );\n  }\n\n  render() {\n    const tx = this.props.transaction;\n    return (\n      <tr\n        className={tx.confirmationNumber === 'Pending' ? 'unconfirmed' : ''}\n        key={shortid.generate()}\n        data-transaction-hash={tx.transactionHash}\n        data-block-hash={tx.blockHash}\n        onClick={e => {\n          if (e.target.tagName !== 'A') {\n            this.props.updateSelectedTransaction(tx);\n            this.props.displayModal('displayTransaction');\n          }\n        }}\n      >\n        <DateInfo tx={tx} />\n        {this.renderTransactionType(tx)}\n        <td>{tx.confirmationNumber === 'Pending' ? <PendingIcons /> : null}</td>\n        <TransactionInfo tx={tx} />\n        {this.renderTransactionAmount(tx)}\n        <MinusIcon />\n      </tr>\n    );\n  }\n}\nconst mapStateToProps = state => ({\n  ...state,\n});\n\nexport default connect(\n  mapStateToProps,\n  {\n    updateSelectedTransaction,\n    displayModal,\n  }\n)(TransactionItem);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport shortid from 'shortid';\n\nimport TransactionItem from './TransactionItem';\n\nconst sortOptionsArr = [\n  {\n    displayName: 'Confirmations',\n    txKey: 'confirmationNumber',\n  },\n  {\n    displayName: 'Date',\n    txKey: 'dateSent',\n  },\n  {\n    displayName: 'Nonce (experimental)',\n    txKey: 'none',\n  },\n  {\n    displayName: 'Amount',\n    txKey: 'value',\n  },\n  {\n    displayName: 'Gas Used',\n    txKey: 'gasUsed',\n  },\n  {\n    displayName: 'Block Number',\n    txKey: 'blockNumber',\n  },\n];\n\nconst searchOptionsArr = [\n  {\n    displayName: 'To',\n    txKey: 'to',\n  },\n  {\n    displayName: 'From',\n    txKey: 'from',\n  },\n  {\n    displayName: 'TransactionType (experimental)',\n    txKey: 'transactionType',\n  },\n];\n\nexport class LatestTransactions extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ...this.props,\n      filterOptions: {\n        searchValue: '',\n        searchField: 'none',\n        ascending: 'false',\n        sortOption: 'dateSent',\n      },\n      filteredTransactions: [],\n    };\n\n    this.fetchTransactions = this.fetchTransactions.bind(this);\n    this.updateSearchValue = this.updateSearchValue.bind(this);\n    this.filterSearchValue = this.filterSearchValue.bind(this);\n    this.selectSearchField = this.selectSearchField.bind(this);\n    this.selectSortOption = this.selectSortOption.bind(this);\n    this.sortOptions = this.sortOptions.bind(this);\n    this.toggleSortDirection = this.toggleSortDirection.bind(this);\n    this.sortTransactions = this.sortTransactions.bind(this);\n  }\n\n  // shouldComponentUpdate(prevProps, prevState) {\n  //   console.log(this.state.filterOptions)\n  //   console.log(prevState.filterOptions)\n  //   console.log(this.state)\n  //   if (this.props.transactions !== prevProps.transactions) {\n  //     this.filterSearchValue();\n  //     this.sortOptions();\n  //     this.sortTransactions();\n  //     return true;\n  //   }\n  //   if (this.state.filterOptions !== prevState.filterOptions) {\n  //     this.filterSearchValue();\n  //     this.sortOptions();\n  //     this.sortTransactions();\n  //     return true;\n  //   }\n  //   return false;\n  // }\n\n  fetchTransactions() {\n    let transactions = this.state.filteredTransactions;\n    if (transactions.length === 0) {\n      transactions = Object.keys(this.props.transactions).map(\n        key => this.props.transactions[key]\n      );\n    }\n    return transactions;\n  }\n\n  selectSortOption(e) {\n    this.setState({\n      filterOptions: {\n        ...this.state.filterOptions,\n        sortOption: e.target.value,\n      },\n    });\n    this.sortOptions();\n  }\n\n  sortOptions(e) {\n    console.log(this.state);\n    const transactions = this.fetchTransactions();\n    const field = this.state.filterOptions.sortOption;\n\n    if (\n      this.state.filterOptions.sortOption !== 'none' &&\n      this.state.filterOptions.sortOption !== ''\n    ) {\n      const sorted = transactions.sort((a, b) => {\n        return b[field] - a[field];\n      });\n      this.setState({ filteredTransactions: sorted });\n    } else {\n      this.setState({ filteredTransactions: transactions });\n    }\n  }\n\n  updateSearchValue(e) {\n    console.log(e.target.value);\n    this.setState(\n      {\n        filterOptions: {\n          ...this.state.filterOptions,\n          searchValue: e.target.value,\n        },\n      },\n      this.filterSearchValue()\n    );\n  }\n\n  filterSearchValue(e) {\n    const transactions = this.fetchTransactions();\n    console.log(transactions);\n    console.log(this.state.filterOptions);\n    if (\n      this.state.filterOptions.searchValue !== '' &&\n      this.state.filterOptions.searchField !== 'none'\n    ) {\n      const filteredArr = transactions.filter(tx => {\n        const txValue = tx[this.state.filterOptions.searchField].toLowerCase();\n        const searchValue = this.state.filterOptions.searchValue.toLowerCase();\n        return txValue.includes(searchValue);\n      });\n      console.log(filteredArr);\n      this.setState({ filteredTransactions: filteredArr });\n    } else {\n      this.setState({ filteredTransactions: transactions });\n    }\n  }\n\n  selectSearchField(e) {\n    this.setState({\n      filterOptions: {\n        ...this.state.filterOptions,\n        searchField: e.target.value,\n      },\n    });\n    // this.filterSearchValue();\n  }\n\n  toggleSortDirection(e) {\n    this.setState({\n      filterOptions: {\n        ...this.state.filterOptions,\n        ascending: !this.state.filterOptions.ascending,\n      },\n    });\n    this.sortTransactions();\n  }\n\n  sortTransactions() {\n    this.setState({\n      filteredTransactions: this.state.filteredTransactions.reverse(),\n    });\n  }\n\n  renderSearchField() {\n    return (\n      <React.Fragment>\n        <h2>Latest transactions</h2>\n        <br />\n        <input\n          type=\"text\"\n          className=\"filter-transactions\"\n          placeholder=\"Filter transactions\"\n          onKeyUp={e => this.updateSearchValue(e)}\n        />\n        <select\n          style={{ marginLeft: '20px' }}\n          onChange={e => this.selectSearchField(e)}\n          value={this.state.filterOptions.searchField}\n        >\n          <option key={shortid.generate()} value=\"none\" />\n          {searchOptionsArr.map((val, i) => (\n            <option key={shortid.generate()} value={val.txKey}>\n              {val.displayName}\n            </option>\n          ))}\n        </select>\n      </React.Fragment>\n    );\n  }\n\n  renderSortOptions() {\n    return (\n      <React.Fragment>\n        <select\n          style={{ marginLeft: '20px' }}\n          onChange={e => this.selectSortOption(e)}\n          value={this.state.filterOptions.sortOption}\n        >\n          <option key={shortid.generate()} value=\"none\" />\n          {sortOptionsArr.map((val, i) => (\n            <option key={shortid.generate()} value={val.txKey}>\n              {val.displayName}\n            </option>\n          ))}\n        </select>\n      </React.Fragment>\n    );\n  }\n\n  renderDirectionalIcon() {\n    const icon = this.state.filterOptions.ascending ? 'up' : 'down';\n    return (\n      <i\n        className={`icon-arrow-${icon}`}\n        style={{ marginLeft: '20px' }}\n        onClick={e => this.toggleSortDirection(e)}\n      />\n    );\n  }\n\n  renderTransactions() {\n    // console.log(this.state)\n    // let transactions = this.state.transactions;\n    let transactions;\n    if (this.state.filteredTransactions.length !== 0) {\n      transactions = this.state.filteredTransactions;\n    } else {\n      transactions = Object.keys(this.props.transactions).map(hash => {\n        return this.props.transactions[hash];\n      });\n    }\n\n    // let transactions = this.state.filteredTransactions;\n    // let txArr = Object.keys(transactions).map(hash => {\n    //   return transactions[hash];\n    // });\n    return (\n      <table className=\"dapp-zebra transactions\">\n        <tbody>\n          {transactions.map(tx => (\n            <TransactionItem key={shortid.generate()} transaction={tx} />\n          ))}\n        </tbody>\n      </table>\n    );\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        {this.renderSearchField()}\n        {this.renderSortOptions()}\n        {this.renderDirectionalIcon()}\n        {this.renderTransactions()}\n      </React.Fragment>\n    );\n  }\n}\nconst mapStateToProps = state => ({\n  ...state,\n});\n\nexport default connect(\n  mapStateToProps,\n  null\n)(LatestTransactions);\n","import React from 'react';\n\nexport const NoMatchingTransaction = () => {\n  return (\n    <table className=\"dapp-zebra transactions\">\n      <tbody>\n        <tr className=\"full-width\">\n          <td colSpan=\"3\">No matching transactions found.</td>\n        </tr>\n      </tbody>\n    </table>\n  );\n};\n\nexport default NoMatchingTransaction;\n","// \"0x11485c5f164d6a67a72eee9093b2581d1c304094\"\n\n// Token Interface\n\nexport const tokenInterface = [\n  {\n    type: 'function',\n    name: 'name',\n    constant: true,\n    inputs: [],\n    outputs: [\n      {\n        name: '',\n        type: 'string',\n      },\n    ],\n  },\n  {\n    type: 'function',\n    name: 'decimals',\n    constant: true,\n    inputs: [],\n    outputs: [\n      {\n        name: '',\n        type: 'uint8',\n      },\n    ],\n  },\n  {\n    type: 'function',\n    name: 'balanceOf',\n    constant: true,\n    inputs: [\n      {\n        name: '',\n        type: 'address',\n      },\n    ],\n    outputs: [\n      {\n        name: '',\n        type: 'uint256',\n      },\n    ],\n  },\n  {\n    type: 'function',\n    name: 'symbol',\n    constant: true,\n    inputs: [],\n    outputs: [\n      {\n        name: '',\n        type: 'string',\n      },\n    ],\n  },\n  {\n    type: 'function',\n    name: 'transfer',\n    constant: false,\n    inputs: [\n      {\n        name: '_to',\n        type: 'address',\n      },\n      {\n        name: '_value',\n        type: 'uint256',\n      },\n    ],\n    outputs: [],\n  },\n  {\n    type: 'constructor',\n    inputs: [\n      {\n        name: '_supply',\n        type: 'uint256',\n      },\n      {\n        name: '_name',\n        type: 'string',\n      },\n      {\n        name: '_decimals',\n        type: 'uint8',\n      },\n      {\n        name: '_symbol',\n        type: 'string',\n      },\n    ],\n  },\n  {\n    name: 'Transfer',\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        name: 'from',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        name: 'to',\n        type: 'address',\n      },\n      {\n        indexed: false,\n        name: 'value',\n        type: 'uint256',\n      },\n    ],\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: '_spender',\n        type: 'address',\n      },\n      {\n        name: '_value',\n        type: 'uint256',\n      },\n    ],\n    name: 'approve',\n    outputs: [\n      {\n        name: 'success',\n        type: 'bool',\n      },\n    ],\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        name: '',\n        type: 'address',\n      },\n      {\n        name: '',\n        type: 'address',\n      },\n    ],\n    name: 'allowance',\n    outputs: [\n      {\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'totalSupply',\n    outputs: [{ name: '', type: 'uint256' }],\n    payable: false,\n    type: 'function',\n  },\n];\n\n// TokenContract = new web3.eth.Contract(tokenInterface);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport shortid from 'shortid';\n\nimport NumberFormat from 'react-number-format';\nimport { Identicon } from 'ethereum-react-components';\nimport { selectedWallet } from '../../actions/actions';\nimport * as Utils from '../../utils/utils';\nimport * as Actions from '../../actions/actions';\n\nimport { tokenInterface } from '../../constants/TokenInterfaceConstant';\nimport web3 from '../../web3';\n\nexport class TokenListForItems extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  getTokenBalanceForAddress(untrackedTokens) {\n    const walletAddress = this.props.address;\n    const ObservedTokens = this.props.ObservedTokens;\n\n    // if observedTokens Empty\n    // or if no tokens in walletaddress\n    // then return\n    if (ObservedTokens) {\n      untrackedTokens.map(tokenAddress => {\n        const TokenContract = new web3.eth.Contract(tokenInterface);\n        TokenContract.options.address = tokenAddress;\n\n        try {\n          TokenContract.methods\n            .balanceOf(walletAddress)\n            .call()\n            .then(result => {\n              if (result == 0) {\n                return;\n              }\n\n              const tokenResult = ObservedTokens[tokenAddress];\n              tokenResult.balance = result;\n\n              if (this.props.addressType === 'Wallets') {\n                this.props.updateAccountTokenBalance({\n                  account: walletAddress,\n                  value: tokenResult,\n                  tokenAddress,\n                });\n                return;\n              }\n              if (this.props.addressType === 'WalletContracts') {\n                this.props.updateContractTokenBalance({\n                  account: walletAddress,\n                  value: tokenResult,\n                  tokenAddress,\n                });\n              }\n            });\n        } catch (err) {\n          console.warn('Err :', err);\n          this.props.displayGlobalNotification({\n            display: true,\n            type: 'error',\n            msg: err.message,\n          });\n        }\n      });\n    }\n  }\n\n  render() {\n    const address = this.props.address;\n\n    const currentObservedTokens = new Set(\n      Object.keys(this.props.ObservedTokens)\n    );\n    console.log(currentObservedTokens);\n\n    let tokenCheck;\n\n    // TODO: should extract this javascript into separate function\n    // returns null html\n    console.log(this.props.addressType);\n    if (this.props.addressType === 'Wallets') {\n      tokenCheck = this.props.Wallets[address].tokens;\n    } else if (this.props.addressType === 'WalletContracts') {\n      tokenCheck = this.props.WalletContracts[address].tokens;\n    } else {\n      return null;\n    }\n\n    const currentWalletsTokens = tokenCheck || [];\n\n    console.log(currentObservedTokens);\n    console.log(currentWalletsTokens);\n    console.log(tokenCheck);\n\n    if (\n      // currentObservedTokens !== undefined || currentWalletsTokens !== undefined\n      // &&\n      tokenCheck !== undefined\n    ) {\n      const trackedTokens = new Set(Object.keys(currentWalletsTokens));\n      console.log(trackedTokens);\n      const untrackedTokens = Array.from(\n        new Set([...currentObservedTokens].filter(x => !trackedTokens.has(x)))\n      );\n      console.log(untrackedTokens);\n      this.getTokenBalanceForAddress(untrackedTokens);\n    }\n\n    const tokens = tokenCheck;\n    console.log('renders countAmount / walletContracts+wallets ', tokens);\n\n    return (\n      <ul className=\"token-list\">\n        {tokens === undefined\n          ? null\n          : Object.keys(tokens).map(token => (\n              <li\n                key={shortid.generate()}\n                data-tooltip={`${tokens[token].name} (${\n                  tokens[token].balance\n                } ${tokens[token].symbol})`}\n                className=\"simptip-position-right simptip-movable\"\n              >\n                <Identicon\n                  classes=\"dapp-identicon dapp-tiny\"\n                  title\n                  size=\"tiny\"\n                  address={tokens[token].address}\n                />\n              </li>\n            ))}\n      </ul>\n    );\n  }\n}\n\n// const mapStateToProps = state => {\n//   return state;\n// };\n\nconst mapStateToProps = state => ({\n  ObservedTokens: state.reducers.ObservedTokens,\n  Wallets: state.reducers.Wallets,\n  WalletContracts: state.reducers.WalletContracts,\n});\n\nexport default connect(\n  mapStateToProps,\n  { ...Actions }\n)(TokenListForItems);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport NumberFormat from 'react-number-format';\nimport { EthAddress, Identicon } from 'ethereum-react-components';\nimport { selectedWallet } from '../../actions/actions';\nimport { displayPriceFormatter } from '../../utils/utils';\nimport TokenListForItems from './TokenListForItems';\n\nexport class AccountItem extends Component {\n  constructor(props) {\n    super(props);\n    this.openAccountPage = this.openAccountPage.bind(this);\n  }\n\n  shouldComponentUpdate(prevProps, prevState) {\n    if (this.props.wallet !== prevProps.wallet) {\n      return true;\n    }\n    if (this.props.currency !== prevProps.currency) {\n      return true;\n    }\n    if (\n      this.props.reducers.exchangeRates !== prevProps.reducers.exchangeRates\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  openAccountPage(w) {\n    this.props.selectedWallet({\n      address: this.props.address,\n      number: this.props.number,\n      wallet: this.props.wallet,\n      currency: this.props.currency,\n      addressType: 'account',\n    });\n  }\n\n  renderBalance() {\n    const { wallet } = this.props;\n    return (\n      <React.Fragment>\n        <NumberFormat\n          className=\"account-balance\"\n          value={displayPriceFormatter(this.props, wallet.balance)}\n          displayType=\"text\"\n          thousandSeparator\n        />\n        <span> {this.props.currency} </span>\n      </React.Fragment>\n    );\n  }\n\n  renderTokens() {\n    const ot = this.props.ObservedTokens;\n    const tokenList = this.props.wallet.tokens;\n    const displayTokens =\n      (Object.keys(ot).length !== 0 && ot.constructor === Object) ||\n      tokenList !== undefined;\n    return (\n      <React.Fragment>\n        {displayTokens ? (\n          <TokenListForItems\n            addressType={this.props.addressType}\n            address={this.props.address}\n          />\n        ) : null}\n      </React.Fragment>\n    );\n  }\n\n  renderName() {\n    const { number } = this.props;\n    const { name } = this.props.wallet;\n    return (\n      <h3 className=\"not-ens-name\">\n        <i className={this.props.icon} title=\"Account\" />\n        &nbsp;\n        {!name ? `Account ${number}` : name}\n      </h3>\n    );\n  }\n\n  render() {\n    const { address } = this.props;\n    const AccountURL = `/account/${address}`;\n\n    return (\n      <React.Fragment>\n        <Link\n          to={{ pathname: AccountURL }}\n          onClick={this.openAccountPage}\n          className=\"wallet-box\"\n        >\n          <Identicon\n            classes=\"dapp-identicon dapp-small\"\n            title\n            size=\"small\"\n            address={address}\n          />\n          {this.renderTokens()}\n          {this.renderName()}\n          {this.renderBalance()}\n          <EthAddress short classes=\"account-id\" address={address} />\n        </Link>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  { selectedWallet }\n)(AccountItem);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport shortid from 'shortid';\nimport AccountItem from './elements/AccountItem';\n\nexport class Addresses extends Component {\n  render() {\n    if (this.props.reducers.Wallets !== undefined) {\n      const wallets = this.props.reducers.Wallets;\n      const icon = 'icon-key';\n      return (\n        <div className=\"wallet-box-list\">\n          {Object.keys(wallets).map((address, i) => (\n            <AccountItem\n              key={shortid.generate()}\n              number={i + 1}\n              icon={icon}\n              address={address}\n              wallet={wallets[address]}\n              currency={this.props.reducers.currency}\n              reducers={this.props.reducers}\n              ObservedTokens={this.props.reducers.ObservedTokens}\n              addressType=\"Wallets\"\n              index={i}\n            />\n          ))}\n        </div>\n      );\n    }\n  }\n}\n\nconst mapStateToProps = state => {\n  return state;\n};\n\nexport default connect(mapStateToProps)(Addresses);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport makeBlockie from 'ethereum-blockies-base64';\nimport { updateTransactionToSend } from '../../actions/actions';\n\nconst ToolTip = props => {\n  return (\n    <span\n      className={props.classes}\n      title=\"This is a security icon.  If there were any change to the address,\n    the resulting icon would be a completely different one\"\n      src={props.icon}\n      style={props.divStyle}\n    >\n      <img\n        src={props.icon}\n        style={props.divStyle}\n        className=\"identicon-pixel\"\n        alt=\"\"\n      />\n    </span>\n  );\n};\n\nexport const SecurityIcon = props => {\n  const icon = makeBlockie(props.hash);\n  const divStyle = {\n    backgroundImage: `url(${icon})`,\n  };\n  function updateToTransaction(e) {\n    e.stopPropagation();\n    updateTransactionToSend({\n      name: 'to',\n      value: props.hash,\n    });\n  }\n  const { classes } = props;\n  return (\n    <React.Fragment>\n      <ToolTip classes={classes} icon={icon} divStyle={divStyle} />\n      {props.type === 'transactionHref' ? (\n        <Link\n          to={{ pathname: `/send-from/${props.hash}` }}\n          title={props.hash}\n          onClick={e => updateToTransaction(e)}\n        >\n          {props.hash}\n        </Link>\n      ) : (\n        ''\n      )}\n      {props.type === 'accountRoute' ? (\n        <Link to={{ pathname: `/account/${props.hash}` }} title={props.hash}>\n          {props.hash}\n        </Link>\n      ) : (\n        ''\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default connect(\n  null,\n  { updateTransactionToSend }\n)(SecurityIcon);\n","/**\nHelper functions\n* */\n\n/**\nThe Helpers class containing helper functions\n* */\n// TODO\n// Helpers = {};\n\n/**\nGet the default contract example\n@method getDefaultContractExample\n* */\n// TODO\n// Helpers.getDefaultContractExample = function(withoutPragma) {\n//   var source =\n//     'contract MyContract {\\n    /* Constructor */\\n    function MyContract() public {\\n\\n    }\\n}';\n\n//   if (withoutPragma) {\n//     return source;\n//   } else {\n//     var solcVersion;\n\n//     // Keep this for now as the Mist-API object will only be availabe from Mist version >= 0.8.9\n//     // so that older versions that will query code from wallet.ethereum.org won't use broken example code.\n//     if (typeof mist !== 'undefined' && mist.solidity && mist.solidity.version) {\n//       solcVersion = mist.solidity.version;\n//     } else {\n//       solcVersion = '0.4.6';\n//     }\n//     return 'pragma solidity ^' + solcVersion + ';\\n\\n' + source;\n//   }\n// };\n\n/**\nReruns functions reactively, based on an interval. Use it like so:\n\n    Helpers.rerun['10s'].tick();\n\n\n@method rerun\n* */\n\n// Helpers.rerun = {\n//   '10s': new ReactiveTimer(10),\n//   '1s': new ReactiveTimer(1)\n// };\n\n/**\nSort method for accounts and wallets to sort by balance\n\n@method sortByBalance\n* */\n// TODO\n\n// Helpers.sortByBalance = function(a, b) {\n//   return !b.disabled &&\n//     new BigNumber(b.balance, 10).gt(new BigNumber(a.balance, 10))\n//     ? 1\n//     : -1;\n// };\n\nexport function returnAddressName(address, props) {\n  const wallets = props.reducers.Wallets;\n  const walletArray = Object.keys(wallets).map(key => key);\n  const walletContracts = props.reducers.WalletContracts;\n  const walletContractArray = Object.keys(walletContracts).map(key => key);\n  const observedContracts = props.reducers.ObservedContracts;\n  const observedContractsArray = Object.keys(observedContracts).map(key => key);\n  const observedTokens = props.reducers.ObservedTokens;\n  const observedTokensArray = Object.keys(observedTokens).map(key => key);\n  let name;\n  if (walletArray.includes(address)) {\n    name = wallets[address].name;\n    // name || `Account ${wallets[address]}`;\n  } else if (walletContractArray.includes(address)) {\n    name = walletContracts[address]['contract-name'];\n  } else if (observedContractsArray.includes(address)) {\n    name = observedContracts[address]['contract-name'];\n  } else if (observedTokensArray.includes(address)) {\n    name = observedTokens[address].name;\n  }\n  return name;\n}\n\n/**\nSort method for accounts and wallets to sort by balance and remove empty addresses;\n\n@method sortByBalance\n* */\nexport function sortByBalance(wallets) {\n  return wallets\n    .filter(wallet => wallet.balance != 0)\n    .sort((a, b) => b.balance - a.balance);\n}\n\nexport function combineWallets(addresses, walletContracts) {\n  return sortByBalance(\n    Object.keys(addresses)\n      .map(address => {\n        return {\n          ...addresses[address],\n          address,\n          addressType: 'walletAddress',\n        };\n      })\n      .concat(\n        Object.keys(walletContracts).map(address => {\n          const contract = walletContracts[address];\n          return {\n            ...walletContracts,\n            address,\n            addressType: 'contractAddress',\n          };\n        })\n      )\n  );\n}\n\n/**\nReturn an account you own, from a list of accounts\n\n@method getOwnedAccountFrom\n@param {Array} accountList array of account addresses\n@return {Mixed} the account address of an account owned\n* */\n\n// TODO\n// Helpers.getOwnedAccountFrom = function(accountList) {\n//   // Load the accounts owned by user and sort by balance\n//   var accounts = EthAccounts.find({}, { sort: { balance: 1 } }).fetch();\n//   accounts.sort(Helpers.sortByBalance);\n\n//   // Looks for them among the wallet account owner\n//   var fromAccount = _.find(accounts, function(acc) {\n//     return accountList.indexOf(acc.address.toLowerCase()) >= 0;\n//   });\n\n//   return fromAccount ? fromAccount.address : '';\n// };\n\n/**\nClear localStorage\n\n@method getLocalStorageSize\n* */\nexport function getLocalStorageSize(localStorage) {\n  let size = 0;\n  if (localStorage) {\n    size += Object.keys(localStorage).map(key => {\n      return (localStorage[key].length * 2) / 1024 / 1024;\n    });\n  }\n\n  return size;\n}\n\n/**\nMake a ID out of a given hash and prefix.\n\n@method makeId\n@param {String} prefix\n@param {String} hash\n*/\nexport function makeId(prefix, hash) {\n  return typeof hash === 'string' || hash instanceof String\n    ? `${prefix}_${hash.replace('0x', '').substr(0, 10)}`\n    : null;\n}\n\n// https://stackoverflow.com/questions/1349404/generate-random-string-characters-in-javascript\nexport function makeID() {\n  let text = '';\n  const possible =\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  for (let i = 0; i < 5; i++)\n    text += possible.charAt(Math.floor(Math.random() * possible.length));\n  return text;\n}\n\n/**\nFormat a number based on decimal numbers\n\n@method formatNumberByDecimals\n@param {Number} number\n@param {Number} decimals\n*/\n\n// TODO\n// export function formatNumberByDecimals(number, decimals) {\n//   var numberFormat = '0,0.';\n\n//   for (var i = 0; i < Number(decimals); i++) {\n//     numberFormat += '0';\n//   }\n\n//   return EthTools.formatNumber(\n//     new BigNumber(number, 10).dividedBy(Math.pow(10, decimals)),\n//     numberFormat,\n//   );\n// }\n\n/**\nDisplay logs in the console for events.\n\n@method eventLogs\n*/\nexport function eventLogs(args) {\n  console.log('EVENT LOG: ', args);\n}\n\n/**\nCheck if we are on the correct chain and display an error.\n\n@method checkChain\n@param {Function} callback provide a callback, to get notified if successfull or error (will contain an error object as first parameter, if error)\n*/\n// TODO\n// export async function checkChain(callback) {\n//   // TODO deactivated for now!!! because we are using full contracts\n//   return callback(null);\n\n//   web3.eth.getCode(originalContractAddress, function(e, code) {\n//     if (code && code.length <= 2) {\n//       if (_.isFunction(callback)) callback('Wrong chain!');\n//     } else if (_.isFunction(callback)) callback(null);\n//   });\n// };\n\n/**\nCheck if the given wallet is a watch only wallet, by checking if we are one of owners in the wallet.\n\n@method isWatchOnly\n@param {String} id the id of the wallet to check\n*/\n// TODO\n// Helpers.isWatchOnly = function(id) {\n//   return !Wallets.findOne({\n//     _id: id,\n//     owners: { $in: _.pluck(EthAccounts.find({}).fetch(), 'address') }\n//   });\n// };\n\n/**\nShows a notification and plays a sound\n\n@method showNotification\n@param {String} i18nText\n@param {Object} the i18n values passed to the i18n text\n*/\n// . TODO\n// Helpers.showNotification = function(i18nText, values, callback) {\n//   if (Notification.permission === 'granted') {\n//     var notification = new Notification(\n//       TAPi18n.__(i18nText + '.title', values),\n//       {\n//         // icon: 'http://cdn.sstatic.net/stackexchange/img/logos/so/so-icon.png',\n//         body: TAPi18n.__(i18nText + '.text', values),\n//       },\n//     );\n\n//     if (_.isFunction(callback)) notification.onclick = callback;\n//   }\n//   if (typeof mist !== 'undefined') mist.sounds.bip();\n// };\n\n/**\nGets the docuement matching the given addess from the EthAccounts or Wallets collection.\n\n@method getAccountByAddress\n@param {String} address\n@param {Boolean} reactive\n*/\n// TODO\n// export function getAccountByAddress(address, reactive) {\n//   var options = reactive === false ? { reactive: false } : {};\n//   // if(_.isString(address))\n//   //     address = address.toLowerCase();\n//   return (\n//     EthAccounts.findOne({ address: address }, options) ||\n//     Wallets.findOne({ address: address }, options) ||\n//     CustomContracts.findOne({ address: address }, options)\n//   );\n// }\n\n/**\nGets the docuement matching the given query from the EthAccounts or Wallets collection.\n\n@method getAccounts\n@param {String} query\n@param {Boolean} reactive\n*/\n// TODO\n// export function getAccounts(query, reactive) {\n//   var options = reactive === false ? { reactive: false } : {};\n//   if (_.isString(query.address)) query.address = query.address.toLowerCase();\n//   return EthAccounts.find(query, options)\n//     .fetch()\n//     .concat(Wallets.find(query, options).fetch());\n// }\n\n/**\nGets the docuement matching the given addess from the EthAccounts or Wallets collection and returns its name or address.\n\n@method getAccountNameByAddress\n@param {String} name or address\n*/\n\n// TODO\n// Helpers.getAccountNameByAddress = function(address) {\n//   if (typeof address != 'undefined')\n//     var doc = Helpers.getAccountByAddress(address.toLowerCase());\n\n//   return doc ? doc.name : address;\n// };\n\n/**\nReactive wrapper for the moment package.\n\n@method moment\n@param {String} time    a date object passed to moment function.\n@return {Object} the moment js package\n* */\n\n// TODO\n// export function moment(time) {\n//   // react to language changes as well\n//   TAPi18n.getLanguage();\n\n//   if (_.isFinite(time) && moment.unix(time).isValid()) return moment.unix(time);\n//   else return moment(time);\n// }\n\n/**\nFormats a timestamp to any format given.\n\n    Helpers.formatTime(myTime, \"YYYY-MM-DD\")\n\n@method formatTime\n@param {String} time         The timestamp, can be string or unix format\n@param {String} format       the format string, can also be \"iso\", to format to ISO string, or \"fromnow\"\n@return {String} The formated time\n* */\n\n// TODO\n// Helpers.formatTime = function(time, format) {\n//   //parameters\n\n//   // make sure not existing values are not Spacebars.kw\n//   if (format instanceof Spacebars.kw) format = null;\n\n//   if (time) {\n//     if (_.isString(format) && !_.isEmpty(format)) {\n//       if (format.toLowerCase() === 'iso')\n//         time = Helpers.moment(time).toISOString();\n//       else if (format.toLowerCase() === 'fromnow') {\n//         // make reactive updating\n//         Helpers.rerun['10s'].tick();\n//         time = Helpers.moment(time).fromNow();\n//       } else time = Helpers.moment(time).format(format);\n//     }\n\n//     return time;\n//   } else return '';\n// };\n\n/**\nFormats a given transactions balance\n\n    Helpers.formatTransactionBalance(tx)\n\n@method formatTransactionBalance\n@param {String} value  the value to format\n@param {Object} exchangeRates  the exchange rates to use\n@param {String} unit  the unit to format to\n@return {String} The formated value\n* */\n\n// TODO\n// Helpers.formatTransactionBalance = function(value, exchangeRates, unit) {\n//   // make sure not existing values are not Spacebars.kw\n//   if (unit instanceof Spacebars.kw) unit = null;\n\n//   var unit = unit || EthTools.getUnit(),\n//     format = '0,0.00';\n\n//   if (\n//     (unit === 'usd' || unit === 'eur' || unit === 'btc') &&\n//     exchangeRates &&\n//     exchangeRates[unit]\n//   ) {\n//     if (unit === 'btc') format += '[000000]';\n//     else format += '[0]';\n\n//     var price = new BigNumber(String(web3.fromWei(value, 'ether')), 10).times(\n//       exchangeRates[unit].price\n//     );\n//     return EthTools.formatNumber(price, format) + ' ' + unit.toUpperCase();\n//   } else {\n//     return EthTools.formatBalance(value, format + '[0000000000000000] UNIT');\n//   }\n// };\n\n/**\nFormats an input and prepares it to be a template\n\n    Helpers.createTemplateDataFromInput(abiFunctionInput);\n\n@method createTemplateDataFromInput\n@param {object} input           The input object, out of an ABI\n@return {object} input          The input object with added variables to make it into a template\n* */\n\n// TODO\n// Helpers.createTemplateDataFromInput = function(input, key) {\n//   input = _.clone(input);\n\n//   input.index = key;\n//   input.typeShort = input.type.match(/[a-z]+/i);\n//   input.typeShort = input.typeShort[0];\n//   input.bits = input.type.replace(input.typeShort, '');\n//   input.displayName = input.name\n//     .replace(/([A-Z])/g, ' $1')\n//     .replace(\n//       /([\\-\\_])/g,\n//       '&thinsp;<span class=\"punctuation\">$1</span>&thinsp;'\n//     );\n\n//   if (\n//     input.type.indexOf('[') === -1 &&\n//     (input.typeShort === 'string' ||\n//       input.typeShort === 'uint' ||\n//       input.typeShort == 'int' ||\n//       input.typeShort == 'address' ||\n//       input.typeShort == 'bool' ||\n//       input.typeShort == 'bytes')\n//   ) {\n//     input.template = 'elements_input_' + input.typeShort;\n//   } else {\n//     input.template = 'elements_input_json';\n//   }\n\n//   return input;\n// };\n\n/**\nAdds the input value from a form field to the inputs array\n\n@method addInputValue\n@param {object} inputs          The current inputs\n@param {object} currentInput   The current input\n@return {Array} array of parameter values\n* */\n// TODO\n// Helpers.addInputValue = function(inputs, currentInput, formField) {\n//   return (\n//     _.map(inputs, function(input) {\n//       var value = _.isUndefined(input.value) ? '' : input.value;\n\n//       if (input.typeShort === 'bytes' && value === '') {\n//         value = '0x0000000000000000000000000000000000000000';\n//       }\n\n//       if (\n//         currentInput.name === input.name &&\n//         currentInput.type === input.type &&\n//         currentInput.index === input.index\n//       ) {\n//         if (input.type.indexOf('[') !== -1) {\n//           try {\n//             value = JSON.parse(formField.value);\n//           } catch (e) {\n//             value = [];\n//           }\n//         } else if (\n//           !_.isEmpty(formField.value) &&\n//           (input.typeShort === 'bytes' || input.typeShort === 'address')\n//         ) {\n//           // If it looks like hex, then add 0x before\n//           value = /^[0-9a-f]+$/i.test(formField.value.replace('0x', ''))\n//             ? '0x' + formField.value.replace('0x', '')\n//             : null;\n//         } else if (input.typeShort === 'bool') {\n//           value = !!formField.checked;\n//         } else if (input.typeShort === 'bytes') {\n//           value =\n//             formField.value || '0x0000000000000000000000000000000000000000';\n//         } else {\n//           value = formField.value || '';\n//         }\n\n//         if (\n//           input.typeShort === 'bytes' &&\n//           value === '0x0000000000000000000000000000000000000000'\n//         ) {\n//           input.value = '';\n//         } else {\n//           input.value = value;\n//         }\n//       }\n\n//       return value;\n//     }) || []\n//   );\n// };\n\n/**\n * Add space between camelCase text\n */\nexport function unCamelCaseToSentence(str) {\n  console.log(str);\n  str = str.replace(/([a-z\\xE0-\\xFF])([A-Z\\xC0\\xDF])(([^a-z0-9_]))/gi, '$1 $2');\n  console.log(str);\n  str = str.toLowerCase().replace(/^\\w|\\s\\w/g, upperCase);\n  console.log(str);\n  return str;\n}\n\n/**\n * \"Safer\" String.toUpperCase()\n */\nfunction upperCase(str) {\n  return str.toUpperCase();\n}\n\n/**\nTakes a camelcase and shows it with spaces\n\n@method toSentence\n@param {string} camelCase    A name in CamelCase or snake_case format\n@return {string} sentence    The same name, sanitized, with spaces\n* */\n// export function toSentence(inputString, noHTML) {\n//   console.log(inputString)\n//   if (typeof inputString === undefined) {\n//     return false;\n//   } else {\n//     inputString = inputString.replace(/[^a-z0-9_]/gi, '');\n//     console.log(inputString)\n//     noHTML === true\n//       ? inputString.replace(/([A-Z]+|[0-9]+)/g, ' $1').trim()\n//       : inputString\n//           .replace(/([A-Z]+|[0-9]+)/g, ' $1')\n//           .trim()\n//           // eslint-disable-next-line\n//           .replace(/([\\_])/g, '<span class=\"dapp-punctuation\">$1</span>');\n//     console.log(inputString)\n//     return inputString;\n//   }\n// }\n\n/**\n@method toSentence\n@param {string} camelCase    A name in CamelCase or snake_case format\n@return {string} sentence    The same name, sanitized, with spaces\n* */\nexport function toSentence(str) {\n  str = str\n    .replace(/[^a-z0-9_]/gi, '')\n    .replace(/_+/g, ' ')\n    .replace(/([A-Z]+|[0-9]+)/g, ' $1')\n    .trim()\n    .toLowerCase();\n\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\nexport function formatTokenCount(value, decimals) {\n  return Number((value /= Math.pow(10, decimals))).toString();\n}\n\n/**\nReturns true if Main is the current network.\n\n@method isOnMainNetwork\n@return {Bool}\n* */\n// TODO\n// isOnMainNetwork() {\n//   return Session.get('network') == 'main';\n// };\n\n/**\nENS Functions\n* */\nexport function sha3(web3, str, opt) {\n  return `0x${web3.utils.sha3(str, opt).replace('0x', '')}`;\n}\n\n// TODO\nexport function namehash(name) {\n  let node =\n    '0x0000000000000000000000000000000000000000000000000000000000000000';\n  if (name !== '') {\n    const labels = name.split('.');\n    for (let i = labels.length - 1; i >= 0; i--) {\n      node = sha3(node + sha3(labels[i]).slice(2), { encoding: 'hex' });\n    }\n  }\n  return node.toString();\n}\n\n// eslint-disable-next-line\n// var ensContractAbi = [\n//   {\n//     constant: true,\n//     inputs: [{ name: 'node', type: 'bytes32' }],\n//     name: 'resolver',\n//     outputs: [{ name: '', type: 'address' }],\n//     payable: false,\n//     type: 'function',\n//   },\n//   {\n//     constant: true,\n//     inputs: [{ name: 'node', type: 'bytes32' }],\n//     name: 'owner',\n//     outputs: [{ name: '', type: 'address' }],\n//     payable: false,\n//     type: 'function',\n//   },\n//   {\n//     constant: false,\n//     inputs: [\n//       { name: 'node', type: 'bytes32' },\n//       { name: 'label', type: 'bytes32' },\n//       { name: 'owner', type: 'address' },\n//     ],\n//     name: 'setSubnodeOwner',\n//     outputs: [],\n//     payable: false,\n//     type: 'function',\n//   },\n//   {\n//     constant: false,\n//     inputs: [\n//       { name: 'node', type: 'bytes32' },\n//       { name: 'ttl', type: 'uint64' },\n//     ],\n//     name: 'setTTL',\n//     outputs: [],\n//     payable: false,\n//     type: 'function',\n//   },\n//   {\n//     constant: true,\n//     inputs: [{ name: 'node', type: 'bytes32' }],\n//     name: 'ttl',\n//     outputs: [{ name: '', type: 'uint64' }],\n//     payable: false,\n//     type: 'function',\n//   },\n//   {\n//     constant: false,\n//     inputs: [\n//       { name: 'node', type: 'bytes32' },\n//       { name: 'resolver', type: 'address' },\n//     ],\n//     name: 'setResolver',\n//     outputs: [],\n//     payable: false,\n//     type: 'function',\n//   },\n//   {\n//     constant: false,\n//     inputs: [\n//       { name: 'node', type: 'bytes32' },\n//       { name: 'owner', type: 'address' },\n//     ],\n//     name: 'setOwner',\n//     outputs: [],\n//     payable: false,\n//     type: 'function',\n//   },\n//   {\n//     anonymous: false,\n//     inputs: [\n//       { indexed: true, name: 'node', type: 'bytes32' },\n//       { indexed: false, name: 'owner', type: 'address' },\n//     ],\n//     name: 'Transfer',\n//     type: 'event',\n//   },\n//   {\n//     anonymous: false,\n//     inputs: [\n//       { indexed: true, name: 'node', type: 'bytes32' },\n//       { indexed: true, name: 'label', type: 'bytes32' },\n//       { indexed: false, name: 'owner', type: 'address' },\n//     ],\n//     name: 'NewOwner',\n//     type: 'event',\n//   },\n//   {\n//     anonymous: false,\n//     inputs: [\n//       { indexed: true, name: 'node', type: 'bytes32' },\n//       { indexed: false, name: 'resolver', type: 'address' },\n//     ],\n//     name: 'NewResolver',\n//     type: 'event',\n//   },\n//   {\n//     anonymous: false,\n//     inputs: [\n//       { indexed: true, name: 'node', type: 'bytes32' },\n//       { indexed: false, name: 'ttl', type: 'uint64' },\n//     ],\n//     name: 'NewTTL',\n//     type: 'event',\n//   },\n// ];\n\n// // eslint-disable-next-line\n// var resolverContractAbi = [\n//   {\n//     constant: true,\n//     inputs: [{ name: 'interfaceID', type: 'bytes4' }],\n//     name: 'supportsInterface',\n//     outputs: [{ name: '', type: 'bool' }],\n//     payable: false,\n//     type: 'function',\n//   },\n//   {\n//     constant: true,\n//     inputs: [\n//       { name: 'node', type: 'bytes32' },\n//       { name: 'contentTypes', type: 'uint256' },\n//     ],\n//     name: 'ABI',\n//     outputs: [\n//       { name: 'contentType', type: 'uint256' },\n//       { name: 'data', type: 'bytes' },\n//     ],\n//     payable: false,\n//     type: 'function',\n//   },\n//   {\n//     constant: false,\n//     inputs: [\n//       { name: 'node', type: 'bytes32' },\n//       { name: 'x', type: 'bytes32' },\n//       { name: 'y', type: 'bytes32' },\n//     ],\n//     name: 'setPubkey',\n//     outputs: [],\n//     payable: false,\n//     type: 'function',\n//   },\n//   {\n//     constant: true,\n//     inputs: [{ name: 'node', type: 'bytes32' }],\n//     name: 'content',\n//     outputs: [{ name: 'ret', type: 'bytes32' }],\n//     payable: false,\n//     type: 'function',\n//   },\n//   {\n//     constant: true,\n//     inputs: [{ name: 'node', type: 'bytes32' }],\n//     name: 'addr',\n//     outputs: [{ name: 'ret', type: 'address' }],\n//     payable: false,\n//     type: 'function',\n//   },\n//   {\n//     constant: false,\n//     inputs: [\n//       { name: 'node', type: 'bytes32' },\n//       { name: 'contentType', type: 'uint256' },\n//       { name: 'data', type: 'bytes' },\n//     ],\n//     name: 'setABI',\n//     outputs: [],\n//     payable: false,\n//     type: 'function',\n//   },\n//   {\n//     constant: true,\n//     inputs: [{ name: 'node', type: 'bytes32' }],\n//     name: 'name',\n//     outputs: [{ name: 'ret', type: 'string' }],\n//     payable: false,\n//     type: 'function',\n//   },\n//   {\n//     constant: false,\n//     inputs: [\n//       { name: 'node', type: 'bytes32' },\n//       { name: 'name', type: 'string' },\n//     ],\n//     name: 'setName',\n//     outputs: [],\n//     payable: false,\n//     type: 'function',\n//   },\n//   {\n//     constant: false,\n//     inputs: [\n//       { name: 'node', type: 'bytes32' },\n//       { name: 'hash', type: 'bytes32' },\n//     ],\n//     name: 'setContent',\n//     outputs: [],\n//     payable: false,\n//     type: 'function',\n//   },\n//   {\n//     constant: true,\n//     inputs: [{ name: 'node', type: 'bytes32' }],\n//     name: 'pubkey',\n//     outputs: [{ name: 'x', type: 'bytes32' }, { name: 'y', type: 'bytes32' }],\n//     payable: false,\n//     type: 'function',\n//   },\n//   {\n//     constant: false,\n//     inputs: [\n//       { name: 'node', type: 'bytes32' },\n//       { name: 'addr', type: 'address' },\n//     ],\n//     name: 'setAddr',\n//     outputs: [],\n//     payable: false,\n//     type: 'function',\n//   },\n//   {\n//     inputs: [{ name: 'ensAddr', type: 'address' }],\n//     payable: false,\n//     type: 'constructor',\n//   },\n//   {\n//     anonymous: false,\n//     inputs: [\n//       { indexed: true, name: 'node', type: 'bytes32' },\n//       { indexed: false, name: 'a', type: 'address' },\n//     ],\n//     name: 'AddrChanged',\n//     type: 'event',\n//   },\n//   {\n//     anonymous: false,\n//     inputs: [\n//       { indexed: true, name: 'node', type: 'bytes32' },\n//       { indexed: false, name: 'hash', type: 'bytes32' },\n//     ],\n//     name: 'ContentChanged',\n//     type: 'event',\n//   },\n//   {\n//     anonymous: false,\n//     inputs: [\n//       { indexed: true, name: 'node', type: 'bytes32' },\n//       { indexed: false, name: 'name', type: 'string' },\n//     ],\n//     name: 'NameChanged',\n//     type: 'event',\n//   },\n//   {\n//     anonymous: false,\n//     inputs: [\n//       { indexed: true, name: 'node', type: 'bytes32' },\n//       { indexed: true, name: 'contentType', type: 'uint256' },\n//     ],\n//     name: 'ABIChanged',\n//     type: 'event',\n//   },\n//   {\n//     anonymous: false,\n//     inputs: [\n//       { indexed: true, name: 'node', type: 'bytes32' },\n//       { indexed: false, name: 'x', type: 'bytes32' },\n//       { indexed: false, name: 'y', type: 'bytes32' },\n//     ],\n//     name: 'PubkeyChanged',\n//     type: 'event',\n//   },\n// ];\n\n// eslint-disable-next-line\n// var ensAddress = '0x314159265dd8dbb310642f98f50c066173c1259b';\n\n/**\nReturns a string, given an address\n\n@method getENSName\n* */\n\n// TODO\n// export function getENSName(address, network, callback) {\n//   if (!address) {\n//     return;\n//   }\n\n//   if (network !== 'main') {\n//     callback(\n//       'Cannot retrieve ENS addresses unless fully synced on main chain',\n//       null,\n//       null,\n//     );\n//     return;\n//   }\n\n//   var node = namehash(\n//     address.toLowerCase().replace('0x', '') + '.addr.reverse',\n//   );\n//   var ensContract = new web3.eth.Contract(ensContractAbi, ensAddress);\n//   var resolverContract = new web3.eth.Contract(resolverContractAbi);\n\n//   // get a resolver address for that name\n//   ensContract.methods.resolver(node).call(function(err, resolverAddress) {\n//     if (err) callback(err, null, null);\n//     else if (resolverAddress == 0) callback('no resolver address', null, null);\n//     else {\n//       // if you find one, find the name on that resolver\n//       resolverContract.options.address = resolverAddress;\n//       resolverContract.methods.name(node).call(function(error, name) {\n//         if (err) callback(err, null, null);\n//         else if (name == 0) callback('Found resolver but no name', null, null);\n//         else {\n//           // any address can claim any name, we need to check the name now\n//           var node = namehash(name);\n//           // get a resolver address for that name\n//           ensContract.methods\n//             .resolver(node)\n//             .call(function(err, resolverAddress) {\n//               if (err) callback(err, null, null);\n//               else if (resolverAddress == 0)\n//                 callback('Name has no resolver', null, null);\n//               else {\n//                 // if you find one, find the addr of that resolver\n//                 resolverContract.options.address = resolverAddress;\n//                 resolverContract.methods\n//                   .addr(node)\n//                   .call(function(error, returnAddr) {\n//                     if (err) callback(err, null, null);\n//                     else if (returnAddr == 0)\n//                       callback('No address returned', null, null);\n//                     else {\n//                       callback(error, name, returnAddr);\n//                     }\n//                   });\n//               }\n//             });\n//         }\n//       });\n//     }\n//   });\n// };\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport NumberFormat from 'react-number-format';\nimport { EthAddress, Identicon } from 'ethereum-react-components';\nimport { selectedContract } from '../../actions/actions';\nimport SecurityIcon from './SecurityIcon';\nimport { displayPriceFormatter } from '../../utils/utils';\nimport { makeID } from '../../utils/helperFunctions';\nimport * as Actions from '../../actions/actions';\n\nimport TokenListForItems from './TokenListForItems';\n\nclass ContractItem extends Component {\n  constructor(props) {\n    super(props);\n    this.openAccountPage = this.openAccountPage.bind(this);\n\n    this.state = {\n      fakeAddress: makeID(),\n    };\n    this.fakeAddressInterval = setInterval(() => {\n      this.setState({\n        fakeAddress: makeID(),\n      });\n    }, 50);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.fakeAddressInterval);\n  }\n\n  openAccountPage(e) {\n    const obj = {\n      contract: this.props.contract,\n      currency: this.props.reducers.currency,\n      exchangeRates: this.props.reducers.exchangeRates,\n      addressType: 'contract',\n    };\n\n    this.props.selectedContract({\n      contract: this.props.contract,\n      currency: this.props.reducers.currency,\n      exchangeRates: this.props.reducers.exchangeRates,\n      addressType: 'contract',\n    });\n  }\n\n  // snapshotted\n  renderBalance() {\n    const contract = this.props.contract;\n    return (\n      <React.Fragment>\n        <NumberFormat\n          className=\"account-balance\"\n          value={displayPriceFormatter(this.props, contract.balance)}\n          displayType=\"text\"\n          thousandSeparator\n        />\n        <span> {this.props.reducers.currency} </span>\n      </React.Fragment>\n    );\n  }\n\n  // snapshotted\n  renderPendingProgress() {\n    const percent = this.props.contract.confirmationNumber / 12;\n    return (\n      <div className=\"dapp-progress\">\n        <div className=\"dapp-bar\" style={{ width: `${{ percent }}%` }} />\n      </div>\n    );\n  }\n\n  renderPendingSecurityIcon() {\n    return (\n      <React.Fragment>\n        <SecurityIcon\n          type=\"contractItem\"\n          classes=\"dapp-identicon dapp-small dapp-icon-loading\"\n          hash={this.state.fakeAddress}\n        />\n      </React.Fragment>\n    );\n  }\n\n  renderPending() {\n    return (\n      <React.Fragment>\n        {this.renderPendingProgress()}\n        {this.renderPendingSecurityIcon()}\n      </React.Fragment>\n    );\n  }\n\n  renderName() {\n    const contract = this.props.contract;\n    let pending = this.props.pending;\n    pending ? (pending = true) : (pending = false);\n    return (\n      <React.Fragment>\n        {!pending ? (\n          <TokenListForItems\n            addressType={this.props.addressType}\n            address={contract.contractAddress}\n          />\n        ) : null}\n        <h3 className=\"not-ens-name\">\n          <i className=\"icon-eye\" />\n          &nbsp;\n          {!pending\n            ? contract['contract-name'] === undefined\n              ? 'UNNAMED'\n              : contract['contract-name']\n            : 'UNNAMED'}\n        </h3>\n      </React.Fragment>\n    );\n  }\n\n  renderCreating() {\n    return (\n      <React.Fragment>\n        <span className=\"account-balance\">\n          Creating\n          <span>...</span>\n        </span>\n        {/* <span className=\"account-id creating\" /> */}\n        <EthAddress\n          short\n          classes=\"account-id creating\"\n          address={this.state.fakeAddress}\n        />\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    const contract = this.props.contract;\n    let pending = this.props.pending;\n\n    pending ? (pending = true) : (pending = false);\n\n    // eslint-disable-next-line\n    Object.keys(contract).length === 0 && contract.constructor === Object\n      ? (pending = true)\n      : null;\n\n    let address;\n    // eslint-disable-next-line\n    !pending ? (address = contract.contractAddress) : null;\n\n    let ContractUrl = '/contract/';\n    // eslint-disable-next-line\n    !pending ? (ContractUrl += address) : null;\n\n    // eslint-disable-next-line\n    !pending ? clearInterval(this.fakeAddressInterval) : null;\n\n    return (\n      <React.Fragment>\n        <Link\n          to={{ pathname: ContractUrl }}\n          onClick={e => this.openAccountPage(e)}\n          className={!pending ? 'wallet-box' : 'wallet-box creating wallets'}\n        >\n          {!pending ? (\n            <React.Fragment>\n              <SecurityIcon\n                type=\"contractItem\"\n                classes=\"dapp-identicon dapp-small\"\n                hash={address}\n              />\n            </React.Fragment>\n          ) : (\n            this.renderPending()\n          )}\n          {this.renderName()}\n          {!pending ? this.renderBalance() : this.renderCreating()}\n          <EthAddress short classes=\"account-id\" address={address} />\n        </Link>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return state;\n};\n\nexport default connect(\n  mapStateToProps,\n  { selectedContract, ...Actions }\n)(ContractItem);\n","import React from 'react';\n\nexport const ButtonDescription = props => {\n  return (\n    <React.Fragment>\n      <h2>{props.title}</h2>\n      <p>{props.description}</p>\n      <div className=\"dapp-clear-fix\" />\n    </React.Fragment>\n  );\n};\n\nexport default ButtonDescription;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { Link } from 'react-router-dom';\nimport ContractItem from './elements/ContractItem';\nimport ButtonDescription from './ButtonDescription';\n\nconst buttonTitle = 'Wallet Contracts';\nconst buttonDescription =\n  'These contracts are stored on the blockchain and can hold and secure Ether. They can have multiple accounts as owners and keep a full log of all transactions.';\n\n// snapshooted\nconst WalletLink = () => {\n  return (\n    <React.Fragment>\n      <Link\n        to={{ pathname: '/wallet/new' }}\n        className=\"wallet-box create add-contract\"\n      >\n        <div className=\"account-pattern\">+</div>\n        <h3>ADD WALLET CONTRACT</h3>\n      </Link>\n      <div className=\"dapp-clear-fix\" />\n    </React.Fragment>\n  );\n};\n\nexport class DeployedWallets extends Component {\n  renderWalletBoxList() {\n    const icon = 'icon-eye';\n    const {\n      ContractsPendingConfirmations,\n      WalletContracts,\n    } = this.props.reducers;\n    const contracts = Object.assign(\n      {},\n      ContractsPendingConfirmations,\n      WalletContracts\n    );\n    return (\n      <React.Fragment>\n        <div className=\"wallet-box-list\">\n          {Object.keys(contracts).map((address, i) => (\n            <ContractItem\n              key={address}\n              number={i + 1}\n              icon={icon}\n              pending={\n                !!(\n                  Object.keys(contracts[address]).length === 0 &&\n                  contracts[address].constructor === Object\n                )\n              }\n              contract={contracts[address]}\n              address={address}\n              wallet={contracts[address].length === 0 ? contracts[address] : ''}\n              props={this.props}\n              addressType=\"WalletContracts\"\n            />\n          ))}\n        </div>\n        <div className=\"dapp-clear-fix\" />\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <ButtonDescription\n          title={buttonTitle}\n          description={buttonDescription}\n        />\n        {this.renderWalletBoxList()}\n        <WalletLink />\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return state;\n};\n\nexport default connect(mapStateToProps)(DeployedWallets);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport LatestTransactions from '../components/elements/LatestTransactions';\nimport NoMatchingTransaction from '../components/elements/NoMatchingTransaction';\n\nimport Addresses from '../components/Addresses';\nimport DeployedWallets from '../components/DeployedWallets';\n\n// snapshotted\nconst Title = () => {\n  return (\n    <h1>\n      <strong>Accounts</strong> Overview\n    </h1>\n  );\n};\n\nconst StatelessPageContent = () => {\n  return (\n    <React.Fragment>\n      <Title />\n      <Addresses />\n      <DeployedWallets />\n    </React.Fragment>\n  );\n};\n\nexport class AccountView extends Component {\n  render() {\n    const txs = this.props.Transactions;\n    return (\n      <div className=\"dapp-container account-page\">\n        <StatelessPageContent />\n        {Object.keys(txs).length && txs.constructor === Object ? (\n          <LatestTransactions transactions={txs} />\n        ) : (\n          <NoMatchingTransaction />\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  Transactions: state.reducers.Transactions,\n});\n\nexport default connect(mapStateToProps)(AccountView);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n// import onClickOutside from \"react-onclickoutside\";\nimport shortid from 'shortid';\n\nimport { updateCurrency } from '../../actions/actions';\n\nimport '../../stylesheets/mergedstyles.css';\n\nconst selectableUnits = ['ether', 'finney', 'btc', 'usd', 'eur', 'gbp', 'brl'];\n\nclass SelectableUnit extends Component {\n  constructor(props) {\n    super(props);\n    this.unitSelected = this.unitSelected.bind(this);\n  }\n\n  UNSAFE_componentWillMount() {\n    this.setState({ displaySU: false });\n    document.addEventListener('mousedown', this.unitSelected, false);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('mousedown', this.unitSelected, false);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.displaySU !== prevState.displaySU) {\n      this.setState({ displaySU: !this.props.displaySU });\n    }\n  }\n\n  unitSelected(e) {\n    if (this.node.contains(e.target)) {\n      const newUnit = {\n        CurrencyUnit: e.target.getAttribute('data-value').toUpperCase(),\n      };\n      this.props.updateCurrency(newUnit);\n    }\n  }\n\n  renderList() {\n    return (\n      <React.Fragment>\n        {selectableUnits.map(item => (\n          <li key={shortid.generate()}>\n            <button data-value={item} onClick={this.unitSelected}>\n              {item.toUpperCase()}\n            </button>\n          </li>\n        ))}\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    const cn = require('classnames');\n    const newClasses = cn({\n      'simple-modal': true,\n      animate: this.state.displaySU,\n    });\n    return (\n      <div\n        id=\"selectableUnitDrawer\"\n        className={newClasses}\n        ref={node => (this.node = node)}\n      >\n        <ul>{this.renderList()}</ul>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  { updateCurrency }\n)(SelectableUnit);\n","import React from 'react';\n\nexport const ActionBarItem = props => {\n  return (\n    <li>\n      <a\n        href={props.href}\n        title={props.title}\n        target=\"noopener noreferrer _blank\"\n      >\n        <i className={props.icon} />\n        {props.text}\n      </a>\n    </li>\n  );\n};\n\nexport default ActionBarItem;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport * as Actions from '../../actions/actions';\n\nimport ActionBarItem from './ActionBarItem';\n\nexport class AccountActionBar extends Component {\n  shouldComponentUpdate(prevProps, prevState) {\n    if (this.props !== prevProps) {\n      return true;\n    }\n    return false;\n  }\n\n  displayCopiedNotification(e) {\n    e.preventDefault();\n    this.props.displayGlobalNotification({\n      display: true,\n      type: 'info',\n      msg: 'Copied to clipboad',\n    });\n  }\n\n  displayAndSetQRCode(e) {\n    this.props.updateQRCode(this.props.wallet.address);\n    this.props.displayModal('displayQRCode');\n  }\n\n  render() {\n    const address = this.props.wallet.address;\n    const etherScanAddress = `https://etherscan.io/address/${address}`;\n    const transferEtherAddress = `/send/${address}`;\n    const changellyAddress = `https://changelly.com/widget/v1?auth=email&amp;from=USD&amp;to=ETH&amp;merchant_id=47f87f7cddda&amp;address=${address}&amp;amount=1&amp;ref_id=e25c5a2e8719&amp;color=02a8f3`;\n\n    return (\n      <aside className=\"dapp-actionbar\">\n        <nav>\n          <ul>\n            <ActionBarItem\n              href={transferEtherAddress}\n              title={address}\n              icon=\"icon-arrow-down\"\n              text=\" Transfer Ether &amp; Tokens\"\n            />\n            <ActionBarItem\n              href={changellyAddress}\n              title=\"\"\n              icon=\"icon-ethereum\"\n              text=\"Buy ether\"\n            />\n            <ActionBarItem\n              href={etherScanAddress}\n              icon=\"icon-info\"\n              text=\"View on Etherscan\"\n            />\n            <CopyToClipboard text={address}>\n              <li>\n                <button\n                  className=\"copy-to-clipboard-button\"\n                  onClick={e => this.displayCopiedNotification(e)}\n                >\n                  <i className=\"icon-docs\" />\n                  Copy address\n                </button>\n              </li>\n            </CopyToClipboard>\n            <li>\n              <button\n                className=\"qrcode-button\"\n                onClick={e => this.displayAndSetQRCode(e)}\n              >\n                <i className=\"icon-camera\" />\n                Show QR-Code\n              </button>\n            </li>\n          </ul>\n        </nav>\n      </aside>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return state;\n};\n\nexport default connect(\n  mapStateToProps,\n  { ...Actions }\n)(AccountActionBar);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport { Identicon } from 'ethereum-react-components';\n\nimport shortid from 'shortid';\n\nexport class TokenList extends Component {\n  // TODO: turn these renders into stateless\n  renderIdentity(token) {\n    const tokens = this.props.reducers.selectedWallet.wallet.tokens;\n    return (\n      <td>\n        <Identicon\n          classes=\"dapp-identicon dapp-tiny\"\n          title\n          size=\"tiny\"\n          address={tokens[token].address}\n        />\n        <strong>{tokens[token].name}</strong>\n      </td>\n    );\n  }\n\n  renderInfo(token) {\n    const tokens = this.props.reducers.selectedWallet.wallet.tokens;\n    return (\n      <td>\n        {tokens[token].balance}\n        &nbsp;\n        {tokens[token].symbol}\n      </td>\n    );\n  }\n\n  renderLink(token) {\n    const sw = this.props.reducers.selectedWallet;\n    const sendUrl = `${sw.address}/`;\n    return (\n      <td>\n        <Link\n          to={{ pathname: `/send-token/${sendUrl}${token}` }}\n          title=\"sendUrlForToken\"\n        >\n          <i className=\"icon-arrow-up\">&nbsp;</i>\n          Send\n        </Link>\n      </td>\n    );\n  }\n\n  render() {\n    // TODO: what if selected contract\n    const tokens = this.props.reducers.selectedWallet.wallet.tokens;\n    return (\n      <table className=\"token-list dapp-zebra\">\n        <tbody>\n          {Object.keys(tokens).map(token => (\n            <tr key={shortid.generate()}>\n              {this.renderIdentity(token)}\n              {this.renderInfo(token)}\n              {this.renderLink(token)}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return state;\n};\n\nexport default connect(mapStateToProps)(TokenList);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport clickOutside from 'react-click-outside';\n\nimport ContentEditable from 'react-contenteditable';\n// utils and actions\nimport * as Utils from '../utils/utils';\n// import * as Actions from '../actions/actions';\nimport {\n  updateContractName,\n  updateWalletContractName,\n  updateAddressName,\n} from '../actions/actions.js';\n\nexport class EditableName extends Component {\n  constructor(props) {\n    super(props);\n\n    // TODO: logic for contracts\n    const wallet = this.props.reducers.selectedWallet;\n    const walletName = wallet.wallet.name;\n    console.log(walletName);\n    this.state = {\n      // <<<<<<< Updated upstream\n      contentEditable: false,\n      newName: '',\n      html: `\n            ${walletName || `Account ${wallet.number}`} \n          `,\n    };\n    this.toggleEditability = this.toggleEditability.bind(this);\n    this.contentEditable = React.createRef();\n    this.handleClickOutside = this.handleClickOutside.bind(this);\n  }\n\n  componentDidMount() {\n    document.addEventListener('click', this.handleClickOutside);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('click', this.handleClickOutside);\n  }\n\n  shouldComponentUpdate(prevProps, prevState) {\n    if (this.state.contentEditable !== prevState.contentEditable) {\n      return true;\n    }\n    return false;\n  }\n\n  handleChange = e => {\n    const wallet = this.props.reducers.selectedWallet;\n    this.setState({\n      newName: e.target.value,\n    });\n    this.props.updateAddressName({\n      name: e.target.value,\n      address: wallet.address,\n    });\n  };\n\n  handleClickOutside(e) {\n    const id = e.target.getAttribute('id');\n    e.target.getAttribute('id') !== 'editableName'\n      ? this.setState({ contentEditable: false })\n      : this.toggleEditability(e);\n  }\n\n  toggleEditability = e => {\n    if (e.target.getAttribute('contenteditable') === 'false') {\n      this.setState({\n        contentEditable: true,\n        newName: e.target.value,\n      });\n    }\n    {\n      /* }\n=======\n      // contentEditable: false,\n      contentEditable: true,\n    };\n    this.toggleEditability = this.toggleEditability.bind(this)\n    this.updateName = this.updateName.bind(this)\n  }\n\n  toggleEditability(e){\n    console.log(e);\n    console.log('prev state', this.state.contentEditable);\n    this.setState({ contentEditable: !this.state.contentEditable });\n>>>>>>> Stashed changes\n*/\n    }\n  };\n\n  // updateContractName\n  // updateWalletContractName\n\n  updateName(e, wallet) {\n    this.setState({ name: e.target.value });\n    this.props.updateAddressName({\n      address: wallet.address,\n      name: e.target.value,\n    });\n  }\n\n  render() {\n    const type = this.props.addressType;\n    const wallet =\n      type === 'address'\n        ? this.props.reducers.selectedWallet\n        : this.props.reducers.selectedContract;\n    return (\n      <h1>\n        {/* <<<<<<< Updated upstream */}\n        <ContentEditable\n          id=\"editableName\"\n          className=\"edit-name\"\n          innerRef={this.contentEditable}\n          html={this.state.html} // innerHTML of the editable div\n          disabled={!this.state.contentEditable}\n          onChange={this.handleChange} // handle innerHTML change\n          tagName=\"em\" // Use a custom HTML tag (uses a div by default)\n        />\n        {/* }\n=======\n        {wallet !== undefined && wallet !== '' ? (\n          <input className=\"edit-name\" onChange={e => this.updateName(e, wallet)} />\n          // <div onChange={e => this.updateName(e, wallet)}>\n          //   <em\n          //     className=\"edit-name\"\n          //     contentEditable={this.state.contentEditable}\n          //     // contentEditable\n          //     // onFocus={e => this.toggleEditability(e)}\n          //     // onClick={e => this.toggleEditability(e)}\n          //     // onChange={e => this.updateName(e, wallet)}\n          //   >\n          //     {wallet.name ? wallet.name : 'Account' + wallet.number}\n          //   </em>\n          // </div>\n        ) : (\n          'Unnamed'\n        )}\n>>>>>>> Stashed changes\n*/}\n        <i className=\"edit-icon icon-pencil\" />\n      </h1>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return state;\n};\n\n// const mapStateToProps = state => ({\n//   Wallets: state.reducers.Wallets,\n//   selectedWallet: state.reducers.selectedWallet,\n//   selectedContract: state.reducers.selectedContract,\n// });\n\nexport default connect(\n  mapStateToProps,\n  { updateContractName, updateWalletContractName, updateAddressName }\n)(EditableName);\n","import React from 'react';\n\nexport const NotFound = () => {\n  return <div>There doesn&apos;t seem to be anything here...</div>;\n};\n\nexport default NotFound;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\n// components\nimport { Identicon } from 'ethereum-react-components';\nimport SU from '../components/elements/SelectableUnit';\nimport AccountActionBar from '../components/elements/AccountActionBar';\nimport LatestTransactions from '../components/elements/LatestTransactions';\nimport NoMatchingTransaction from '../components/elements/NoMatchingTransaction';\nimport TokenList from '../components/TokenList';\n\nimport EditableName from '../components/EditableName';\n\n// views\nimport NotFound from './NotFound';\n\n// utils and actions\nimport { displayPriceFormatter } from '../utils/utils';\nimport * as Actions from '../actions/actions';\n\nexport const StickyHeader = ({ address }) => {\n  return (\n    <div className=\"dapp-sticky-bar dapp-container\">\n      <Identicon classes=\"dapp-identicon\" title address={address} />\n    </div>\n  );\n};\n\nexport const AccountDetails = ({ sw }) => {\n  return (\n    <React.Fragment>\n      <EditableName addressType=\"address\" sw={sw} />\n      <h2 className=\"copyable-address\">\n        <i className=\"icon-key\" title=\"Account\" />\n        <span>{sw.address}</span>\n      </h2>\n      <div className=\"clear\" />\n    </React.Fragment>\n  );\n};\n\nexport const AccountDescription = () => {\n  return (\n    <div className=\"account-info\">\n      <h3>NOTE </h3>\n      <p>\n        Accounts can't display incoming transactions, but can receive, hold and\n        send Ether. To see incoming transactions, create a wallet contract to\n        store ether.\n      </p>\n      <p>\n        <strong>\n          If your balance doesn't seem updated, make sure that you are in sync\n          with the network.\n        </strong>\n      </p>\n    </div>\n  );\n};\n\nexport class SingleAccountView extends Component {\n  constructor(props) {\n    super(props);\n    this.state = this.props;\n  }\n\n  componentDidMount() {\n    window.addEventListener('scroll', this.handleScroll);\n    this.setState({ displaySU: false });\n    // ('.dapp-sticky-bar').addClass('sticky');\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('scroll', this.handleScroll);\n    // ('.dapp-sticky-bar').addClass('sticky');\n  }\n\n  toggleSU() {\n    if (this.state.displaySU === undefined) this.setState({ displaySU: false });\n    else {\n      this.state.displaySU\n        ? this.setState({ displaySU: false })\n        : this.setState({ displaySU: true });\n    }\n  }\n\n  renderAccountTransactions() {\n    const address = this.props.reducers.selectedWallet.address;\n    const transactions = this.props.reducers.Transactions;\n    const accountTxns = {};\n    Object.keys(transactions).map(hash => {\n      if (\n        transactions[hash].from === address.toLowerCase() ||\n        transactions[hash].to === address.toLowerCase()\n      ) {\n        accountTxns[hash] = transactions[hash];\n      }\n      return null;\n    });\n    return (\n      <div className=\"accounts-transactions\">\n        {Object.keys(accountTxns).length &&\n        accountTxns.constructor === Object ? (\n          <LatestTransactions transactions={accountTxns} />\n        ) : (\n          <NoMatchingTransaction />\n        )}\n      </div>\n    );\n  }\n\n  renderBalance() {\n    const sw = this.props.reducers.selectedWallet;\n    return (\n      <span className=\"account-balance\">\n        {displayPriceFormatter(this.props, sw.wallet.balance)}\n        <span className=\"inline-form\" name=\"unit\">\n          <button\n            type=\"button\"\n            data-name=\"unit\"\n            data-value={this.props.reducers.currency}\n            onClick={() => this.toggleSU()}\n          >\n            &nbsp;{this.props.reducers.currency}\n          </button>\n          <SU displaySU={this.state.displaySU} />\n        </span>\n      </span>\n    );\n  }\n\n  renderSingleAccount() {\n    const sw = this.props.reducers.selectedWallet;\n    return (\n      <div className=\"dapp-container accounts-page\">\n        <StickyHeader address={sw.address} />\n        {/*\n        <EditableName addressType=\"address\" />\n        <EditableName addressType=\"address\" />\n        */}\n        <div className=\"accounts-page-summary\">\n          <Identicon classes=\"dapp-identicon\" title address={sw.address} />\n          <header>\n            <AccountDetails sw={sw} />\n            {this.renderBalance()}\n            {sw.wallet.tokens ? <TokenList /> : null}\n            <AccountDescription />\n          </header>\n        </div>\n        <AccountActionBar wallet={sw} />\n        {this.renderAccountTransactions()}\n      </div>\n    );\n  }\n\n  render() {\n    const w = this.props.reducers.selectedWallet;\n    return w === undefined || w === '' ? (\n      <NotFound />\n    ) : (\n      this.renderSingleAccount()\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return state;\n};\n\nexport default connect(\n  mapStateToProps,\n  { ...Actions }\n)(SingleAccountView);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\n\nimport ActionBarItem from './ActionBarItem';\n\nimport {\n  displayGlobalNotification,\n  updateQRCode,\n  displayModal,\n  updateJSON,\n} from '../../actions/actions';\n\nexport class ContractActionBar extends Component {\n  displayCopiedNotification(e) {\n    e.preventDefault();\n    this.props.displayGlobalNotification({\n      display: true,\n      type: 'info',\n      msg: 'Copied to clipboad',\n    });\n  }\n\n  displayAndSetQRCode(e) {\n    this.props.updateQRCode(this.props.contract.address);\n    this.props.displayModal('displayQRCode');\n  }\n\n  displayAndSetJSON(e) {\n    this.props.updateJSON(this.props.contract.jsonInterface);\n    this.props.displayModal('displayJSONInterface');\n  }\n\n  render() {\n    const address = this.props.contract.address;\n    const transferEtherAddress = `/send/${address}`;\n    const etherScanAddress = `https://etherscan.io/address/${address}`;\n    return (\n      <aside className=\"dapp-actionbar\">\n        <nav>\n          <ul>\n            <ActionBarItem\n              href={transferEtherAddress}\n              title={address}\n              icon=\"icon-arrow-down\"\n              text=\" Transfer Ether &amp; Tokens\"\n            />\n            <ActionBarItem\n              href={etherScanAddress}\n              icon=\"icon-info\"\n              text=\"View on Etherscan\"\n            />\n            <CopyToClipboard text={address}>\n              <li>\n                <button\n                  className=\"copy-to-clipboard-button\"\n                  onClick={e => this.displayCopiedNotification(e)}\n                >\n                  <i className=\"icon-docs\" />\n                  Copy address\n                </button>\n              </li>\n            </CopyToClipboard>\n            <li>\n              <button\n                className=\"qrcode-button\"\n                onClick={e => this.displayAndSetQRCode(e)}\n              >\n                <i className=\"icon-camera\" />\n                Show QR-Code\n              </button>\n            </li>\n            <li>\n              <button\n                className=\"interface-button\"\n                onClick={e => this.displayAndSetJSON('displayJSONInterface')}\n              >\n                <i className=\"icon-settings\" />\n                Show Interface\n              </button>\n            </li>\n          </ul>\n        </nav>\n      </aside>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return state;\n};\n\nexport default connect(\n  mapStateToProps,\n  {\n    displayGlobalNotification,\n    updateQRCode,\n    displayModal,\n    updateJSON,\n  }\n)(ContractActionBar);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as Actions from '../../../actions/actions';\n\nexport class Inputs extends Component {\n  renderAddress(input) {\n    return (\n      <React.Fragment>\n        <input\n          onChange={this.props.onChange}\n          index={input.index}\n          placeholder=\"0x123456...\"\n          className=\" abi-input\"\n          name={input.name}\n          inputType={input.type}\n        />\n      </React.Fragment>\n    );\n  }\n\n  renderBool(input) {\n    return (\n      <React.Fragment>\n        <input\n          type=\"checkbox\"\n          onChange={this.props.onChange}\n          index={input.index}\n          name={input.name}\n          inputType={input.type}\n        />\n        <label>contract buttons</label>\n      </React.Fragment>\n    );\n  }\n\n  renderBytes(input) {\n    return (\n      <React.Fragment>\n        <input\n          type=\"text\"\n          pattern=\"^(0x)?[0-9a-fA-F]+$\"\n          placeholder=\"0x1234af...\"\n          onChange={this.props.onChange}\n          index={input.index}\n          name={input.name}\n          inputType={input.type}\n        />\n      </React.Fragment>\n    );\n  }\n\n  renderInt(input) {\n    return (\n      <React.Fragment>\n        <input\n          type=\"number\"\n          step=\"1\"\n          placeholder=\"-123\"\n          onChange={this.props.onChange}\n          index={input.index}\n          name={input.name}\n          inputType={input.type}\n        />\n      </React.Fragment>\n    );\n  }\n\n  renderJson(input) {\n    return (\n      <React.Fragment>\n        <textarea\n          cols=\"20\"\n          rows=\"5\"\n          placeholder=\"['my text', 12345, '0x...']\"\n          onChange={this.props.onChange}\n          index={input.index}\n          name={input.name}\n          inputType={input.type}\n        >\n          value\n        </textarea>\n      </React.Fragment>\n    );\n  }\n\n  renderString(input) {\n    return (\n      <React.Fragment>\n        <input\n          type=\"text\"\n          placeholder=\"MyString\"\n          onChange={this.props.onChange}\n          index={input.index}\n          name={input.name}\n          inputType={input.type}\n        />\n      </React.Fragment>\n    );\n  }\n\n  renderUint(input) {\n    return (\n      <React.Fragment>\n        <input\n          type=\"number\"\n          step=\"1\"\n          min=\"0\"\n          placeholder=\"1234\"\n          onChange={this.props.onChange}\n          index={input.index}\n          name={input.name}\n          inputType={input.type}\n        />\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    const input = {\n      ...this.props.data,\n      index: this.props.index,\n    };\n    const type = this.props.data.type.match(/[a-z]+/i)[0];\n    return (\n      <React.Fragment>\n        {type === 'address'\n          ? this.renderAddress(input)\n          : type === 'bool'\n          ? this.renderBool(input)\n          : type === 'bytes'\n          ? this.renderBytes(input)\n          : type === 'int'\n          ? this.renderInt(input)\n          : type === 'json'\n          ? this.renderJson(input)\n          : type === 'string'\n          ? this.renderString(input)\n          : type === 'uint'\n          ? this.renderUint(input)\n          : null}\n      </React.Fragment>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return state;\n};\n\nexport default connect(\n  mapStateToProps,\n  { ...Actions }\n)(Inputs);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport shortid from 'shortid';\nimport { Identicon } from 'ethereum-react-components';\nimport Inputs from './inputs/Inputs.js';\nimport * as Helpers from '../../utils/helperFunctions';\nimport * as Actions from '../../actions/actions';\nimport web3 from '../../web3';\n\nexport class ExecuteConstants extends Component {\n  constructor(props) {\n    super(props);\n    this.state = this.props;\n    this.executeInput = this.executeInput.bind(this);\n    this.updateToTransaction = this.updateToTransaction.bind(this);\n  }\n\n  executeInput(e, input, func) {\n    if (!web3) {\n      return;\n    }\n\n    const index = e.target.getAttribute('index');\n    const value = e.target.value;\n\n    const BN = web3.utils.BN;\n    const contractInfo = this.state.reducers.selectedContract.contract;\n\n    const jsonInterface = contractInfo.jsonInterface;\n    const funcName = func.name;\n\n    func.inputs[index].value = value;\n    console.log(...func.inputs);\n\n    const inputs = func.inputs.map(inp => {\n      return inp.type.includes('int')\n        ? new BN(web3.utils.toWei(inp.value.replace(',', '.')))\n        : inp.value;\n    });\n\n    const contract = new web3.eth.Contract(\n      JSON.parse(jsonInterface),\n      contractInfo.contractAddress\n    );\n\n    contract.options.address = contractInfo.contractAddress;\n\n    try {\n      contract.methods[funcName](...inputs)\n        .call()\n        .then((err, res) => {\n          err ? console.warn(err) : console.log('here is res', res);\n        });\n    } catch (err) {\n      console.error(err);\n      this.props.displayGlobalNotification({\n        display: true,\n        type: 'error',\n        msg: err,\n      });\n    }\n  }\n\n  // snapshotted\n  renderFunctionInputs(func) {\n    return (\n      <tr key={shortid.generate()}>\n        <td>\n          <h3>{Helpers.toSentence(func.name)}</h3>\n          {func.inputs.length > 0\n            ? func.inputs.map((input, index) => (\n                <React.Fragment key={shortid.generate()}>\n                  <h4>\n                    <span className=\"dapp-punctuation\">_</span>\n                    {Helpers.toSentence(input.name)}\n                    &nbsp;\n                    <em>- {input.type}</em>\n                  </h4>\n                  <Inputs\n                    data={input}\n                    index={index}\n                    onChange={e => this.executeInput(e, input, func)}\n                  />\n                </React.Fragment>\n              ))\n            : null}\n        </td>\n      </tr>\n    );\n  }\n\n  // snapshotted\n  renderOutputType(output) {\n    return (\n      <dd className=\"output\">\n        {output.type === 'address'\n          ? this.renderAddress(output)\n          : output.type === 'bool'\n          ? this.renderBool(output)\n          : output.value}\n      </dd>\n    );\n  }\n\n  updateToTransaction(e) {\n    e.stopPropagation();\n    console.warn('todo: moved from security icon and need to pudate');\n  }\n\n  // snapshotted\n  renderAddress(output) {\n    const address = output.value !== '' ? output.value : '0x';\n    return (\n      <span className=\"address dapp-shorten-text not-ens-name\">\n        <Identicon\n          classes=\"dapp-identicon dapp-tiny\"\n          title\n          size=\"tiny\"\n          address={address}\n        />\n        <Link\n          to={{ pathname: `/send-from/${address}` }}\n          title={address}\n          onClick={e => this.updateToTransaction(e)}\n        >\n          {address}\n        </Link>\n      </span>\n    );\n  }\n\n  // snapshotted\n  renderBool(output) {\n    const bool = output.value === true;\n    const text = bool ? 'YES ' : 'NO ';\n    const icon = bool ? 'icon-check' : 'icon-ban';\n    return (\n      <React.Fragment>\n        {text}\n        <em>\n          <span className={`icon ${icon}`} />\n        </em>\n      </React.Fragment>\n    );\n  }\n\n  // snapshotted\n  renderFunctionOutputs(func) {\n    return (\n      <tr key={shortid.generate()}>\n        <td>\n          <dl className={`constant-${func.name} dapp-zebra`}>\n            {func.outputs.map((output, index) => (\n              <React.Fragment>\n                {output.name !== '' ? (\n                  <dt>{Helpers.toSentence(output.name)}</dt>\n                ) : null}\n\n                {this.renderOutputType(output)}\n              </React.Fragment>\n            ))}\n          </dl>\n        </td>\n      </tr>\n    );\n  }\n\n  // TODO: snapshot\n  render() {\n    const contract = this.state.reducers.selectedContract.contract;\n    const constants = this.state.reducers.ObservedContracts[contract.address]\n      .contractConstants;\n    return (\n      <div className=\"col col-8 mobile-full contract-info\">\n        <h2>Read from contract</h2>\n        <table className=\"contract-constants dapp-zebra\">\n          <tbody>\n            {constants\n              ? constants.map(func => (\n                  <React.Fragment>\n                    {this.renderFunctionInputs(func)}\n                    {this.renderFunctionOutputs(func)}\n                  </React.Fragment>\n                ))\n              : ''}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  ...state,\n  contract: state.reducers.contract,\n  ObservedContracts: state.reducers.ObservedContracts,\n  selectedContract: state.reducers.selectedContract,\n  showContractFunctions: state.reducers.showContractFunctions,\n});\n\nexport default connect(\n  mapStateToProps,\n  { ...Actions }\n)(ExecuteConstants);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport shortid from 'shortid';\n\nimport compose from 'recompose/compose';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport { Identicon } from 'ethereum-react-components';\nimport * as Actions from '../../actions/actions';\nimport { displayPriceFormatter } from '../../utils/utils';\nimport { combineWallets, sortByBalance } from '../../utils/helperFunctions';\n\nconst styles = theme => ({\n  keyIcon: {\n    width: '3%',\n    display: 'inline-block',\n    WebkitTransform: 'rotate(45deg)',\n    MozTransform: 'rotate(45deg)',\n    MsTransform: 'rotate(45deg)',\n    OTransform: 'rotate(45deg)',\n    transform: 'rotate(45deg)',\n  },\n});\n\nexport class WalletDropdown extends Component {\n  constructor(props) {\n    super(props);\n\n    const { Wallets, WalletContracts } = this.props.reducers;\n    const WalletsCombined = combineWallets(Wallets, WalletContracts);\n\n    this.state = {\n      Wallets: WalletsCombined,\n      fromWallet: WalletsCombined[0].address,\n      dropdownConfig: this.props.dropdownConfig,\n    };\n    this.props.updateMainDCF({\n      name: 'MainOwnerAddress',\n      value: this.state.fromWallet,\n    });\n    // let msc = this.props.reducers.DeployContractForm.multiSigContract;\n    const owners = this.props.reducers.DeployContractForm.multiSigContract\n      .owners;\n    owners[0] = this.state.fromWallet;\n    const obj = {\n      ...this.props.reducers.DeployContractForm.multiSigContract,\n      MainOwnerAddress: this.state.fromWallet,\n      owners,\n    };\n    this.props.updateDeployContractForm(obj);\n    this.chooseWallet = this.chooseWallet.bind(this);\n  }\n\n  // shouldComponentUpdate(prevProps, prevState) {\n  //   if(this.props.disabled !== prevProps.disabled) {\n  //     return true;\n  //   }\n  //   if(this.props.fromWallet !== prevProps.fromWallet) {\n  //     return true;\n  //   }\n  //   return false;\n  // }\n\n  chooseWallet(e) {\n    this.setState({ fromWallet: e.target.value });\n\n    if (this.state.dropdownConfig.component === 'deployToken') {\n      this.props.returnDeployTokenAddress(e);\n    }\n\n    if (this.state.dropdownConfig.component === 'Send') {\n      this.props.updateTransactionToSend({\n        name: e.target.getAttribute('name'),\n        value: e.target.value,\n      });\n      return;\n    }\n\n    if (this.state.dropdownConfig.component === 'DeployContractForm') {\n      this.props.updateMainDCF({\n        name: 'MainOwnerAddress',\n        value: e.target.value,\n      });\n\n      // let msc = this.props.reducers.DeployContractForm.multiSigContract;\n      const owners = this.props.reducers.DeployContractForm.multiSigContract\n        .owners;\n      owners[0] = e.target.value;\n      const obj = {\n        ...this.props.reducers.DeployContractForm.multiSigContract,\n        MainOwnerAddress: e.target.value,\n        owners,\n      };\n      this.props.updateDeployContractForm(obj);\n      return;\n    }\n\n    if (this.state.dropdownConfig.component === 'ExecuteFunctions') {\n      this.props.updateExecutingWallet({\n        name: 'executingWallet',\n        value: e.target.value,\n      });\n    }\n  }\n\n  render() {\n    const wallets = this.state.Wallets;\n    const config = this.state.dropdownConfig;\n    return (\n      <React.Fragment>\n        <select\n          className={config.selectClassName}\n          name={config.selectName}\n          onChange={e => this.chooseWallet(e)}\n          value={this.state.fromWallet}\n          disabled={this.props.disabled}\n        >\n          {wallets.map(w => {\n            return (\n              <option key={shortid.generate()} value={w.address}>\n                {w.addressType === 'walletAddress' ? '🔑 ' : null}\n                {Number(\n                  displayPriceFormatter(this.props, w.balance, 'ETHER')\n                ).toFixed(2)}\n                &nbsp; - &nbsp; ETHER\n              </option>\n            );\n          })}\n        </select>\n        <Identicon\n          classes=\"dapp-identicon dapp-small\"\n          title\n          size=\"small\"\n          address={this.state.fromWallet}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  ...state,\n});\n\nexport default compose(\n  withStyles(styles, { name: 'WalletDropdown' }),\n  connect(\n    mapStateToProps,\n    { ...Actions }\n  )\n)(WalletDropdown);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport shortid from 'shortid';\nimport Inputs from './inputs/Inputs';\nimport WalletDropdown from './WalletDropdown';\nimport * as Helpers from '../../utils/helperFunctions';\nimport * as Actions from '../../actions/actions';\n\nexport class ExecuteFunctions extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ...this.props,\n      executingWallet: this.props.reducers.Wallets[0],\n      // chosenFunction: 'Pick A Function'\n    };\n    this.chooseFunction = this.chooseFunction.bind(this);\n    this.chooseWallet = this.chooseWallet.bind(this);\n    this.executeContractFunction = this.executeContractFunction.bind(this);\n  }\n\n  chooseFunction(e) {\n    const contract = this.state.reducers.selectedContract.contract;\n    const functions = this.state.reducers.ObservedContracts[contract.address];\n    if (e.target.value === 'pickFunctionDefault') {\n      this.setState({ chosenFunction: 'Pick A Function' });\n      this.props.emptySelectedFunction({});\n      return;\n    }\n    const func = functions.contractFunctions[e.target.selectedIndex - 1];\n    if (func.name === e.target.value) {\n      func.contractAddress = contract.address;\n      this.setState({ chosenFunction: e.target.value });\n      this.props.updateSelectedFunction(func);\n    } else {\n      // TODO: global\n      /*\n      Transaction sent in green\n      Returned error: authentication needed: password or unlock\n      */\n    }\n  }\n\n  chooseWallet(e) {\n    this.setState({ executingWallet: e.target.value });\n    this.props.updateExecutingWallet({\n      name: 'executingWallet',\n      value: e.target.value,\n    });\n  }\n\n  executeContractFunction(e) {\n    const web3 = this.props.web3 ? this.props.web3.web3Instance : null;\n    if (!web3) {\n      return;\n    }\n    const BN = web3.utils.BN;\n    const contractInfo = this.props.reducers.selectedContract.contract;\n    const jsonInterface = contractInfo.jsonInterface;\n    const funcName = this.props.selectedFunction.name;\n\n    const inputs = this.props.selectedFunction.inputs.map(inp => {\n      return inp.type.includes('int')\n        ? new BN(web3.utils.toWei(inp.value.replace(',', '.')))\n        : inp.value;\n    });\n\n    const execWallet = this.props.selectedFunction.executingWallet;\n    const contract = new web3.eth.Contract(JSON.parse(jsonInterface));\n    contract.options.address = contractInfo.contractAddress;\n\n    try {\n      contract.methods[funcName](...inputs)\n        .send({\n          from: execWallet,\n        })\n        .on('transactionHash', hash => {\n          console.log('transactionHash', hash);\n        })\n        .on('confirmation', (confirmationNumber, receipt) => {\n          console.log('confirmationNumber', confirmationNumber);\n        })\n        .on('receipt', receipt => {\n          console.log('receipt', receipt);\n        });\n    } catch (err) {\n      console.warn(err);\n      this.props.displayGlobalNotification({\n        display: true,\n        type: 'error',\n        msg: err,\n      });\n    }\n  }\n\n  renderAccountDropdown() {\n    const dropdownConfig = {\n      component: 'ExecuteFunctions',\n      selectClassName: '',\n      selectName: 'dapp-select-account',\n    };\n    return (\n      <div className=\"dapp-select-account\">\n        <WalletDropdown dropdownConfig={dropdownConfig} />\n      </div>\n    );\n  }\n\n  // snapshotted\n  renderSelectFunction() {\n    const contract = this.state.reducers.selectedContract.contract;\n    const functions = this.state.reducers.ObservedContracts[contract.address]\n      .contractFunctions;\n    return (\n      <React.Fragment>\n        <h2>Write to contract</h2>\n        <h4>Select Function</h4>\n        <select\n          className=\"select-contract-function\"\n          name=\"select-contract-function\"\n          onChange={e => this.chooseFunction(e)}\n          defaultValue=\"Pick A Function\"\n          value={this.state.chosenFunction}\n        >\n          <option\n            key={shortid.generate()}\n            disabled=\"\"\n            name=\"pickFunctionDefault\"\n            defaultValue=\"Pick A Function\"\n            value=\"pickFunctionDefault\"\n          >\n            Pick a function\n          </option>\n          {functions\n            ? functions.map((c, i) => (\n                <option key={shortid.generate()} value={c.name}>\n                  {Helpers.toSentence(c.name, true)}\n                </option>\n              ))\n            : ''}\n        </select>\n      </React.Fragment>\n    );\n  }\n\n  // snapshotted\n  renderFunctionInputs() {\n    const contract = this.props.reducers.selectedContract.contract;\n    const selectedFunction = this.props.reducers.selectedFunction;\n    const inputs =\n      selectedFunction !== undefined ? selectedFunction.inputs : [];\n    return (\n      <React.Fragment>\n        {inputs\n          ? inputs.map((input, index) => (\n              <React.Fragment key={shortid.generate()}>\n                <h4>\n                  {Helpers.toSentence(input.name)}\n                  &nbsp;\n                  <em>- {input.type}</em>\n                </h4>\n                <Inputs data={input} index={index} />\n              </React.Fragment>\n            ))\n          : null}\n      </React.Fragment>\n    );\n  }\n\n  renderIsExecutable() {\n    const executable = this.props.reducers.selectedFunction\n      ? this.props.reducers.selectedFunction\n      : {};\n    const bool =\n      Object.keys(executable).length === 0 && executable.constructor === Object;\n    return (\n      <React.Fragment>\n        {!bool ? (\n          <React.Fragment>\n            <hr className=\"dapp-clear-fix\" />\n            <h4> Execute from </h4>\n            {this.renderAccountDropdown()}\n            <button\n              className=\"dapp-block-button execute\"\n              onClick={e => this.executeContractFunction(e)}\n            >\n              Execute\n            </button>\n          </React.Fragment>\n        ) : null}\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"col col-4 mobile-full contract-functions\">\n        {this.renderSelectFunction()}\n        {this.renderFunctionInputs()}\n        {this.renderIsExecutable()}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  ...state,\n  contract: state.reducers.contract,\n  ObservedContracts: state.reducers.ObservedContracts,\n  selectedFunction: state.reducers.selectedFunction,\n  selectedContract: state.reducers.selectedContract,\n  showContractFunctions: state.reducers.showContractFunctions,\n  Wallets: state.reducers.Wallets,\n});\n\nexport default connect(\n  mapStateToProps,\n  { ...Actions }\n)(ExecuteFunctions);\n","import React, { Component } from 'react';\nimport ExecuteConstants from './ExecuteConstants';\nimport ExecuteFunctions from './ExecuteFunctions';\n\nexport class ExecutableContract extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showContractFunctions: false,\n    };\n  }\n\n  toggleContractInfo(e) {\n    this.setState({ showContractFunctions: !this.state.showContractFunctions });\n  }\n\n  render() {\n    const show = this.state.showContractFunctions;\n    let divStyle;\n    show === undefined || show\n      ? (divStyle = { display: 'block' })\n      : (divStyle = { display: 'none' });\n    return (\n      <div className=\"execute-contract\">\n        <button\n          className=\"toggle-visibility dapp-block-button dapp-small\"\n          onClick={e => this.toggleContractInfo(e)}\n        >\n          Hide contract info\n        </button>\n        <div className=\"dapp-clear-fix\" />\n        <div className=\"row clear\" style={divStyle}>\n          <ExecuteConstants />\n          <ExecuteFunctions />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ExecutableContract;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport shortid from 'shortid';\nimport * as Utils from '../../utils/utils';\nimport * as Actions from '../../actions/actions';\n\nconst DateFormat = props => {\n  return (\n    <td\n      className=\"time simptip-position-right simptip-movable\"\n      data-tooltip=\"//TODO: get timestamp\"\n    >\n      <h2>{Utils.getMonthName(props.log.timestamp)}</h2>\n      <p>{Utils.getDate(props.log.timestamp)}</p>\n    </td>\n  );\n};\n\nconst LogValue = props => {\n  return (\n    <p key={shortid.generate()} style={{ wordBreak: 'break-word' }}>\n      {props.val} : &nbsp; <strong> {props.log.returnValues[props.val]}</strong>\n      <br />\n    </p>\n  );\n};\n\nconst Event = props => {\n  return (\n    <td className=\"account-name\">\n      <h2>{props.log.event}</h2>\n      {Object.keys(props.log.returnValues).map((val, i) =>\n        isNaN(val) ? <LogValue log={props.log} val={val} /> : null\n      )}\n    </td>\n  );\n};\n\nexport class ContractEvents extends Component {\n  constructor(props) {\n    super(props);\n    this.state = this.props;\n    this.displayEventModal = this.displayEventModal.bind(this);\n    this.setState({ showContractFunctions: true });\n  }\n\n  displayEventModal(e, log) {\n    log.originalContractName = this.props.reducers.selectedContract.contract[\n      'contract-name'\n    ];\n    log.originalContractAddress = this.props.reducers.selectedContract.contract.address;\n\n    this.props.updateSelectedEvent(log);\n    this.props.displayModal('displayEventInfo');\n  }\n\n  render() {\n    const contract = this.props.reducers.selectedContract.contract;\n    const logs = this.props.reducers.ObservedContracts[contract.address].logs;\n    return (\n      <table className=\"dapp-zebra transactions\">\n        <tbody>\n          {logs.map(log => (\n            <tr\n              key={shortid.generate()}\n              onClick={e => {\n                this.displayEventModal(e, log);\n              }}\n              data-transaction-hash={log.transactionHash}\n              data-block-hash={log.blockHash}\n            >\n              <DateFormat log={log} />\n              <Event log={log} />\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return state;\n};\n\nexport default connect(\n  mapStateToProps,\n  { ...Actions }\n)(ContractEvents);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { Identicon } from 'ethereum-react-components';\nimport SU from '../components/elements/SelectableUnit';\nimport ContractActionBar from '../components/elements/ContractActionBar';\nimport ExecutableContract from '../components/elements/ExecutableContract';\nimport ContractEvents from '../components/elements/ContractEvents';\n\nimport NoMatchingTransaction from '../components/elements/NoMatchingTransaction';\n\nimport LatestTransactions from '../components/elements/LatestTransactions';\n\nimport { displayPriceFormatter } from '../utils/utils';\nimport * as Actions from '../actions/actions';\nimport web3 from '../web3';\n\nimport NotFound from './NotFound';\n\nconst StickyBar = ({ address }) => {\n  return (\n    <div className=\"dapp-sticky-bar dapp-container\">\n      <Identicon classes=\"dapp-identicon\" title address={address} />\n    </div>\n  );\n};\n\nconst StatelessSummary = ({ contract }) => {\n  return (\n    <React.Fragment>\n      <h1>\n        <em className=\"edit-name\">{contract['contract-name']}</em>\n        <i className=\"edit-icon icon-pencil\" />\n      </h1>\n      <h2 className=\"copyable-address\">\n        <i className=\"icon-key\" title=\"Account\" />\n        <span>{contract.address}</span>\n      </h2>\n      <div className=\"clear\" />\n    </React.Fragment>\n  );\n};\n\nexport class SingleContractView extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ...this.props,\n      dailyEtherLimit: '',\n      requiredSignatures: '',\n      ownersList: '',\n      showContractFunctions: true,\n    };\n    this.redirectToOwnersSingleView = this.redirectToOwnersSingleView.bind(\n      this\n    );\n    this.watchContractEvents = this.watchContractEvents.bind(this);\n    this.toggleContractInfo = this.toggleContractInfo.bind(this);\n    this.displayEventModal = this.displayEventModal.bind(this);\n    this.executeAndWatch = this.executeAndWatch.bind(this);\n    this.executeFunctions = this.executeFunctions.bind(this);\n    this.updateContractWithMethods = this.updateContractWithMethods.bind(this);\n    this.updateContractWithMethodOutputs = this.updateContractWithMethodOutputs.bind(\n      this\n    );\n    // this.setState({ showContractFunctions: true });\n  }\n\n  componentDidMount() {\n    this.setState({ displaySU: false });\n    // this.setState({ showContractFunctions: true });\n  }\n\n  toggleSU() {\n    if (this.state.displaySU === undefined) this.setState({ displaySU: false });\n    else {\n      this.state.displaySU\n        ? this.setState({ displaySU: false })\n        : this.setState({ displaySU: true });\n    }\n  }\n\n  displayEventModal(e, log) {\n    /* eslint no-param-reassign: [\"error\", { \"props\": false }] */\n    log.originalContractName = this.props.reducers.selectedContract.contract[\n      'contract-name'\n    ];\n    /* eslint no-param-reassign: [\"error\", { \"props\": false }] */\n    log.originalContractAddress = this.props.reducers.selectedContract.contract.address;\n\n    this.props.updateSelectedEvent(log);\n    this.props.displayModal('displayEventInfo');\n  }\n\n  executeAndWatch(e, contract) {\n    this.executeFunctions(e, contract);\n    this.watchContractEvents(e, contract);\n  }\n\n  updateContractWithMethods(contract, contractFunctions, contractConstants) {\n    if (!contract.deployedWalletContract) {\n      this.props.addObservedContractFunctions({\n        address: contract.address,\n        value: contractFunctions,\n        name: 'contractFunctions',\n      });\n      this.props.addObservedContractConstants({\n        address: contract.address,\n        value: contractConstants,\n        name: 'contractConstants',\n      });\n    } else {\n      this.props.addDeployedContractFunctions({\n        address: contract.address,\n        value: contractFunctions,\n        name: 'contractFunctions',\n      });\n      this.props.addDeployedContractConstants({\n        address: contract.address,\n        value: contractConstants,\n        name: 'contractConstants',\n      });\n    }\n  }\n\n  updateContractWithMethodOutputs(contract, method, index) {\n    if (!contract.deployedWalletContract) {\n      this.props.updateInitialObservedContractMethodOutputs({\n        contractAddress: contract.address,\n        name: method.name,\n        index,\n        value: method.outputs,\n      });\n    } else {\n      this.props.updateInitialDeployedContractMethodOutputs({\n        contractAddress: contract.address,\n        name: method.name,\n        index,\n        value: method.outputs,\n      });\n    }\n  }\n\n  executeFunctions(e, contract) {\n    const contractInstance = new web3.eth.Contract(\n      JSON.parse(contract.jsonInterface),\n      contract.address\n    );\n    // should i bag this and instead of push to array, redux it and set key to function name?\n    // START\n    const contractFunctions = [];\n    const contractConstants = [];\n    JSON.parse(contract.jsonInterface).map(func => {\n      if (func.type == 'function') {\n        func.constant\n          ? contractConstants.push(func)\n          : contractFunctions.push(func);\n      }\n    });\n\n    this.updateContractWithMethods(\n      contract,\n      contractFunctions,\n      contractConstants\n    );\n\n    // console.log(\"is it a deployed wallet contract?! \", contract.deployedWalletContract)\n\n    // // TODO: conditional to update either observed contracts,\n    // // selected wallet, or deployed wallet contracts\n    // // right now is only updating observed contracts\n    // this.props.addObservedContractFunctions({\n    //   address: contract.address,\n    //   value: contractFunctions,\n    //   name: 'contractFunctions',\n    // });\n    // this.props.addObservedContractConstants({\n    //   address: contract.address,\n    //   value: contractConstants,\n    //   name: 'contractConstants',\n    // });\n    // END\n    contractConstants.map((method, index) => {\n      const args = method.inputs.map(input => {\n        input.typeShort = input.type.match(/[a-z]+/i)[0];\n        if (input.value === undefined || input.value === null) {\n          input.value = '';\n        }\n        if (input.typeShort === 'bytes' && input.value === '') {\n          input.value = '0x0000000000000000000000000000000000000000';\n        } else if (input.value === '' && input.typeShort !== 'address') {\n          input.value = '0x00';\n        }\n        return input.value;\n      });\n\n      console.log('method: ', method);\n      console.log('args: ', ...args);\n      console.log('name: ', method.name);\n\n      try {\n        contractInstance.methods[method.name](...args).call(res => {\n          method.outputs.map((output, i) => (method.outputs[i].value = res[i]));\n        });\n      } catch (err) {\n        console.warn('method: ', method);\n        console.warn('args: ', ...args);\n        console.warn('name: ', method.name);\n        console.warn(err);\n      }\n\n      this.updateContractWithMethodOutputs(contract, method, index);\n\n      // this.props.updateInitialContractMethodOutputs({\n      //   contractAddress: contract.address,\n      //   name: method.name,\n      //   index: index,\n      //   value: method.outputs,\n      // });\n    });\n  }\n\n  /*\n  Watches custom events\n\n  @param {Object} contract the account object with .jsonInterface\n  */\n  watchContractEvents(e, contract) {\n    const contractInstance = new web3.eth.Contract(\n      JSON.parse(contract.jsonInterface),\n      contract.address\n    );\n\n    // TODO indicate block range\n    const subscription = contractInstance.events.allEvents({});\n\n    contractInstance.getPastEvents('allEvents', (error, logs) => {\n      if (!error && logs.length > 0) {\n        logs.map(log => {\n          web3.eth.getBlock(log.blockNumber, (err, res) => {\n            // convert to milliseconds\n            log.timestamp = new Date(res.timestamp * 1000);\n            this.props.addPastContractLogs(log);\n          });\n        });\n      } else {\n        console.warn('error', error);\n        // TODO: global notification\n      }\n    });\n\n    subscription.on('data', log => {\n      web3.eth.getBlock(log.blockNumber, (err, res) => {\n        if (err) console.warn(err);\n        if (res) {\n          // convert to milliseconds\n          log.timestamp = new Date(res.timestamp * 1000);\n          this.props.updateContractLog(log);\n        }\n      });\n    });\n  }\n\n  toggleContractInfo(e) {\n    console.log('here intoggleContractInfo', e);\n    this.setState({ showContractFunctions: !this.state.showContractFunctions });\n  }\n\n  redirectToOwnersSingleView(e) {\n    console.log(e);\n    // determine if address if for account or contract\n    // gather info from wallet or contract redux state objects\n    // aciont for updateSelectedContract or updateSelectedWallet\n  }\n\n  renderWalletDetails() {\n    return (\n      <React.Fragment>\n        <div className=\"row clear wallet-info\">\n          <div className=\"col col-4 mobile-full\">\n            <h3>\n              Daily limit\n              <span style={{ fontWeight: 200 > 10.0 }}> ether</span>\n            </h3>\n            10.00 ether remaining today\n          </div>\n          <div className=\"col col-4 mobile-full\">\n            <h3>Required signatures</h3> 2\n          </div>\n          <div className=\"col col-4 mobile-full\">\n            <h3>Owners</h3>\n          </div>\n          security icons\n        </div>\n        <div className=\"account-info\">\n          <h3>Note</h3>\n          <p>\n            Most exchanges don't support receiving ether from a contract wallet\n            yet. Be sure to move your balance to an account address first!\n          </p>\n        </div>\n      </React.Fragment>\n    );\n  }\n\n  renderSummary() {\n    const { contract } = this.props.reducers.selectedContract;\n    return (\n      <div className=\"accounts-page-summary\">\n        <Identicon classes=\"dapp-identicon\" title address={contract.address} />\n        <header>\n          <StatelessSummary contract={contract} />\n          <span className=\"account-balance\">\n            {displayPriceFormatter(this.props, contract.balance)}\n            {contract.balance}\n          </span>\n        </header>\n        <table className=\"token-list dapp-zebra\">\n          <tbody />\n        </table>\n        {contract.deployedWalletContract ? this.renderWalletDetails() : null}\n      </div>\n    );\n  }\n\n  renderEvents() {\n    const { contract } = this.props.reducers.selectedContract;\n    const logs = contract.logs ? contract.logs : undefined;\n    return (\n      <React.Fragment>\n        <h2>Latest events</h2>\n        <br />\n        <div>\n          <input\n            type=\"checkbox\"\n            id=\"watch-events-checkbox\"\n            className=\"toggle-watch-events\"\n            onClick={e => this.executeAndWatch(e, contract)}\n          />\n          <label htmlFor=\"watch-events-checkbox\">Watch contract events</label>\n        </div>\n        <br />\n        <input\n          type=\"text\"\n          className=\"filter-transactions\"\n          placeholder=\"Filter events\"\n        />\n        {logs && logs.length ? <ContractEvents /> : null}\n      </React.Fragment>\n    );\n  }\n\n  renderAccountTransactions() {\n    const { address } = this.props.reducers.selectedContract.contract;\n    const transactions = this.props.reducers.Transactions;\n    const accountTxns = {};\n    Object.keys(transactions).map(hash => {\n      if (\n        transactions[hash].from === address.toLowerCase() ||\n        transactions[hash].to === address.toLowerCase()\n      ) {\n        accountTxns[hash] = transactions[hash];\n      }\n      return null;\n    });\n    return (\n      <React.Fragment>\n        {Object.keys(accountTxns).length &&\n        accountTxns.constructor === Object ? (\n          <LatestTransactions transactions={accountTxns} />\n        ) : (\n          <NoMatchingTransaction />\n        )}\n      </React.Fragment>\n    );\n  }\n\n  renderSingleContract() {\n    const { contract } = this.props.reducers.selectedContract;\n\n    const logs = contract.logs ? contract.logs : undefined;\n    const contractFunctions = contract.contractFunctions\n      ? contract.contractFunctions\n      : undefined;\n    const contractConstants = contract.contractConstants\n      ? contract.contractConstants\n      : undefined;\n\n    return (\n      <div className=\"dapp-container accounts-page\">\n        <StickyBar address={contract.address} />\n        {this.renderSummary()}\n        <ContractActionBar contract={contract} />\n        {contractConstants &&\n        contractFunctions &&\n        (contractConstants.length || contractFunctions.length) ? (\n          <ExecutableContract />\n        ) : null}\n        <div className=\"accounts-transactions\">\n          {this.renderEvents()}\n          {this.renderAccountTransactions()}\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    const c = this.props.reducers.selectedContract;\n    return c === undefined || c === '' ? (\n      <NotFound />\n    ) : (\n      this.renderSingleContract()\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return state;\n};\n\nexport default connect(\n  mapStateToProps,\n  { ...Actions }\n)(SingleContractView);\n","import React, { Component } from 'react';\nimport isEqual from 'lodash/isEqual';\nimport { connect } from 'react-redux';\nimport shortid from 'shortid';\nimport ContractItem from './elements/ContractItem';\nimport ButtonDescription from './ButtonDescription';\nimport { displayModal } from '../actions/actions';\n\nconst buttonTitle = 'Custom Contracts';\nconst buttonDescription =\n  'To watch and interact with a contract already deployed on the blockchain, you need to know its address and the description of its interface in JSON format.';\n\nexport class CustomContracts extends Component {\n  shouldComponentUpdate(prevProps, prevState) {\n    if (!isEqual(prevProps.ObservedContracts, this.props.ObservedContracts)) {\n      return true;\n    }\n    return false;\n  }\n\n  renderWatchContractButton() {\n    return (\n      <React.Fragment>\n        <button\n          className=\"wallet-box create add-contract\"\n          onClick={() => this.props.displayModal('displayWatchContract')}\n        >\n          <div className=\"account-pattern\">+</div>\n          <h3>WATCH CONTRACT</h3>\n        </button>\n        <div className=\"dapp-clear-fix\" />\n      </React.Fragment>\n    );\n  }\n\n  renderObservedContracts() {\n    const oc = this.props.ObservedContracts;\n    if (oc !== undefined && Object.keys(oc).length !== 0) {\n      return (\n        <React.Fragment>\n          <div className=\"wallet-box-list\">\n            {Object.keys(oc).map(contract => (\n              <ContractItem\n                key={shortid.generate()}\n                contract={oc[contract]}\n                addressType=\"ObservedContracts\"\n              />\n            ))}\n          </div>\n        </React.Fragment>\n      );\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"contracts-view-custom-contracts\">\n        <ButtonDescription\n          title={buttonTitle}\n          description={buttonDescription}\n        />\n        {this.renderObservedContracts()}\n        {this.renderWatchContractButton()}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  ObservedContracts: state.reducers.ObservedContracts,\n});\n\nexport default connect(\n  mapStateToProps,\n  { displayModal }\n)(CustomContracts);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { EthAddress, Identicon } from 'ethereum-react-components';\nimport { displayModal, tokenToDelete } from '../../actions/actions';\n\nimport { tokenInterface } from '../../constants/TokenInterfaceConstant';\n\nimport { makeID } from '../../utils/helperFunctions';\n\nexport class TokenBox extends Component {\n  constructor(props) {\n    super(props);\n    this.deleteTokenModal = this.deleteTokenModal.bind(this);\n  }\n\n  deleteTokenModal(e) {\n    this.props.tokenToDelete(this.props.token);\n    this.props.displayModal('displayDeleteToken');\n  }\n\n  renderBalance() {\n    const token = this.props.token;\n    return (\n      <span className=\"account-balance\">\n        {token.totalSupply}\n        <span>{token.symbol}</span>\n      </span>\n    );\n  }\n\n  render() {\n    const GeoPattern = require('geopattern');\n    const pattern = GeoPattern.generate('0x000', { color: '#CCC6C6' });\n    const iconStyle = { backgroundImage: pattern.toDataUrl() };\n    const token = this.props.token;\n\n    const address =\n      token === {} || token.address === '' ? makeID() : token.address;\n\n    return (\n      <div className=\"wallet-box tokens\" style={iconStyle}>\n        <Identicon\n          classes=\"dapp-identicon dapp-small\"\n          title\n          size=\"small\"\n          address={address}\n        />\n        <h3>{token.name}</h3>\n        <button\n          className=\"delete-token\"\n          onClick={e => this.deleteTokenModal(e)}\n        >\n          <i className=\"icon-trash\" />\n        </button>\n        {this.renderBalance()}\n        <EthAddress short classes=\"account-id\" address={address} />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return state;\n};\n\nexport default connect(\n  mapStateToProps,\n  { displayModal, tokenToDelete }\n)(TokenBox);\n","import React, { Component } from 'react';\nimport isEqual from 'lodash/isEqual';\nimport { connect } from 'react-redux';\nimport TokenBox from './elements/TokenBox';\nimport ButtonDescription from './ButtonDescription';\nimport { displayModal, fetchTokensForAutoScan } from '../actions/actions';\n\nconst buttonTitle = 'Custom Tokens';\nconst buttonDescription =\n  'Tokens are currencies and other fungibles built on the Ethereum platform. In order for accounts to watch for tokens and send them, you have to add their address to this list. You can create your own token by simply modifying this example of a custom token contract or learning more about Ethereum Tokens.';\n\nexport class CustomTokens extends Component {\n  shouldComponentUpdate(prevProps, prevState) {\n    if (!isEqual(prevProps.ObservedTokens, this.props.ObservedTokens)) {\n      return true;\n    }\n    return false;\n  }\n\n  // snapshotted\n  renderObservedTokens() {\n    const ot = this.props.ObservedTokens;\n    if (ot !== undefined && Object.keys(ot).length !== 0) {\n      return (\n        <React.Fragment>\n          <button className=\"wallet-box-list\">\n            {Object.keys(ot).map(token => (\n              <TokenBox key={ot[token].address} token={ot[token]} />\n            ))}\n          </button>\n        </React.Fragment>\n      );\n    }\n  }\n\n  // snapshotted\n  renderAddTokenButton() {\n    return (\n      <React.Fragment>\n        <button\n          className=\"wallet-box create add-token\"\n          onClick={() => this.props.displayModal('displayWatchToken')}\n          style={{ float: 'left' }}\n        >\n          <div className=\"account-pattern\">+</div>\n          <h3>WATCH CUSTOM TOKEN</h3>\n        </button>\n      </React.Fragment>\n    );\n  }\n\n  // TODO: use utility combineWallets\n  autoScanTokens(e) {\n    const wallets = this.props.Wallets;\n    const oc = this.props.ObservedContracts;\n    const addresses = [\n      ...Object.keys(wallets),\n      ...Object.keys(oc).map(key => {\n        return oc[key].address;\n      }),\n      ...Object.keys(oc).map(key => {\n        return oc[key].address;\n      }),\n    ];\n    this.props.fetchTokensForAutoScan(addresses);\n  }\n\n  // snapshotted\n  renderAutoScan() {\n    return (\n      <React.Fragment>\n        {this.props.network === 'main' ? (\n          <button\n            className=\"wallet-box create token-auto-scan\"\n            title=\"Automatically scan for balances of popular tokens on your accounts.\"\n            onClick={this.autoScanTokens()}\n          >\n            <div className=\"account-pattern\">\n              <div className=\"icon icon-target\" />\n            </div>\n            <h3>Auto-Scan</h3>\n          </button>\n        ) : null}\n        <div className=\"dapp-clear-fix\" />\n      </React.Fragment>\n    );\n  }\n\n  // not snapshotted\n  render() {\n    return (\n      <div className=\"contracts-view-custom-tokens\">\n        <ButtonDescription\n          title={buttonTitle}\n          description={buttonDescription}\n        />\n        {this.renderObservedTokens()}\n        {this.renderAddTokenButton()}\n        {this.renderAutoScan()}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  network: state.reducers.network,\n  ObservedTokens: state.reducers.ObservedTokens,\n  Wallets: state.reducers.Wallets,\n  ObservedContracts: state.reducers.ObservedContracts,\n});\n\nexport default connect(\n  mapStateToProps,\n  { displayModal, fetchTokensForAutoScan }\n)(CustomTokens);\n","export const vulnerableWallets = {\n  full: [\n    '0x6000357c010000000000000000000000000000000000000000000000000000000090048063173825d9146100f75780632f54bf6e146101085780635c52c2f51461011d5780637065cb481461012b578063797af6271461013c578063b20d30a914610151578063b61d27f614610162578063ba51a6df1461017f578063cbf0b0c014610190578063f00d4b5d146101a1576100f15b600034116100a1576100ee565b7fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c60403373ffffffffffffffffffffffffffffffffffffffff168152602001348152602001604090036040a15b5b565b60006000f35b61010260043561049f565b60006000f35b610113600435610636565b8060005260206000f35b6101256106b0565b60006000f35b61013660043561034e565b60006000f35b610147600435610a19565b8060005260206000f35b61015c600435610678565b60006000f35b610175600435602435606460443561072d565b8060005260206000f35b61018a6004356105cf565b60006000f35b61019b6004356106e8565b60006000f35b6101af6004356024356101b5565b60006000f35b60006040600036808284378201915050604090036040206101d581610d2a565b6101de57610347565b61010260005060008573ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000505491506000821461021e57610224565b50610349565b61022d83610636565b6102365761023c565b50610349565b82600260005083610100811061024e57005b90900160006101000a81548173ffffffffffffffffffffffffffffffffffffffff02191690830217905550600061010260005060008673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050819055508161010260005060008573ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050819055507fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c60408573ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff168152602001604090036040a15b505b505050565b60406000368082843782019150506040900360402061036c81610d2a565b6103755761049a565b61037e82610636565b6103875761038d565b5061049c565b60fa60016000505410156103a0576103aa565b6103a8610ec4565b505b60fa60016000505410156103bd576103c3565b5061049c565b600160008181505480929190600101919050555081600260005060016000505461010081106103ee57005b90900160006101000a81548173ffffffffffffffffffffffffffffffffffffffff0219169083021790555060016000505461010260005060008473ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050819055507f994a936646fe87ffe4f1e469d3d6aa417d6b855598397f323de5b449f765f0c360408373ffffffffffffffffffffffffffffffffffffffff168152602001604090036040a15b505b50565b60006040600036808284378201915050604090036040206104bf81610d2a565b6104c8576105c9565b61010260005060008473ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050549150600082146105085761050e565b506105cb565b6000600260005083610100811061052157005b90900160006101000a81548173ffffffffffffffffffffffffffffffffffffffff02191690830217905550600061010260005060008573ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050819055507f58619076adf5bb0943d100ef88d52d7c3fd691b19d3a9071b555b651fbf418da60408473ffffffffffffffffffffffffffffffffffffffff168152602001604090036040a15b505b5050565b6040600036808284378201915050604090036040206105ed81610d2a565b6105f657610631565b816000600050819055507facbdb084c721332ac59f9b8e392196c9eb0e4932862da8eb9beaf0dad4f550da6040838152602001604090036040a15b505b50565b6000600061010260005060008473ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005054119050610673565b919050565b60406000368082843782019150506040900360402061069681610d2a565b61069f576106ab565b81610105600050819055505b505b50565b6040600036808284378201915050604090036040206106ce81610d2a565b6106d7576106e4565b6000610104600050819055505b505b565b60406000368082843782019150506040900360402061070681610d2a565b61070f57610728565b8173ffffffffffffffffffffffffffffffffffffffff16ff5b505b50565b60006107388461117d565b61074157610808565b7f92ca3a80853e6663fa31fa10b99225f18d4902939b4c53a9caae9043f6efd00460403373ffffffffffffffffffffffffffffffffffffffff1681526020018581526020018673ffffffffffffffffffffffffffffffffffffffff168152602001848490918181526020018282808284378201915050915050604090036040a18473ffffffffffffffffffffffffffffffffffffffff16846000600060008787808284378201915050600084866185025a03f16107fa57005b505060006001029050610a11565b6040600036808284378201915050604090036040209050805061082a81610a19565b15801561088a57506000610107600050600083815260200190815260200160002060005060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b61089357610a10565b84610107600050600083815260200190815260200160002060005060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908302179055508361010760005060008381526020019081526020016000206000506001016000508190555082826101076000506000848152602001908152602001600020600050600201600050919082805482825590600052602060002090601f01602090048101928215610965579182015b82811115610964578235826000505591602001919060010190610946565b5b5090505b808211156109835760008181506000905550600101610969565b5050600050507f1733cbb53659d713b79580f79f3f9ff215f78a7c7aa45890f3b89fc5cddfbf3260408281526020013373ffffffffffffffffffffffffffffffffffffffff1681526020018581526020018673ffffffffffffffffffffffffffffffffffffffff168152602001848490918181526020018282808284378201915050915050604090036040a15b5b949350505050565b600081610a2581610d2a565b610a2e57610d23565b6000610107600050600085815260200190815260200160002060005060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610a8f57610d22565b610107600050600084815260200190815260200160002060005060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610107600050600085815260200190815260200160002060005060010160005054600060006000610107600050600089815260200190815260200160002060005060020160005080548015610b5457820191906000526020600020905b815481529060010190602001808311610b40575b5050600084866185025a03f1610b6657005b50507fe7c957c06e9a662c1a6c77366179f5b702b97651dc28eee7d5bf1dff6e40bb4a60403373ffffffffffffffffffffffffffffffffffffffff1681526020018481526020016101076000506000868152602001908152602001600020600050600101600050548152602001610107600050600086815260200190815260200160002060005060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016101076000506000868152602001908152602001600020600050600201600090918254815260200182825080548015610c8157820191906000526020600020905b815481529060010190602001808311610c6d575b5050915050604090036040a1610107600050600084815260200190815260200160002060006000820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600182016000506000905560028201600050805460008255601f0160209004906000526020600020908101905b80821115610d145760008181506000905550600101610cfa565b505050506001915050610d25565b5b505b919050565b6000600060006000600061010260005060003373ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005054935060008414610d7457610d79565b610ebb565b610103600050600087815260200190815260200160002060009250925060008383506000016000505414610dac57610dcf565b600060005054838350600001600050819055506000838350600101600050819055505b8360020a9050600081848450600101600050541614610ded57610eba565b7fe1c52dc63b719ade82e8bea94cc41a0d5d28e4aaf536adb5e9cccc9ff8c1aeda60403373ffffffffffffffffffffffffffffffffffffffff168152602001878152602001604090036040a16001838350600001600050541115610e7f578282506000016000818150548092919060019003919050555080838350600101600082828250541792505081905550610eb9565b6101036000506000878152602001908152602001600020600060008201600050600090556001820160005060009055505060019450610ebb565b5b5b50505050919050565b60006000600190505b600160005054811015611178575b60016000505481108015610f3a575060006002600050826101008110610efd57005b90900160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b15610f4c578080600101915050610edb565b5b6001600160005054118015610fb15750600060026000506001600050546101008110610f7557005b90900160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b15610fd057600160008181505480929190600190039190505550610f4d565b600160005054811080156110345750600060026000506001600050546101008110610ff757005b90900160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b801561108a57506000600260005082610100811061104e57005b90900160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b61109357611173565b600260005060016000505461010081106110a957005b90900160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660026000508261010081106110de57005b90900160006101000a81548173ffffffffffffffffffffffffffffffffffffffff02191690830217905550806101026000506000600260005084610100811061112357005b90900160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050819055505b610ecd565b5b5090565b60006101066000505461118e611216565b11611198576111b7565b6000610104600050819055506111ac611216565b610106600050819055505b61010460005054826101046000505401101580156111e357506101056000505482610104600050540111155b6111ec57611208565b8161010460008282825054019250508190555060019050611211565b60009050611211565b919050565b60006201518042049050611225565b9056',\n    '0x60003560e060020a90048063173825d9146100cb5780632f54bf6e146100dc5780635c52c2f5146100f15780637065cb48146100ff5780637fe6589114610110578063b20d30a914610125578063b61d27f614610136578063ba51a6df14610153578063cbf0b0c014610164578063f00d4b5d14610175576100c560003411610087576100c3565b7fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c600033600160a060020a031681526020013481526020016000a15b565b60006000f35b6100d6600435610277565b60006000f35b6100e76004356106a2565b8060005260206000f35b6100f9610248565b60006000f35b61010a600435610189565b60006000f35b61011b6004356104b6565b8060005260206000f35b61013060043561092e565b60006000f35b61014960243560443560646004356106cb565b8060005260206000f35b61015e60043561045b565b60006000f35b61016f60043561066f565b60006000f35b610183600435602435610345565b60006000f35b60006000368082843782019150506000206101a38161095d565b6101ac57610243565b6101b5826106a2565b6101be576101c4565b50610245565b60018054908160010190555081600260006001548152602001908152602001600020819055506001546003600084600160a060020a03168152602001908152602001600020819055507f994a936646fe87ffe4f1e469d3d6aa417d6b855598397f323de5b449f765f0c3600083600160a060020a031681526020016000a15b505b50565b60006000368082843782019150506000206102628161095d565b61026b57610274565b60006005819055505b50565b600060006000368082843782019150506000206102938161095d565b61029c5761033f565b6003600084600160a060020a03168152602001908152602001600020549150816000146102c8576102ce565b50610341565b6000600260008481526020019081526020016000208190555060006003600085600160a060020a03168152602001908152602001600020819055507f58619076adf5bb0943d100ef88d52d7c3fd691b19d3a9071b555b651fbf418da600084600160a060020a031681526020016000a15b505b5050565b600060006000368082843782019150506000206103618161095d565b61036a57610454565b6003600085600160a060020a03168152602001908152602001600020549150816000146103965761039c565b50610456565b6103a5836106a2565b6103ae576103b4565b50610456565b82600260008481526020019081526020016000208190555060006003600086600160a060020a0316815260200190815260200160002081905550816003600085600160a060020a03168152602001908152602001600020819055507fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c600085600160a060020a0316815260200184600160a060020a031681526020016000a15b505b505050565b60006000368082843782019150506000206104758161095d565b61047e576104b2565b816000819055507facbdb084c721332ac59f9b8e392196c9eb0e4932862da8eb9beaf0dad4f550da60008381526020016000a15b5050565b6000816104c28161095d565b6104cb57610668565b6008600084815260200190815260200160002054600160a060020a0316600014156104f557610667565b6008600084815260200190815260200160002054600160a060020a03166008600085815260200190815260200160002060010154600060006000600860008981526020019081526020016000206002018054801561056f57820191906000526020600020905b81548152906001019060200180831161055b575b50506000848660155a03f15050507f9429218cfc8c83da55f9eaf3044e7b5103fc2bb9a01bf70078cf2496c40c4ebf600033600160a060020a03168152602001848152602001600860008681526020019081526020016000206001015481526020016008600086815260200190815260200160002054600160a060020a03168152602001600860008681526020019081526020016000206002018054801561063357820191906000526020600020905b81548152906001019060200180831161061f575b50506000a160086000848152602001908152602001600020600081556001016000815560010160009055600191505061066a565b5b505b919050565b60006000368082843782019150506000206106898161095d565b6106925761069e565b81600160a060020a0316ff5b5050565b600060006003600084600160a060020a0316815260200190815260200160002054119050919050565b60006106d683610a79565b6106df576107a9565b7f92ca3a80853e6663fa31fa10b99225f18d4902939b4c53a9caae9043f6efd004600033600160a060020a0316815260200184815260200185600160a060020a03168152602001838054801561075157820191906000526020600020905b81548152906001019060200180831161073d575b50506000a183600160a060020a031683600060006000868054801561079257820191906000526020600020905b81548152906001019060200180831161077e575b50506000848660155a03f150505060009050610927565b600060003680828437820191505060002090506107c5816104b6565b1580156107ee57506008600082815260200190815260200160002054600160a060020a03166000145b6107f757610926565b836008600083815260200190815260200160002081905550826008600083815260200190815260200160002060010181905550816008600083815260200190815260200160002060020190818054918054808355916000526020600020906000526020600020601f602080828701049185010460005b8082111561088557838101548582015560010161086d565b84019450508201935050505b808211156108a55760008155600101610891565b5050507fa2e1b6b12a6df8430c7c33911158a9e7087012ca1031dd9fa69d7a4bc449569f600082815260200133600160a060020a0316815260200184815260200185600160a060020a03168152602001838054801561092057820191906000526020600020905b81548152906001019060200180831161090c575b50506000a15b5b9392505050565b60006000368082843782019150506000206109488161095d565b61095157610959565b816006819055505b5050565b60006000600060006003600033600160a060020a031681526020019081526020016000205492508260001461099157610996565b610a71565b60046000868152602001908152602001600020915081546000146109b9576109cc565b6000548281905550600082600101819055505b8260020a9050808260010154166000146109e557610a70565b7f261c71777cbfc40a4342386d9dfc020c8b168f13b3d6f834b789f6f3083439e3600033600160a060020a031681526020018681526020016000a18154600114610a48578180549081600190039055508082600101908154179081905550610a6f565b60046000868152602001908152602001600020600081556001016000905560019350610a71565b5b5b505050919050565b6000610a84336106a2565b610a8d57610afc565b600754610a98610b02565b11610aa257610ab9565b6000600581905550610ab2610b02565b6007819055505b600554826005540110158015610ad55750600654826005540111155b610ade57610af3565b81600590815401908190555060019050610afd565b60009050610afd565b5b919050565b600062015180420490509056',\n    '0x60e060020a600035048063173825d9146100ca5780632f54bf6e146100db5780635c52c2f5146100f05780637065cb48146100fe5780637fe658911461010f578063b20d30a914610124578063b61d27f614610135578063ba51a6df1461014f578063cbf0b0c014610160578063f00d4b5d14610171576100c460003411610086576100c2565b7fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c600033600160a060020a031681526020013481526020016000a15b565b60006000f35b6100d56004356103a4565b60006000f35b6100e66004356104c3565b8060005260206000f35b6100f86101af565b60006000f35b6101096004356102ea565b60006000f35b61011a600435610778565b8060005260206000f35b61012f600435610185565b60006000f35b610145600435602435600061051a565b8060005260206000f35b61015a60043561046d565b60006000f35b61016b6004356104ec565b60006000f35b61017f6004356024356101d9565b60006000f35b60003660008237360160002061019a81610931565b6101a3576101ab565b816006819055505b5050565b6000366000823736016000206101c481610931565b6101cd576101d6565b60006005819055505b50565b60006000366000823736016000206101f081610931565b6101f9576102e3565b6003600085600160a060020a03168152602001908152602001600020549150816000146102255761022b565b506102e5565b610234836104c3565b61023d57610243565b506102e5565b82600260008481526020019081526020016000208190555060006003600086600160a060020a0316815260200190815260200160002081905550816003600085600160a060020a03168152602001908152602001600020819055507fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c600085600160a060020a0316815260200184600160a060020a031681526020016000a15b505b505050565b6000366000823736016000206102ff81610931565b6103085761039f565b610311826104c3565b61031a57610320565b506103a1565b60018054908160010190555081600260006001548152602001908152602001600020819055506001546003600084600160a060020a03168152602001908152602001600020819055507f994a936646fe87ffe4f1e469d3d6aa417d6b855598397f323de5b449f765f0c3600083600160a060020a031681526020016000a15b505b50565b60006000366000823736016000206103bb81610931565b6103c457610467565b6003600084600160a060020a03168152602001908152602001600020549150816000146103f0576103f6565b50610469565b6000600260008481526020019081526020016000208190555060006003600085600160a060020a03168152602001908152602001600020819055507f58619076adf5bb0943d100ef88d52d7c3fd691b19d3a9071b555b651fbf418da600084600160a060020a031681526020016000a15b505b5050565b60003660008237360160002061048281610931565b61048b576104bf565b816000819055507facbdb084c721332ac59f9b8e392196c9eb0e4932862da8eb9beaf0dad4f550da60008381526020016000a15b5050565b600060006003600084600160a060020a0316815260200190815260200160002054119050919050565b60003660008237360160002061050181610931565b61050a57610516565b81600160a060020a0316ff5b5050565b600061052583610a4d565b61052e576105f8565b7f92ca3a80853e6663fa31fa10b99225f18d4902939b4c53a9caae9043f6efd004600033600160a060020a0316815260200184815260200185600160a060020a0316815260200183805480156105a057820191906000526020600020905b81548152906001019060200180831161058c575b50506000a183600160a060020a03168360006000600086805480156105e157820191906000526020600020905b8154815290600101906020018083116105cd575b50506000848660155a03f150505060009050610771565b600036600082373601600020905061060f81610778565b15801561063857506008600082815260200190815260200160002054600160a060020a03166000145b61064157610770565b836008600083815260200190815260200160002081905550826008600083815260200190815260200160002060010181905550816008600083815260200190815260200160002060020190818054918054808355916000526020600020906000526020600020601f602080828701049185010460005b808211156106cf5783810154858201556001016106b7565b84019450508201935050505b808211156106ef57600081556001016106db565b5050507fa2e1b6b12a6df8430c7c33911158a9e7087012ca1031dd9fa69d7a4bc449569f600082815260200133600160a060020a0316815260200184815260200185600160a060020a03168152602001838054801561076a57820191906000526020600020905b815481529060010190602001808311610756575b50506000a15b5b9392505050565b60008161078481610931565b61078d5761092a565b6008600084815260200190815260200160002054600160a060020a0316600014156107b757610929565b6008600084815260200190815260200160002054600160a060020a03166008600085815260200190815260200160002060010154600060006000600860008981526020019081526020016000206002018054801561083157820191906000526020600020905b81548152906001019060200180831161081d575b50506000848660155a03f15050507f9429218cfc8c83da55f9eaf3044e7b5103fc2bb9a01bf70078cf2496c40c4ebf600033600160a060020a03168152602001848152602001600860008681526020019081526020016000206001015481526020016008600086815260200190815260200160002054600160a060020a0316815260200160086000868152602001908152602001600020600201805480156108f557820191906000526020600020905b8154815290600101906020018083116108e1575b50506000a160086000848152602001908152602001600020600081556001016000815560010160009055600191505061092c565b5b505b919050565b60006000600060006003600033600160a060020a03168152602001908152602001600020549250826000146109655761096a565b610a45565b600460008681526020019081526020016000209150815460001461098d576109a0565b6000548281905550600082600101819055505b8260020a9050808260010154166000146109b957610a44565b7f261c71777cbfc40a4342386d9dfc020c8b168f13b3d6f834b789f6f3083439e3600033600160a060020a031681526020018681526020016000a18154600114610a1c578180549081600190039055508082600101908154179081905550610a43565b60046000868152602001908152602001600020600081556001016000905560019350610a45565b5b5b505050919050565b6000610a58336104c3565b610a6157610ad0565b600754610a6c610ad6565b11610a7657610a8d565b6000600581905550610a86610ad6565b6007819055505b600554826005540110158015610aa95750600654826005540111155b610ab257610ac7565b81600590815401908190555060019050610ad1565b60009050610ad1565b5b919050565b600062015180420490509056',\n    '0x6000357c010000000000000000000000000000000000000000000000000000000090048063173825d9146100fe5780632f54bf6e146101155780635c52c2f5146101305780637065cb4814610141578063797af62714610158578063b20d30a914610173578063b61d27f61461018a578063b75c7dc6146101bc578063ba51a6df146101d3578063cbf0b0c0146101ea578063f00d4b5d14610201576100f85b60003411156100f5577fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c60403373ffffffffffffffffffffffffffffffffffffffff168152602001348152602001604090036040a15b5b565b60006000f35b61010f6004803590602001506105e9565b60006000f35b61012660048035906020015061079a565b8060005260206000f35b61013b600450610810565b60006000f35b6101526004803590602001506104ab565b60006000f35b610169600480359060200150610b6f565b8060005260206000f35b6101846004803590602001506107dc565b60006000f35b6101b26004803590602001803590602001803590602001906004018035906020019150610885565b8060005260206000f35b6101cd60048035906020015061021e565b60006000f35b6101e460048035906020015061071c565b60006000f35b6101fb600480359060200150610844565b60006000f35b610218600480359060200180359060200150610321565b60006000f35b600060006000600061010260005060003373ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005054935060008414156102675761031a565b8360020a925061010360005060008681526020019081526020016000206000915091506000838383506001016000505416111561031957818150600001600081815054809291906001019190505550828282506001016000828282505403925050819055507fc7fb647e59b18047309aa15aad418e5d7ca96d173ad704f1031a2c3d7591734b60403373ffffffffffffffffffffffffffffffffffffffff168152602001868152602001604090036040a15b5b5050505050565b600060406000368082843782019150506040900360402061034181610e78565b156104a45761034f8361079a565b1561035a57506104a6565b61010260005060008573ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050549150600082141561039c57506104a6565b6103a4611315565b8273ffffffffffffffffffffffffffffffffffffffff1660026000508361010081106103cc57005b90900160005081905550600061010260005060008673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050819055508161010260005060008573ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050819055507fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c60408573ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff168152602001604090036040a15b505b505050565b6040600036808284378201915050604090036040206104c981610e78565b156105e4576104d78261079a565b156104e257506105e6565b6104ea611315565b60fa600160005054101515610503576105016110db565b505b60fa60016000505410151561051857506105e6565b60016000818150548092919060010191905055508173ffffffffffffffffffffffffffffffffffffffff166002600050600160005054610100811061055957005b9090016000508190555060016000505461010260005060008473ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050819055507f994a936646fe87ffe4f1e469d3d6aa417d6b855598397f323de5b449f765f0c360408373ffffffffffffffffffffffffffffffffffffffff168152602001604090036040a15b505b50565b600060406000368082843782019150506040900360402061060981610e78565b156107165761010260005060008473ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005054915060008214156106505750610718565b600160016000505403600060005054111561066b5750610718565b6000600260005083610100811061067e57005b90900160005081905550600061010260005060008573ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050819055506106c6611315565b6106ce6110db565b507f58619076adf5bb0943d100ef88d52d7c3fd691b19d3a9071b555b651fbf418da60408473ffffffffffffffffffffffffffffffffffffffff168152602001604090036040a15b505b5050565b60406000368082843782019150506040900360402061073a81610e78565b15610795576001600050548211156107525750610797565b81600060005081905550610764611315565b7facbdb084c721332ac59f9b8e392196c9eb0e4932862da8eb9beaf0dad4f550da6040838152602001604090036040a15b505b50565b6000600061010260005060008473ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050541190506107d7565b919050565b6040600036808284378201915050604090036040206107fa81610e78565b1561080b5781610106600050819055505b505b50565b60406000368082843782019150506040900360402061082e81610e78565b15610840576000610105600050819055505b505b565b60406000368082843782019150506040900360402061086281610e78565b15610880578173ffffffffffffffffffffffffffffffffffffffff16ff5b505b50565b600061089084611275565b1561095c577f92ca3a80853e6663fa31fa10b99225f18d4902939b4c53a9caae9043f6efd00460403373ffffffffffffffffffffffffffffffffffffffff1681526020018581526020018673ffffffffffffffffffffffffffffffffffffffff168152602001848490918181526020018282808284378201915050915050604090036040a18473ffffffffffffffffffffffffffffffffffffffff16846000600060008787808284378201915050600084866185025a03f161094e57005b505060006001029050610b67565b6040600036808284378201915050438152602001604090036040209050805061098481610b6f565b1580156109e457506000610108600050600083815260200190815260200160002060005060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b15610b665784610108600050600083815260200190815260200160002060005060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908302179055508361010860005060008381526020019081526020016000206000506001016000508190555082826101086000506000848152602001908152602001600020600050600201600050919082805482825590600052602060002090601f01602090048101928215610abb579182015b82811115610aba578235826000505591602001919060010190610a9c565b5b5090505b80821115610ad95760008181506000905550600101610abf565b5050600050507f1733cbb53659d713b79580f79f3f9ff215f78a7c7aa45890f3b89fc5cddfbf3260408281526020013373ffffffffffffffffffffffffffffffffffffffff1681526020018581526020018673ffffffffffffffffffffffffffffffffffffffff168152602001848490918181526020018282808284378201915050915050604090036040a15b5b949350505050565b600081610b7b81610e78565b15610e71576000610108600050600085815260200190815260200160002060005060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515610e7057610108600050600084815260200190815260200160002060005060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610108600050600085815260200190815260200160002060005060010160005054600060006000610108600050600089815260200190815260200160002060005060020160005080548015610ca257820191906000526020600020905b815481529060010190602001808311610c8e575b5050600084866185025a03f1610cb457005b50507fe7c957c06e9a662c1a6c77366179f5b702b97651dc28eee7d5bf1dff6e40bb4a60403373ffffffffffffffffffffffffffffffffffffffff1681526020018481526020016101086000506000868152602001908152602001600020600050600101600050548152602001610108600050600086815260200190815260200160002060005060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016101086000506000868152602001908152602001600020600050600201600090918254815260200182825080548015610dcf57820191906000526020600020905b815481529060010190602001808311610dbb575b5050915050604090036040a1610108600050600084815260200190815260200160002060006000820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600182016000506000905560028201600050805460008255601f0160209004906000526020600020908101905b80821115610e625760008181506000905550600101610e48565b505050506001915050610e73565b5b505b919050565b6000600060006000600061010260005060003373ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000505493506000841415610ec3576110d2565b61010360005060008781526020019081526020016000206000925092506000838350600001600050541415610f9b576000600050548383506000016000508190555060008383506001016000508190555061010460005080548091906001019090815481835581811511610f5d578183600052602060002091820191015b80821115610f5b5760008181506000905550600101610f41565b505b50505083835060020160005081905550856101046000508484506002016000505481548110610f8857005b9060005260206000209001600050819055505b8360020a9050600081848450600101600050541614156110d1577fe1c52dc63b719ade82e8bea94cc41a0d5d28e4aaf536adb5e9cccc9ff8c1aeda60403373ffffffffffffffffffffffffffffffffffffffff168152602001878152602001604090036040a16001838350600001600050541115156110a0576101046000506101036000506000888152602001908152602001600020600050600201600050548154811061104557005b906000526020600020900160005060009055610103600050600087815260200190815260200160002060006000820160005060009055600182016000506000905560028201600050600090555050600194506110d2566110d0565b82825060000160008181505480929190600190039190505550808383506001016000828282505417925050819055505b5b5b50505050919050565b60006000600190505b600160005054811015611270575b6001600050548110801561111e57506000600260005082610100811061111457005b9090016000505414155b156111305780806001019150506110f2565b5b6001600160005054118015611162575060006002600050600160005054610100811061115957005b90900160005054145b1561118157600160008181505480929190600190039190505550611131565b600160005054811080156111b257506000600260005060016000505461010081106111a857005b9090016000505414155b80156111d55750600060026000508261010081106111cc57005b90900160005054145b1561126b57600260005060016000505461010081106111f057005b90900160005054600260005082610100811061120857005b90900160005081905550806101026000506000600260005084610100811061122c57005b9090016000505481526020019081526020016000206000508190555060006002600050600160005054610100811061126057005b909001600050819055505b6110e4565b5b5090565b60006112803361079a565b1561130f57610107600050546112946114df565b11156112b9576000610105600050819055506112ae6114df565b610107600050819055505b61010560005054826101056000505401101580156112e557506101066000505482610105600050540111155b15611306578161010560008282825054019250508190555060019050611310565b60009050611310565b5b919050565b60006000610104600050549150600090505b818110156113e7576101086000506000610104600050838154811061134857005b906000526020600020900160005054815260200190815260200160002060006000820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600182016000506000905560028201600050805460008255601f0160209004906000526020600020908101905b808211156113d557600081815060009055506001016113bb565b505050505b8060010190508050611327565b6113ef6113f4565b5b5050565b60006000610104600050549150600090505b818110156114a4576000600102610104600050828154811061142457005b906000526020600020900160005054141515611496576101036000506000610104600050838154811061145357005b9060005260206000209001600050548152602001908152602001600020600060008201600050600090556001820160005060009055600282016000506000905550505b5b8060010190508050611406565b610104600050805460008255906000526020600020908101905b808211156114d857600081815060009055506001016114be565b50505b5050565b600062015180420490506114ee565b9056',\n    '0x6000357c010000000000000000000000000000000000000000000000000000000090048063173825d91461011f5780632f54bf6e146101365780634123cb6b146101515780635c52c2f5146101665780637065cb4814610177578063746c91711461018e578063797af627146101a3578063b20d30a9146101be578063b61d27f6146101d5578063b75c7dc614610207578063ba51a6df1461021e578063cbf0b0c014610235578063f00d4b5d1461024c578063f1736d8614610269576101195b6000341115610116577fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c60403373ffffffffffffffffffffffffffffffffffffffff168152602001348152602001604090036040a15b5b565b60006000f35b610130600480359060200150610cb5565b60006000f35b610147600480359060200150610e71565b8060005260206000f35b61015c600450610287565b8060005260206000f35b610171600450610ef7565b60006000f35b610188600480359060200150610b72565b60006000f35b61019960045061027e565b8060005260206000f35b6101b46004803590602001506105cc565b8060005260206000f35b6101cf600480359060200150610ebd565b60006000f35b6101fd60048035906020018035906020018035906020019060040180359060200191506102d7565b8060005260206000f35b6102186004803590602001506108e0565b60006000f35b61022f600480359060200150610ded565b60006000f35b610246600480359060200150610290565b60006000f35b6102636004803590602001803590602001506109e3565b60006000f35b610274600450610eb3565b8060005260206000f35b60006000505481565b60016000505481565b6040600036808284378201915050438152602001604090036040206102b4816110bb565b156102d2578173ffffffffffffffffffffffffffffffffffffffff16ff5b505b50565b60006102e284610f31565b156103ad577f92ca3a80853e6663fa31fa10b99225f18d4902939b4c53a9caae9043f6efd00460403373ffffffffffffffffffffffffffffffffffffffff1681526020018581526020018673ffffffffffffffffffffffffffffffffffffffff168152602001848490918181526020018282808284378201915050915050604090036040a18473ffffffffffffffffffffffffffffffffffffffff16846000600060008787808284378201915050600084866185025a03f115610002575050600060010290506105c4565b604060003680828437820191505043815260200160409003604020905080506103d5816105cc565b15801561043557506000610108600050600083815260200190815260200160002060005060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b156105c35784610108600050600083815260200190815260200160002060005060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908302179055508361010860005060008381526020019081526020016000206000506001016000508190555082826101086000506000848152602001908152602001600020600050600201600050919082805482825590600052602060002090601f0160209004810192821561050c579182015b8281111561050b5782358260005055916020019190600101906104ed565b5b5090506105379190610519565b808211156105335760008181506000905550600101610519565b5090565b50600050507f1733cbb53659d713b79580f79f3f9ff215f78a7c7aa45890f3b89fc5cddfbf3260408281526020013373ffffffffffffffffffffffffffffffffffffffff1681526020018581526020018673ffffffffffffffffffffffffffffffffffffffff168152602001848490918181526020018282808284378201915050915050604090036040a15b5b949350505050565b6000816105d8816110bb565b156108d9576000610108600050600085815260200190815260200160002060005060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156108d857610108600050600084815260200190815260200160002060005060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166101086000506000858152602001908152602001600020600050600101600050546000600060006101086000506000898152602001908152602001600020600050600201600050805480156106ff57820191906000526020600020905b8154815290600101906020018083116106eb575b5050600084866185025a03f1156100025750507fe7c957c06e9a662c1a6c77366179f5b702b97651dc28eee7d5bf1dff6e40bb4a60403373ffffffffffffffffffffffffffffffffffffffff1681526020018481526020016101086000506000868152602001908152602001600020600050600101600050548152602001610108600050600086815260200190815260200160002060005060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001610108600050600086815260200190815260200160002060005060020160009091825481526020018282508054801561082b57820191906000526020600020905b815481529060010190602001808311610817575b5050915050604090036040a1610108600050600084815260200190815260200160002060006000820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600182016000506000905560028201600050805460008255601f0160209004906000526020600020908101906108cb91906108ad565b808211156108c757600081815060009055506001016108ad565b5090565b50505060019150506108db565b5b505b919050565b600060006000600061010260005060003373ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000505493506000841415610929576109dc565b8360020a92506101036000506000868152602001908152602001600020600091509150600083838350600101600050541611156109db57818150600001600081815054809291906001019190505550828282506001016000828282505403925050819055507fc7fb647e59b18047309aa15aad418e5d7ca96d173ad704f1031a2c3d7591734b60403373ffffffffffffffffffffffffffffffffffffffff168152602001868152602001604090036040a15b5b5050505050565b6000604060003680828437820191505043815260200160409003604020610a09816110bb565b15610b6b57610a1783610e71565b15610a225750610b6d565b61010260005060008573ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000505491506000821415610a645750610b6d565b610a6c610fd1565b8273ffffffffffffffffffffffffffffffffffffffff166002600050836101008110156100025790900160005081905550600061010260005060008673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050819055508161010260005060008573ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050819055507fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c60408573ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff168152602001604090036040a15b505b505050565b604060003680828437820191505043815260200160409003604020610b96816110bb565b15610cb057610ba482610e71565b15610baf5750610cb2565b610bb7610fd1565b60fa600160005054101515610bd057610bce611328565b505b60fa600160005054101515610be55750610cb2565b60016000818150548092919060010191905055508173ffffffffffffffffffffffffffffffffffffffff166002600050600160005054610100811015610002579090016000508190555060016000505461010260005060008473ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050819055507f994a936646fe87ffe4f1e469d3d6aa417d6b855598397f323de5b449f765f0c360408373ffffffffffffffffffffffffffffffffffffffff168152602001604090036040a15b505b50565b6000604060003680828437820191505043815260200160409003604020610cdb816110bb565b15610de75761010260005060008473ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000505491506000821415610d225750610de9565b6001600160005054036000600050541115610d3d5750610de9565b60006002600050836101008110156100025790900160005081905550600061010260005060008573ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005081905550610d97610fd1565b610d9f611328565b507f58619076adf5bb0943d100ef88d52d7c3fd691b19d3a9071b555b651fbf418da60408473ffffffffffffffffffffffffffffffffffffffff168152602001604090036040a15b505b5050565b604060003680828437820191505043815260200160409003604020610e11816110bb565b15610e6c57600160005054821115610e295750610e6e565b81600060005081905550610e3b610fd1565b7facbdb084c721332ac59f9b8e392196c9eb0e4932862da8eb9beaf0dad4f550da6040838152602001604090036040a15b505b50565b6000600061010260005060008473ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005054119050610eae565b919050565b6101066000505481565b604060003680828437820191505043815260200160409003604020610ee1816110bb565b15610ef25781610106600050819055505b505b50565b604060003680828437820191505043815260200160409003604020610f1b816110bb565b15610f2d576000610105600050819055505b505b565b6000610f3c33610e71565b15610fcb5761010760005054610f506114ba565b1115610f7557600061010560005081905550610f6a6114ba565b610107600050819055505b6101056000505482610105600050540110158015610fa157506101066000505482610105600050540111155b15610fc2578161010560008282825054019250508190555060019050610fcc565b60009050610fcc565b5b919050565b60006000610104600050549150600090505b818110156110ae57610108600050600061010460005083815481101561000257906000526020600020900160005054815260200190815260200160002060006000820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600182016000506000905560028201600050805460008255601f01602090049060005260206000209081019061109d919061107f565b80821115611099576000818150600090555060010161107f565b5090565b5050505b8060010190508050610fe3565b6110b66114cc565b5b5050565b6000600060006000600061010260005060003373ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005054935060008414156111065761131f565b610103600050600087815260200190815260200160002060009250925060008383506000016000505414156111e95760006000505483835060000160005081905550600083835060010160005081905550610104600050805480919060010190908154818355818115116111ac578183600052602060002091820191016111ab919061118d565b808211156111a7576000818150600090555060010161118d565b5090565b5b5050508383506002016000508190555085610104600050848450600201600050548154811015610002579060005260206000209001600050819055505b8360020a90506000818484506001016000505416141561131e577fe1c52dc63b719ade82e8bea94cc41a0d5d28e4aaf536adb5e9cccc9ff8c1aeda60403373ffffffffffffffffffffffffffffffffffffffff168152602001878152602001604090036040a16001838350600001600050541115156112ed576101046000506101036000506000888152602001908152602001600020600050600201600050548154811015610002579060005260206000209001600050600090556101036000506000878152602001908152602001600020600060008201600050600090556001820160005060009055600282016000506000905550506001945061131f5661131d565b82825060000160008181505480929190600190039190505550808383506001016000828282505417925050819055505b5b5b50505050919050565b60006000600190505b6001600050548110156114b5575b6001600050548110801561136a57506000600260005082610100811015610002579090016000505414155b1561137c57808060010191505061133f565b5b60016001600050541180156113ad5750600060026000506001600050546101008110156100025790900160005054145b156113cc5760016000818150548092919060019003919050555061137d565b600160005054811080156113fc575060006002600050600160005054610100811015610002579090016000505414155b801561141e575060006002600050826101008110156100025790900160005054145b156114b05760026000506001600050546101008110156100025790900160005054600260005082610100811015610002579090016000508190555080610102600050600060026000508461010081101561000257909001600050548152602001908152602001600020600050819055506000600260005060016000505461010081101561000257909001600050819055505b611331565b5b5090565b600062015180420490506114c9565b90565b60006000610104600050549150600090505b8181101561157a5760006001026101046000508281548110156100025790600052602060002090016000505414151561156c576101036000506000610104600050838154811015610002579060005260206000209001600050548152602001908152602001600020600060008201600050600090556001820160005060009055600282016000506000905550505b5b80600101905080506114de565b610104600050805460008255906000526020600020908101906115bb919061159d565b808211156115b7576000818150600090555060010161159d565b5090565b505b505056',\n    '0x6000357c010000000000000000000000000000000000000000000000000000000090048063173825d91461011f5780632f54bf6e146101365780634123cb6b146101515780635c52c2f5146101665780637065cb4814610177578063746c91711461018e578063797af627146101a3578063b20d30a9146101be578063b61d27f6146101d5578063b75c7dc614610207578063ba51a6df1461021e578063cbf0b0c014610235578063f00d4b5d1461024c578063f1736d8614610269576101195b6000341115610116577fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c60403373ffffffffffffffffffffffffffffffffffffffff168152602001348152602001604090036040a15b5b565b60006000f35b610130600480359060200150610665565b60006000f35b610147600480359060200150610821565b8060005260206000f35b61015c600450610287565b8060005260206000f35b6101716004506108a7565b60006000f35b610188600480359060200150610522565b60006000f35b61019960045061027e565b8060005260206000f35b6101b4600480359060200150610c1d565b8060005260206000f35b6101cf60048035906020015061086d565b60006000f35b6101fd6004803590602001803590602001803590602001906004018035906020019150610928565b8060005260206000f35b610218600480359060200150610290565b60006000f35b61022f60048035906020015061079d565b60006000f35b6102466004803590602001506108e1565b60006000f35b610263600480359060200180359060200150610393565b60006000f35b610274600450610863565b8060005260206000f35b60006000505481565b60016000505481565b600060006000600061010260005060003373ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005054935060008414156102d95761038c565b8360020a925061010360005060008681526020019081526020016000206000915091506000838383506001016000505416111561038b57818150600001600081815054809291906001019190505550828282506001016000828282505403925050819055507fc7fb647e59b18047309aa15aad418e5d7ca96d173ad704f1031a2c3d7591734b60403373ffffffffffffffffffffffffffffffffffffffff168152602001868152602001604090036040a15b5b5050505050565b60006040600036808284378201915050438152602001604090036040206103b981610f31565b1561051b576103c783610821565b156103d2575061051d565b61010260005060008573ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000505491506000821415610414575061051d565b61041c6113d0565b8273ffffffffffffffffffffffffffffffffffffffff166002600050836101008110156100025790900160005081905550600061010260005060008673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050819055508161010260005060008573ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050819055507fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c60408573ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff168152602001604090036040a15b505b505050565b60406000368082843782019150504381526020016040900360402061054681610f31565b156106605761055482610821565b1561055f5750610662565b6105676113d0565b60fa6001600050541015156105805761057e61119e565b505b60fa6001600050541015156105955750610662565b60016000818150548092919060010191905055508173ffffffffffffffffffffffffffffffffffffffff166002600050600160005054610100811015610002579090016000508190555060016000505461010260005060008473ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050819055507f994a936646fe87ffe4f1e469d3d6aa417d6b855598397f323de5b449f765f0c360408373ffffffffffffffffffffffffffffffffffffffff168152602001604090036040a15b505b50565b600060406000368082843782019150504381526020016040900360402061068b81610f31565b156107975761010260005060008473ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005054915060008214156106d25750610799565b60016001600050540360006000505411156106ed5750610799565b60006002600050836101008110156100025790900160005081905550600061010260005060008573ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050819055506107476113d0565b61074f61119e565b507f58619076adf5bb0943d100ef88d52d7c3fd691b19d3a9071b555b651fbf418da60408473ffffffffffffffffffffffffffffffffffffffff168152602001604090036040a15b505b5050565b6040600036808284378201915050438152602001604090036040206107c181610f31565b1561081c576001600050548211156107d9575061081e565b816000600050819055506107eb6113d0565b7facbdb084c721332ac59f9b8e392196c9eb0e4932862da8eb9beaf0dad4f550da6040838152602001604090036040a15b505b50565b6000600061010260005060008473ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000505411905061085e565b919050565b6101066000505481565b60406000368082843782019150504381526020016040900360402061089181610f31565b156108a25781610106600050819055505b505b50565b6040600036808284378201915050438152602001604090036040206108cb81610f31565b156108dd576000610105600050819055505b505b565b60406000368082843782019150504381526020016040900360402061090581610f31565b15610923578173ffffffffffffffffffffffffffffffffffffffff16ff5b505b50565b600061093384611330565b156109fe577f92ca3a80853e6663fa31fa10b99225f18d4902939b4c53a9caae9043f6efd00460403373ffffffffffffffffffffffffffffffffffffffff1681526020018581526020018673ffffffffffffffffffffffffffffffffffffffff168152602001848490918181526020018282808284378201915050915050604090036040a18473ffffffffffffffffffffffffffffffffffffffff16846000600060008787808284378201915050600084866185025a03f11561000257505060006001029050610c15565b60406000368082843782019150504381526020016040900360402090508050610a2681610c1d565b158015610a8657506000610108600050600083815260200190815260200160002060005060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b15610c145784610108600050600083815260200190815260200160002060005060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908302179055508361010860005060008381526020019081526020016000206000506001016000508190555082826101086000506000848152602001908152602001600020600050600201600050919082805482825590600052602060002090601f01602090048101928215610b5d579182015b82811115610b5c578235826000505591602001919060010190610b3e565b5b509050610b889190610b6a565b80821115610b845760008181506000905550600101610b6a565b5090565b50600050507f1733cbb53659d713b79580f79f3f9ff215f78a7c7aa45890f3b89fc5cddfbf3260408281526020013373ffffffffffffffffffffffffffffffffffffffff1681526020018581526020018673ffffffffffffffffffffffffffffffffffffffff168152602001848490918181526020018282808284378201915050915050604090036040a15b5b949350505050565b600081610c2981610f31565b15610f2a576000610108600050600085815260200190815260200160002060005060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515610f2957610108600050600084815260200190815260200160002060005060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610108600050600085815260200190815260200160002060005060010160005054600060006000610108600050600089815260200190815260200160002060005060020160005080548015610d5057820191906000526020600020905b815481529060010190602001808311610d3c575b5050600084866185025a03f1156100025750507fe7c957c06e9a662c1a6c77366179f5b702b97651dc28eee7d5bf1dff6e40bb4a60403373ffffffffffffffffffffffffffffffffffffffff1681526020018481526020016101086000506000868152602001908152602001600020600050600101600050548152602001610108600050600086815260200190815260200160002060005060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016101086000506000868152602001908152602001600020600050600201600090918254815260200182825080548015610e7c57820191906000526020600020905b815481529060010190602001808311610e68575b5050915050604090036040a1610108600050600084815260200190815260200160002060006000820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600182016000506000905560028201600050805460008255601f016020900490600052602060002090810190610f1c9190610efe565b80821115610f185760008181506000905550600101610efe565b5090565b5050506001915050610f2c565b5b505b919050565b6000600060006000600061010260005060003373ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000505493506000841415610f7c57611195565b6101036000506000878152602001908152602001600020600092509250600083835060000160005054141561105f576000600050548383506000016000508190555060008383506001016000508190555061010460005080548091906001019090815481835581811511611022578183600052602060002091820191016110219190611003565b8082111561101d5760008181506000905550600101611003565b5090565b5b5050508383506002016000508190555085610104600050848450600201600050548154811015610002579060005260206000209001600050819055505b8360020a905060008184845060010160005054161415611194577fe1c52dc63b719ade82e8bea94cc41a0d5d28e4aaf536adb5e9cccc9ff8c1aeda60403373ffffffffffffffffffffffffffffffffffffffff168152602001878152602001604090036040a1600183835060000160005054111515611163576101046000506101036000506000888152602001908152602001600020600050600201600050548154811015610002579060005260206000209001600050600090556101036000506000878152602001908152602001600020600060008201600050600090556001820160005060009055600282016000506000905550506001945061119556611193565b82825060000160008181505480929190600190039190505550808383506001016000828282505417925050819055505b5b5b50505050919050565b60006000600190505b60016000505481101561132b575b600160005054811080156111e057506000600260005082610100811015610002579090016000505414155b156111f25780806001019150506111b5565b5b60016001600050541180156112235750600060026000506001600050546101008110156100025790900160005054145b15611242576001600081815054809291906001900391905055506111f3565b60016000505481108015611272575060006002600050600160005054610100811015610002579090016000505414155b8015611294575060006002600050826101008110156100025790900160005054145b156113265760026000506001600050546101008110156100025790900160005054600260005082610100811015610002579090016000508190555080610102600050600060026000508461010081101561000257909001600050548152602001908152602001600020600050819055506000600260005060016000505461010081101561000257909001600050819055505b6111a7565b5b5090565b600061133b33610821565b156113ca576101076000505461134f6115af565b1115611374576000610105600050819055506113696115af565b610107600050819055505b61010560005054826101056000505401101580156113a057506101066000505482610105600050540111155b156113c15781610105600082828250540192505081905550600190506113cb565b600090506113cb565b5b919050565b60006000610104600050549150600090505b818110156114ad57610108600050600061010460005083815481101561000257906000526020600020900160005054815260200190815260200160002060006000820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600182016000506000905560028201600050805460008255601f01602090049060005260206000209081019061149c919061147e565b80821115611498576000818150600090555060010161147e565b5090565b5050505b80600101905080506113e2565b6114b56114ba565b5b5050565b60006000610104600050549150600090505b818110156115685760006001026101046000508281548110156100025790600052602060002090016000505414151561155a576101036000506000610104600050838154811015610002579060005260206000209001600050548152602001908152602001600020600060008201600050600090556001820160005060009055600282016000506000905550505b5b80600101905080506114cc565b610104600050805460008255906000526020600020908101906115a9919061158b565b808211156115a5576000818150600090555060010161158b565b5090565b505b5050565b600062015180420490506115be565b9056',\n    '0x6000357c010000000000000000000000000000000000000000000000000000000090048063173825d91461012a5780632f54bf6e146101415780634123cb6b1461015c5780635c52c2f5146101715780637065cb4814610182578063746c917114610199578063797af627146101ae578063b20d30a9146101c9578063b61d27f6146101e0578063b75c7dc614610212578063ba51a6df14610229578063c2cf732614610240578063cbf0b0c014610261578063f00d4b5d14610278578063f1736d8614610295576101245b6000341115610121577fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c60403373ffffffffffffffffffffffffffffffffffffffff168152602001348152602001604090036040a15b5b565b60006000f35b61013b60048035906020015061058e565b60006000f35b61015260048035906020015061074a565b8060005260206000f35b6101676004506102b3565b8060005260206000f35b61017c600450610877565b60006000f35b61019360048035906020015061044b565b60006000f35b6101a46004506102aa565b8060005260206000f35b6101bf600480359060200150610bed565b8060005260206000f35b6101da60048035906020015061083d565b60006000f35b61020860048035906020018035906020018035906020019060040180359060200191506108f8565b8060005260206000f35b610223600480359060200150610f01565b60006000f35b61023a6004803590602001506106c6565b60006000f35b61025760048035906020018035906020015061078c565b8060005260206000f35b6102726004803590602001506108b1565b60006000f35b61028f6004803590602001803590602001506102bc565b60006000f35b6102a0600450610833565b8060005260206000f35b60006000505481565b60016000505481565b60006040600036808284378201915050438152602001604090036040206102e281611320565b15610444576102f08361074a565b156102fb5750610446565b61010260005060008573ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050549150600082141561033d5750610446565b610345611236565b8273ffffffffffffffffffffffffffffffffffffffff166002600050836101008110156100025790900160005081905550600061010260005060008673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050819055508161010260005060008573ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050819055507fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c60408573ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff168152602001604090036040a15b505b505050565b60406000368082843782019150504381526020016040900360402061046f81611320565b156105895761047d8261074a565b15610488575061058b565b610490611236565b60fa6001600050541015156104a9576104a7611004565b505b60fa6001600050541015156104be575061058b565b60016000818150548092919060010191905055508173ffffffffffffffffffffffffffffffffffffffff166002600050600160005054610100811015610002579090016000508190555060016000505461010260005060008473ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050819055507f994a936646fe87ffe4f1e469d3d6aa417d6b855598397f323de5b449f765f0c360408373ffffffffffffffffffffffffffffffffffffffff168152602001604090036040a15b505b50565b60006040600036808284378201915050438152602001604090036040206105b481611320565b156106c05761010260005060008473ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005054915060008214156105fb57506106c2565b600160016000505403600060005054111561061657506106c2565b60006002600050836101008110156100025790900160005081905550600061010260005060008573ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005081905550610670611236565b610678611004565b507f58619076adf5bb0943d100ef88d52d7c3fd691b19d3a9071b555b651fbf418da60408473ffffffffffffffffffffffffffffffffffffffff168152602001604090036040a15b505b5050565b6040600036808284378201915050438152602001604090036040206106ea81611320565b15610745576001600050548211156107025750610747565b81600060005081905550610714611236565b7facbdb084c721332ac59f9b8e392196c9eb0e4932862da8eb9beaf0dad4f550da6040838152602001604090036040a15b505b50565b6000600061010260005060008473ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005054119050610787565b919050565b60006000600060006000610103600050600088815260200190815260200160002060009350935061010260005060008773ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005054915060008214156107f85760009450610829565b8160020a90506000818585506001016000505416141561081f576000945061082956610828565b60019450610829565b5b5050505092915050565b6101066000505481565b60406000368082843782019150504381526020016040900360402061086181611320565b156108725781610106600050819055505b505b50565b60406000368082843782019150504381526020016040900360402061089b81611320565b156108ad576000610105600050819055505b505b565b6040600036808284378201915050438152602001604090036040206108d581611320565b156108f3578173ffffffffffffffffffffffffffffffffffffffff16ff5b505b50565b600061090384611196565b156109ce577f92ca3a80853e6663fa31fa10b99225f18d4902939b4c53a9caae9043f6efd00460403373ffffffffffffffffffffffffffffffffffffffff1681526020018581526020018673ffffffffffffffffffffffffffffffffffffffff168152602001848490918181526020018282808284378201915050915050604090036040a18473ffffffffffffffffffffffffffffffffffffffff16846000600060008787808284378201915050600084866185025a03f11561000257505060006001029050610be5565b604060003680828437820191505043815260200160409003604020905080506109f681610bed565b158015610a5657506000610108600050600083815260200190815260200160002060005060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b15610be45784610108600050600083815260200190815260200160002060005060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908302179055508361010860005060008381526020019081526020016000206000506001016000508190555082826101086000506000848152602001908152602001600020600050600201600050919082805482825590600052602060002090601f01602090048101928215610b2d579182015b82811115610b2c578235826000505591602001919060010190610b0e565b5b509050610b589190610b3a565b80821115610b545760008181506000905550600101610b3a565b5090565b50600050507f1733cbb53659d713b79580f79f3f9ff215f78a7c7aa45890f3b89fc5cddfbf3260408281526020013373ffffffffffffffffffffffffffffffffffffffff1681526020018581526020018673ffffffffffffffffffffffffffffffffffffffff168152602001848490918181526020018282808284378201915050915050604090036040a15b5b949350505050565b600081610bf981611320565b15610efa576000610108600050600085815260200190815260200160002060005060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515610ef957610108600050600084815260200190815260200160002060005060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610108600050600085815260200190815260200160002060005060010160005054600060006000610108600050600089815260200190815260200160002060005060020160005080548015610d2057820191906000526020600020905b815481529060010190602001808311610d0c575b5050600084866185025a03f1156100025750507fe7c957c06e9a662c1a6c77366179f5b702b97651dc28eee7d5bf1dff6e40bb4a60403373ffffffffffffffffffffffffffffffffffffffff1681526020018481526020016101086000506000868152602001908152602001600020600050600101600050548152602001610108600050600086815260200190815260200160002060005060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016101086000506000868152602001908152602001600020600050600201600090918254815260200182825080548015610e4c57820191906000526020600020905b815481529060010190602001808311610e38575b5050915050604090036040a1610108600050600084815260200190815260200160002060006000820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600182016000506000905560028201600050805460008255601f016020900490600052602060002090810190610eec9190610ece565b80821115610ee85760008181506000905550600101610ece565b5090565b5050506001915050610efc565b5b505b919050565b600060006000600061010260005060003373ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000505493506000841415610f4a57610ffd565b8360020a9250610103600050600086815260200190815260200160002060009150915060008383835060010160005054161115610ffc57818150600001600081815054809291906001019190505550828282506001016000828282505403925050819055507fc7fb647e59b18047309aa15aad418e5d7ca96d173ad704f1031a2c3d7591734b60403373ffffffffffffffffffffffffffffffffffffffff168152602001868152602001604090036040a15b5b5050505050565b60006000600190505b600160005054811015611191575b6001600050548110801561104657506000600260005082610100811015610002579090016000505414155b1561105857808060010191505061101b565b5b60016001600050541180156110895750600060026000506001600050546101008110156100025790900160005054145b156110a857600160008181505480929190600190039190505550611059565b600160005054811080156110d8575060006002600050600160005054610100811015610002579090016000505414155b80156110fa575060006002600050826101008110156100025790900160005054145b1561118c5760026000506001600050546101008110156100025790900160005054600260005082610100811015610002579090016000508190555080610102600050600060026000508461010081101561000257909001600050548152602001908152602001600020600050819055506000600260005060016000505461010081101561000257909001600050819055505b61100d565b5b5090565b60006111a13361074a565b1561123057610107600050546111b5611682565b11156111da576000610105600050819055506111cf611682565b610107600050819055505b610105600050548261010560005054011015801561120657506101066000505482610105600050540111155b15611227578161010560008282825054019250508190555060019050611231565b60009050611231565b5b919050565b60006000610104600050549150600090505b8181101561131357610108600050600061010460005083815481101561000257906000526020600020900160005054815260200190815260200160002060006000820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600182016000506000905560028201600050805460008255601f01602090049060005260206000209081019061130291906112e4565b808211156112fe57600081815060009055506001016112e4565b5090565b5050505b8060010190508050611248565b61131b61158d565b5b5050565b6000600060006000600061010260005060003373ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050549350600084141561136b57611584565b6101036000506000878152602001908152602001600020600092509250600083835060000160005054141561144e5760006000505483835060000160005081905550600083835060010160005081905550610104600050805480919060010190908154818355818115116114115781836000526020600020918201910161141091906113f2565b8082111561140c57600081815060009055506001016113f2565b5090565b5b5050508383506002016000508190555085610104600050848450600201600050548154811015610002579060005260206000209001600050819055505b8360020a905060008184845060010160005054161415611583577fe1c52dc63b719ade82e8bea94cc41a0d5d28e4aaf536adb5e9cccc9ff8c1aeda60403373ffffffffffffffffffffffffffffffffffffffff168152602001878152602001604090036040a1600183835060000160005054111515611552576101046000506101036000506000888152602001908152602001600020600050600201600050548154811015610002579060005260206000209001600050600090556101036000506000878152602001908152602001600020600060008201600050600090556001820160005060009055600282016000506000905550506001945061158456611582565b82825060000160008181505480929190600190039190505550808383506001016000828282505417925050819055505b5b5b50505050919050565b60006000610104600050549150600090505b8181101561163b5760006001026101046000508281548110156100025790600052602060002090016000505414151561162d576101036000506000610104600050838154811015610002579060005260206000209001600050548152602001908152602001600020600060008201600050600090556001820160005060009055600282016000506000905550505b5b806001019050805061159f565b6101046000508054600082559060005260206000209081019061167c919061165e565b80821115611678576000818150600090555060010161165e565b5090565b505b5050565b60006201518042049050611691565b9056',\n    '0x606060405236156100d7576000357c010000000000000000000000000000000000000000000000000000000090048063173825d91461013f5780632f54bf6e146101525780634123cb6b146101795780635c52c2f51461019a5780637065cb48146101a7578063746c9171146101ba578063797af627146101db578063b20d30a914610202578063b61d27f614610215578063b75c7dc614610253578063ba51a6df14610266578063c2cf732614610279578063cbf0b0c0146102a6578063f00d4b5d146102b9578063f1736d86146102d2576100d7565b61013d5b600034111561013a577fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c3334604051808373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a15b5b565b005b6101506004803590602001506106ed565b005b6101636004803590602001506108cd565b6040518082815260200191505060405180910390f35b6101846004506109b9565b6040518082815260200191505060405180910390f35b6101a5600450610a07565b005b6101b8600480359060200150610598565b005b6101c56004506109b0565b6040518082815260200191505060405180910390f35b6101ec600480359060200150610de9565b6040518082815260200191505060405180910390f35b6102136004803590602001506109c2565b005b61023d6004803590602001803590602001803590602001906004018035906020019150610aa8565b6040518082815260200191505060405180910390f35b6102646004803590602001506102f3565b005b610277600480359060200150610837565b005b61029060048035906020018035906020015061090f565b6040518082815260200191505060405180910390f35b6102b7600480359060200150610a56565b005b6102d06004803590602001803590602001506103f5565b005b6102dd600450610a4c565b6040518082815260200191505060405180910390f35b60006000600061010260005060003373ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050549250600083141561033a576103ef565b8260020a91506101036000506000858152602001908152602001600020600050905060008282600101600050541611156103ee578060000160008181505480929190600101919050555081816001016000828282505403925050819055507fc7fb647e59b18047309aa15aad418e5d7ca96d173ad704f1031a2c3d7591734b3385604051808373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a15b5b50505050565b600060003643604051808484808284378201915050828152602001935050505060405180910390206104268161112b565b1561059157610434836108cd565b1561043f5750610593565b61010260005060008573ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005054915060008214156104815750610593565b6104896115bd565b8273ffffffffffffffffffffffffffffffffffffffff166002600050836101008110156100025790900160005081905550600061010260005060008673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050819055508161010260005060008573ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050819055507fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c8484604051808373ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a15b505b505050565b60003643604051808484808284378201915050828152602001935050505060405180910390206105c78161112b565b156106e8576105d5826108cd565b156105e057506106ea565b6105e86115bd565b60fa600160005054101515610601576105ff61138b565b505b60fa60016000505410151561061657506106ea565b60016000818150548092919060010191905055508173ffffffffffffffffffffffffffffffffffffffff166002600050600160005054610100811015610002579090016000508190555060016000505461010260005060008473ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050819055507f994a936646fe87ffe4f1e469d3d6aa417d6b855598397f323de5b449f765f0c382604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a15b505b50565b6000600036436040518084848082843782019150508281526020019350505050604051809103902061071e8161112b565b156108315761010260005060008473ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005054915060008214156107655750610833565b60016001600050540360006000505411156107805750610833565b60006002600050836101008110156100025790900160005081905550600061010260005060008573ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050819055506107da6115bd565b6107e261138b565b507f58619076adf5bb0943d100ef88d52d7c3fd691b19d3a9071b555b651fbf418da83604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a15b505b5050565b60003643604051808484808284378201915050828152602001935050505060405180910390206108668161112b565b156108c85760016000505482111561087e57506108ca565b816000600050819055506108906115bd565b7facbdb084c721332ac59f9b8e392196c9eb0e4932862da8eb9beaf0dad4f550da826040518082815260200191505060405180910390a15b505b50565b6000600061010260005060008473ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000505411905061090a565b919050565b60006000600060006101036000506000878152602001908152602001600020600050925061010260005060008673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050549150600082141561097857600093506109a7565b8160020a9050600081846001016000505416141561099d57600093506109a7566109a6565b600193506109a7565b5b50505092915050565b60006000505481565b60016000505481565b60003643604051808484808284378201915050828152602001935050505060405180910390206109f18161112b565b15610a025781610105600050819055505b505b50565b6000364360405180848480828437820191505082815260200193505050506040518091039020610a368161112b565b15610a48576000610106600050819055505b505b565b6101056000505481565b6000364360405180848480828437820191505082815260200193505050506040518091039020610a858161112b565b15610aa3578173ffffffffffffffffffffffffffffffffffffffff16ff5b505b50565b6000610ab3336108cd565b15610de057610ac18461151d565b15610baa577f92ca3a80853e6663fa31fa10b99225f18d4902939b4c53a9caae9043f6efd0043385878686604051808673ffffffffffffffffffffffffffffffffffffffff1681526020018581526020018473ffffffffffffffffffffffffffffffffffffffff1681526020018060200182810382528484828181526020019250808284378201915050965050505050505060405180910390a18473ffffffffffffffffffffffffffffffffffffffff168484846040518083838082843782019150509250505060006040518083038185876185025a03f1925050505060006001029050610de1565b600036436040518084848082843782019150508281526020019350505050604051809103902090508050610bdd81610de9565b158015610c3d57506000610108600050600083815260200190815260200160002060005060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b15610ddf5784610108600050600083815260200190815260200160002060005060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908302179055508361010860005060008381526020019081526020016000206000506001016000508190555082826101086000506000848152602001908152602001600020600050600201600050919082805482825590600052602060002090601f01602090048101928215610d14579182015b82811115610d13578235826000505591602001919060010190610cf5565b5b509050610d3f9190610d21565b80821115610d3b5760008181506000905550600101610d21565b5090565b50507f1733cbb53659d713b79580f79f3f9ff215f78a7c7aa45890f3b89fc5cddfbf32813386888787604051808781526020018673ffffffffffffffffffffffffffffffffffffffff1681526020018581526020018473ffffffffffffffffffffffffffffffffffffffff168152602001806020018281038252848482818152602001925080828437820191505097505050505050505060405180910390a15b5b5b949350505050565b600081610df58161112b565b15611124576000610108600050600085815260200190815260200160002060005060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561112357610108600050600084815260200190815260200160002060005060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166101086000506000858152602001908152602001600020600050600101600050546101086000506000868152602001908152602001600020600050600201600050604051808280548015610f2457820191906000526020600020905b815481529060010190602001808311610f0757829003601f168201915b505091505060006040518083038185876185025a03f192505050507fe7c957c06e9a662c1a6c77366179f5b702b97651dc28eee7d5bf1dff6e40bb4a3384610108600050600087815260200190815260200160002060005060010160005054610108600050600088815260200190815260200160002060005060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166101086000506000898152602001908152602001600020600050600201600050604051808673ffffffffffffffffffffffffffffffffffffffff1681526020018581526020018481526020018373ffffffffffffffffffffffffffffffffffffffff16815260200180602001828103825283818154815260200191508054801561107057820191906000526020600020905b81548152906001019060200180831161105357829003601f168201915b5050965050505050505060405180910390a1610108600050600084815260200190815260200160002060006000820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600182016000506000905560028201600050805460008255601f01602090049060005260206000209081019061111691906110f8565b8082111561111257600081815060009055506001016110f8565b5090565b5050506001915050611126565b5b505b919050565b600060006000600061010260005060003373ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050549250600083141561117457611383565b6101036000506000868152602001908152602001600020600050915060008260000160005054141561124c57600060005054826000016000508190555060008260010160005081905550610104600050805480919060010190908154818355818115116112135781836000526020600020918201910161121291906111f4565b8082111561120e57600081815060009055506001016111f4565b5090565b5b50505082600201600050819055508461010460005083600201600050548154811015610002579060005260206000209001600050819055505b8260020a90506000818360010160005054161415611382577fe1c52dc63b719ade82e8bea94cc41a0d5d28e4aaf536adb5e9cccc9ff8c1aeda3386604051808373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a160018260000160005054111515611355576101046000506101036000506000878152602001908152602001600020600050600201600050548154811015610002579060005260206000209001600050600090556101036000506000868152602001908152602001600020600060008201600050600090556001820160005060009055600282016000506000905550506001935061138356611381565b816000016000818150548092919060019003919050555080826001016000828282505417925050819055505b5b5b505050919050565b60006000600190505b600160005054811015611518575b600160005054811080156113cd57506000600260005082610100811015610002579090016000505414155b156113df5780806001019150506113a2565b5b60016001600050541180156114105750600060026000506001600050546101008110156100025790900160005054145b1561142f576001600081815054809291906001900391905055506113e0565b6001600050548110801561145f575060006002600050600160005054610100811015610002579090016000505414155b8015611481575060006002600050826101008110156100025790900160005054145b156115135760026000506001600050546101008110156100025790900160005054600260005082610100811015610002579090016000508190555080610102600050600060026000508461010081101561000257909001600050548152602001908152602001600020600050819055506000600260005060016000505461010081101561000257909001600050819055505b611394565b5b5090565b6000611528336108cd565b156115b7576101076000505461153c61179c565b11156115615760006101066000508190555061155661179c565b610107600050819055505b610106600050548261010660005054011015801561158d57506101056000505482610106600050540111155b156115ae5781610106600082828250540192505081905550600190506115b8565b600090506115b8565b5b919050565b60006000610104600050549150600090505b8181101561169a57610108600050600061010460005083815481101561000257906000526020600020900160005054815260200190815260200160002060006000820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600182016000506000905560028201600050805460008255601f016020900490600052602060002090810190611689919061166b565b80821115611685576000818150600090555060010161166b565b5090565b5050505b80600101905080506115cf565b6116a26116a7565b5b5050565b60006000610104600050549150600090505b8181101561175557600060010261010460005082815481101561000257906000526020600020900160005054141515611747576101036000506000610104600050838154811015610002579060005260206000209001600050548152602001908152602001600020600060008201600050600090556001820160005060009055600282016000506000905550505b5b80600101905080506116b9565b610104600050805460008255906000526020600020908101906117969190611778565b808211156117925760008181506000905550600101611778565b5090565b505b5050565b600062015180420490506117ab565b9056',\n    '0x606060405236156100b95760e060020a6000350463173825d9811461010b5780632f54bf6e146101665780634123cb6b1461018e5780635c52c2f5146101975780637065cb48146101c8578063746c9171146101fc578063797af62714610205578063b20d30a914610218578063b61d27f61461024c578063b75c7dc61461026d578063ba51a6df1461029c578063c2cf7326146102d0578063cbf0b0c01461030e578063f00d4b5d14610342578063f1736d861461037b575b61038560003411156101095760408051600160a060020a033216815234602082015281517fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c929181900390910190a15b565b6103856004356000600036436040518084848082843750505090910190815260405190819003602001902090506105e9815b600160a060020a03321660009081526101026020526040812054818082811415610c0357610d5b565b6103876004355b600160a060020a03811660009081526101026020526040812054115b919050565b61038760015481565b610385600036436040518084848082843750505090910190815260405190819003602001902090506103aa8161013d565b610385600435600036436040518084848082843750505090910190815260405190819003602001902090506103c98161013d565b61038760005481565b6103876004355b6000816109738161013d565b610385600435600036436040518084848082843750505090910190815260405190819003602001902090506103998161013d565b61038760048035906024803591604435918201910135600061072f3261016d565b610385600435600160a060020a03321660009081526101026020526040812054908082811415610564576105e3565b610385600435600036436040518084848082843750505090910190815260405190819003602001902090506106a98161013d565b610387600435602435600082815261010360209081526040808320600160a060020a0385168452610102909252822054828181141561070257610726565b610385600435600036436040518084848082843750505090910190815260405190819003602001902090506103b88161013d565b610385600435602435600060003643604051808484808284375050509091019081526040519081900360200190209050610b358161013d565b6103876101055481565b005b60408051918252519081900360200190f35b156103a5576101058290555b505b50565b156103a75760006101065550565b156103a55781600160a060020a0316ff5b156103a5576103d78261016d565b156103e257506103a7565b6104605b6101045460005b81811015610ea857610104805461010891600091849081101561000257600080516020610f6383398151915201548252506020918252604081208054600160a060020a0319168155600181018290556002810180548382559083528383209193610f2d92601f929092010481019061095b565b60015460fa90106104755761047361048a565b505b60015460fa90106104c757506103a7565b6106175b600060015b60015481101561096f575b600154811080156104ba5750600281610100811015610002570154600014155b15610d635760010161049a565b60018054810190819055600160a060020a038316906002906101008110156100025790900160005081905550600160005054610102600050600084600160a060020a03168152602001908152602001600020600050819055507f994a936646fe87ffe4f1e469d3d6aa417d6b855598397f323de5b449f765f0c3826040518082600160a060020a0316815260200191505060405180910390a15050565b50506000828152610103602052604081206001810154600284900a9290831611156105e35780546001828101805492909101835590839003905560408051600160a060020a03321681526020810186905281517fc7fb647e59b18047309aa15aad418e5d7ca96d173ad704f1031a2c3d7591734b929181900390910190a15b50505050565b1561065557600160a060020a03831660009081526101026020526040812054925082141561065a57506103a5565b5060408051600160a060020a038516815290517f58619076adf5bb0943d100ef88d52d7c3fd691b19d3a9071b555b651fbf418da9181900360200190a15b505050565b600160016000505403600060005054111561067557506103a5565b600060028361010081101561000257508301819055600160a060020a038416815261010260205260408120556104866103e6565b156103a5576001548211156106be57506103a7565b60008290556106cb6103e6565b6040805183815290517facbdb084c721332ac59f9b8e392196c9eb0e4932862da8eb9beaf0dad4f550da9181900360200190a15050565b506001820154600282900a908116600014156107215760009350610726565b600193505b50505092915050565b1561094b57610743846000610e3d3261016d565b156107ff577f92ca3a80853e6663fa31fa10b99225f18d4902939b4c53a9caae9043f6efd00432858786866040518086600160a060020a0316815260200185815260200184600160a060020a031681526020018060200182810382528484828181526020019250808284378201915050965050505050505060405180910390a184600160a060020a03168484846040518083838082843750505090810191506000908083038185876185025a03f1506000935061094b92505050565b6000364360405180848480828437505050909101908152604051908190036020019020915061082f90508161020c565b158015610852575060008181526101086020526040812054600160a060020a0316145b1561094b5760008181526101086020908152604082208054600160a060020a03191688178155600181018790556002018054858255818452928290209092601f01919091048101908490868215610953579182015b828111156109535782358260005055916020019190600101906108a7565b50507f1733cbb53659d713b79580f79f3f9ff215f78a7c7aa45890f3b89fc5cddfbf328132868887876040518087815260200186600160a060020a0316815260200185815260200184600160a060020a03168152602001806020018281038252848482818152602001925080828437820191505097505050505050505060405180910390a15b949350505050565b506108c59291505b8082111561096f576000815560010161095b565b5090565b15610b225760008381526101086020526040812054600160a060020a031614610b225760408051600091909120805460018201546002929092018054600160a060020a03929092169390918190839080156109f357820191906000526020600020905b8154815290600101906020018083116109d657829003601f168201915b505091505060006040518083038185876185025a03f150505060008481526101086020908152604080519281902080546001820154600160a060020a033281811688529587018b905293860181905292166060850181905260a06080860181815260029390930180549187018290527fe7c957c06e9a662c1a6c77366179f5b702b97651dc28eee7d5bf1dff6e40bb4a975094958a959293909160c083019084908015610ac557820191906000526020600020905b815481529060010190602001808311610aa857829003601f168201915b5050965050505050505060405180910390a160008381526101086020908152604082208054600160a060020a031916815560018101839055600281018054848255908452828420919392610b2892601f929092010481019061095b565b50919050565b5050506001915050610189565b156105e357610b438361016d565b15610b4e5750610655565b600160a060020a038416600090815261010260205260408120549250821415610b775750610655565b610b7f6103e6565b600160a060020a03831660028361010081101561000257508301819055600160a060020a03851660008181526101026020908152604080832083905584835291829020869055815192835282019290925281517fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c929181900390910190a150505050565b60008581526101036020526040812080549093501415610c8b576000805483556001838101919091556101048054918201808255828015829011610c5a57818360005260206000209182019101610c5a919061095b565b50505060028301819055610104805487929081101561000257600091909152600080516020610f6383398151915201555b506001810154600283900a90811660001415610d5b5760408051600160a060020a03321681526020810187905281517fe1c52dc63b719ade82e8bea94cc41a0d5d28e4aaf536adb5e9cccc9ff8c1aeda929181900390910190a1815460019011610d48576000858152610103602052604090206002015461010480549091908110156100025760406000908120600080516020610f638339815191529290920181905580825560018083018290556002909201559450610d5b9050565b8154600019018255600182018054821790555b505050919050565b5b60018054118015610d8657506001546002906101008110156100025701546000145b15610d9a5760018054600019019055610d64565b60015481108015610dbd5750600154600290610100811015610002570154600014155b8015610dd757506002816101008110156100025701546000145b15610e3857600154600290610100811015610002578101549082610100811015610002578101919091558190610102906000908361010081101561000257810154825260209290925260408120929092556001546101008110156100025701555b61048f565b156101895761010754610e535b62015180420490565b1115610e6c57600061010655610e67610e4a565b610107555b6101065480830110801590610e8a5750610106546101055490830111155b15610ea057506101068054820190556001610189565b506000610189565b6103a56101045460005b81811015610f385761010480548290811015610002576000918252600080516020610f63833981519152015414610f2557610104805461010391600091849081101561000257600080516020610f6383398151915201548252506020919091526040812081815560018101829055600201555b600101610eb2565b5050506001016103ed565b610104805460008083559190915261065590600080516020610f638339815191529081019061095b56004c0be60200faa20559308cb7b5a1bb3255c16cb1cab91f525b5ae7a03d02fabe',\n    '0x606060405236156100c45760e060020a6000350463173825d981146101165780632f54bf6e146101715780634123cb6b1461019957806354fd4d50146101a25780635c52c2f5146101af5780637065cb48146101e0578063746c917114610214578063797af6271461021d578063b20d30a914610230578063b61d27f614610264578063b75c7dc614610285578063ba51a6df146102b4578063c2cf7326146102e8578063cbf0b0c014610326578063f00d4b5d1461035a578063f1736d8614610393575b61039d60003411156101145760408051600160a060020a033216815234602082015281517fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c929181900390910190a15b565b61039d6004356000600036436040518084848082843750505090910190815260405190819003602001902090506106b8815b600160a060020a03321660009081526101026020526040812054818082811415610c2e57610d86565b61039f6004355b600160a060020a03811660009081526101026020526040812054115b919050565b61039f60015481565b6103b16101085460ff1681565b61039d6000364360405180848480828437505050909101908152604051908190036020019020905061080981610148565b61039d6004356000364360405180848480828437505050909101908152604051908190036020019020905061063081610148565b61039f60005481565b61039f6004355b600081610a6c81610148565b61039d600435600036436040518084848082843750505090910190815260405190819003602001902090506107fd81610148565b61039f60048035906024803591604435918201910135600061082832610178565b61039d600435600160a060020a033216600090815261010260205260408120549080828114156103c757610446565b61039d6004356000364360405180848480828437505050909101908152604051908190036020019020905061077781610148565b61039f600435602435600082815261010360209081526040808320600160a060020a038516845261010290925282205482818114156107d0576107f4565b61039d6004356000364360405180848480828437505050909101908152604051908190036020019020905061081781610148565b61039d6004356024356000600036436040518084848082843750505090910190815260405190819003602001902090506104d181610148565b61039f6101055481565b005b60408051918252519081900360200190f35b6040805160ff9092168252519081900360200190f35b50506000828152610103602052604081206001810154600284900a9290831611156104465780546001828101805492909101835590839003905560408051600160a060020a03321681526020810186905281517fc7fb647e59b18047309aa15aad418e5d7ca96d173ad704f1031a2c3d7591734b929181900390910190a15b50505050565b600160a060020a03831660028361010081101561000257508301819055600160a060020a03851660008181526101026020908152604080832083905584835291829020869055815192835282019290925281517fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c929181900390910190a1505b505050565b15610446576104df83610178565b156104ea57506104cc565b600160a060020a03841660009081526101026020526040812054925082141561051357506104cc565b61044c5b6101045460005b81811015610ed357610104805461010991600091849081101561000257600080516020610f8e83398151915201548252506020918252604081208054600160a060020a0319168155600181018290556002810180548382559083528383209193610f5892601f9290920104810190610a54565b60018054810190819055600160a060020a038316906002906101008110156100025790900160005081905550600160005054610102600050600084600160a060020a03168152602001908152602001600020600050819055507f994a936646fe87ffe4f1e469d3d6aa417d6b855598397f323de5b449f765f0c3826040518082600160a060020a0316815260200191505060405180910390a15b505b50565b1561062b5761063e82610178565b15610649575061062d565b610651610517565b60015460fa90106106665761066461067b565b505b60015460fa9010610591575061062d565b6107355b600060015b600154811015610a68575b600154811080156106ab5750600281610100811015610002570154600014155b15610d8e5760010161068b565b156104cc57600160a060020a0383166000908152610102602052604081205492508214156106e6575061062b565b6001600160005054036000600050541115610701575061062b565b600060028361010081101561000257508301819055600160a060020a03841681526101026020526040812055610677610517565b5060408051600160a060020a038516815290517f58619076adf5bb0943d100ef88d52d7c3fd691b19d3a9071b555b651fbf418da9181900360200190a1505050565b1561062b5760015482111561078c575061062d565b6000829055610799610517565b6040805183815290517facbdb084c721332ac59f9b8e392196c9eb0e4932862da8eb9beaf0dad4f550da9181900360200190a15050565b506001820154600282900a908116600014156107ef57600093506107f4565b600193505b50505092915050565b1561062b575061010555565b1561062d5760006101065550565b1561062b5781600160a060020a0316ff5b15610a445761083c846000610e6832610178565b156108f8577f92ca3a80853e6663fa31fa10b99225f18d4902939b4c53a9caae9043f6efd00432858786866040518086600160a060020a0316815260200185815260200184600160a060020a031681526020018060200182810382528484828181526020019250808284378201915050965050505050505060405180910390a184600160a060020a03168484846040518083838082843750505090810191506000908083038185876185025a03f15060009350610a4492505050565b60003643604051808484808284375050509091019081526040519081900360200190209150610928905081610224565b15801561094b575060008181526101096020526040812054600160a060020a0316145b15610a445760008181526101096020908152604082208054600160a060020a03191688178155600181018790556002018054858255818452928290209092601f01919091048101908490868215610a4c579182015b82811115610a4c5782358260005055916020019190600101906109a0565b50507f1733cbb53659d713b79580f79f3f9ff215f78a7c7aa45890f3b89fc5cddfbf328132868887876040518087815260200186600160a060020a0316815260200185815260200184600160a060020a03168152602001806020018281038252848482818152602001925080828437820191505097505050505050505060405180910390a15b949350505050565b506109be9291505b80821115610a685760008155600101610a54565b5090565b15610c1b5760008381526101096020526040812054600160a060020a031614610c1b5760408051600091909120805460018201546002929092018054600160a060020a0392909216939091819083908015610aec57820191906000526020600020905b815481529060010190602001808311610acf57829003601f168201915b505091505060006040518083038185876185025a03f150505060008481526101096020908152604080519281902080546001820154600160a060020a033281811688529587018b905293860181905292166060850181905260a06080860181815260029390930180549187018290527fe7c957c06e9a662c1a6c77366179f5b702b97651dc28eee7d5bf1dff6e40bb4a975094958a959293909160c083019084908015610bbe57820191906000526020600020905b815481529060010190602001808311610ba157829003601f168201915b5050965050505050505060405180910390a160008381526101096020908152604082208054600160a060020a031916815560018101839055600281018054848255908452828420919392610c2192601f9290920104810190610a54565b50919050565b5050506001915050610194565b60008581526101036020526040812080549093501415610cb6576000805483556001838101919091556101048054918201808255828015829011610c8557818360005260206000209182019101610c859190610a54565b50505060028301819055610104805487929081101561000257600091909152600080516020610f8e83398151915201555b506001810154600283900a90811660001415610d865760408051600160a060020a03321681526020810187905281517fe1c52dc63b719ade82e8bea94cc41a0d5d28e4aaf536adb5e9cccc9ff8c1aeda929181900390910190a1815460019011610d73576000858152610103602052604090206002015461010480549091908110156100025760406000908120600080516020610f8e8339815191529290920181905580825560018083018290556002909201559450610d869050565b8154600019018255600182018054821790555b505050919050565b5b60018054118015610db157506001546002906101008110156100025701546000145b15610dc55760018054600019019055610d8f565b60015481108015610de85750600154600290610100811015610002570154600014155b8015610e0257506002816101008110156100025701546000145b15610e6357600154600290610100811015610002578101549082610100811015610002578101919091558190610102906000908361010081101561000257810154825260209290925260408120929092556001546101008110156100025701555b610680565b156101945761010754610e7e5b62015180420490565b1115610e9757600061010655610e92610e75565b610107555b6101065480830110801590610eb55750610106546101055490830111155b15610ecb57506101068054820190556001610194565b506000610194565b61062b6101045460005b81811015610f635761010480548290811015610002576000918252600080516020610f8e833981519152015414610f5057610104805461010391600091849081101561000257600080516020610f8e83398151915201548252506020919091526040812081815560018101829055600201555b600101610edd565b50505060010161051e565b61010480546000808355919091526104cc90600080516020610f8e83398151915290810190610a5456004c0be60200faa20559308cb7b5a1bb3255c16cb1cab91f525b5ae7a03d02fabe',\n    '0x606060405236156100da5760e060020a6000350463173825d9811461012c5780632f54bf6e146101875780634123cb6b146101af57806352375093146101b857806354fd4d50146101c25780635c52c2f5146101cc578063659010e7146101fd5780637065cb4814610207578063746c91711461023b578063797af62714610244578063b20d30a914610257578063b61d27f61461028b578063b75c7dc6146102ac578063ba51a6df146102db578063c2cf73261461030f578063cbf0b0c01461034d578063f00d4b5d14610381578063f1736d86146103ba575b6103c4600034111561012a5760408051600160a060020a033216815234602082015281517fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c929181900390910190a15b565b6103c46004356000600036436040518084848082843750505090910190815260405190819003602001902090506106c9815b600160a060020a03321660009081526101026020526040812054818082811415610c3f57610d97565b6103c66004355b600160a060020a03811660009081526101026020526040812054115b919050565b6103c660015481565b6103c66101075481565b6103c66101085481565b6103c46000364360405180848480828437505050909101908152604051908190036020019020905061081a8161015e565b6103c66101065481565b6103c4600435600036436040518084848082843750505090910190815260405190819003602001902090506106418161015e565b6103c660005481565b6103c66004355b600081610a7d8161015e565b6103c46004356000364360405180848480828437505050909101908152604051908190036020019020905061080e8161015e565b6103c66004803590602480359160443591820191013560006108393261018e565b6103c4600435600160a060020a033216600090815261010260205260408120549080828114156103d857610457565b6103c4600435600036436040518084848082843750505090910190815260405190819003602001902090506107888161015e565b6103c6600435602435600082815261010360209081526040808320600160a060020a038516845261010290925282205482818114156107e157610805565b6103c4600435600036436040518084848082843750505090910190815260405190819003602001902090506108288161015e565b6103c46004356024356000600036436040518084848082843750505090910190815260405190819003602001902090506104e28161015e565b6103c66101055481565b005b60408051918252519081900360200190f35b50506000828152610103602052604081206001810154600284900a9290831611156104575780546001828101805492909101835590839003905560408051600160a060020a03321681526020810186905281517fc7fb647e59b18047309aa15aad418e5d7ca96d173ad704f1031a2c3d7591734b929181900390910190a15b50505050565b600160a060020a03831660028361010081101561000257508301819055600160a060020a03851660008181526101026020908152604080832083905584835291829020869055815192835282019290925281517fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c929181900390910190a1505b505050565b15610457576104f08361018e565b156104fb57506104dd565b600160a060020a03841660009081526101026020526040812054925082141561052457506104dd565b61045d5b6101045460005b81811015610ee457610104805461010991600091849081101561000257600080516020610f9f83398151915201548252506020918252604081208054600160a060020a0319168155600181018290556002810180548382559083528383209193610f6992601f9290920104810190610a65565b60018054810190819055600160a060020a038316906002906101008110156100025790900160005081905550600160005054610102600050600084600160a060020a03168152602001908152602001600020600050819055507f994a936646fe87ffe4f1e469d3d6aa417d6b855598397f323de5b449f765f0c3826040518082600160a060020a0316815260200191505060405180910390a15b505b50565b1561063c5761064f8261018e565b1561065a575061063e565b610662610528565b60015460fa90106106775761067561068c565b505b60015460fa90106105a2575061063e565b6107465b600060015b600154811015610a79575b600154811080156106bc5750600281610100811015610002570154600014155b15610d9f5760010161069c565b156104dd57600160a060020a0383166000908152610102602052604081205492508214156106f7575061063c565b6001600160005054036000600050541115610712575061063c565b600060028361010081101561000257508301819055600160a060020a03841681526101026020526040812055610688610528565b5060408051600160a060020a038516815290517f58619076adf5bb0943d100ef88d52d7c3fd691b19d3a9071b555b651fbf418da9181900360200190a1505050565b1561063c5760015482111561079d575061063e565b60008290556107aa610528565b6040805183815290517facbdb084c721332ac59f9b8e392196c9eb0e4932862da8eb9beaf0dad4f550da9181900360200190a15050565b506001820154600282900a908116600014156108005760009350610805565b600193505b50505092915050565b1561063c575061010555565b1561063e5760006101065550565b1561063c5781600160a060020a0316ff5b15610a555761084d846000610e793261018e565b15610909577f92ca3a80853e6663fa31fa10b99225f18d4902939b4c53a9caae9043f6efd00432858786866040518086600160a060020a0316815260200185815260200184600160a060020a031681526020018060200182810382528484828181526020019250808284378201915050965050505050505060405180910390a184600160a060020a03168484846040518083838082843750505090810191506000908083038185876185025a03f15060009350610a5592505050565b6000364360405180848480828437505050909101908152604051908190036020019020915061093990508161024b565b15801561095c575060008181526101096020526040812054600160a060020a0316145b15610a555760008181526101096020908152604082208054600160a060020a03191688178155600181018790556002018054858255818452928290209092601f01919091048101908490868215610a5d579182015b82811115610a5d5782358260005055916020019190600101906109b1565b50507f1733cbb53659d713b79580f79f3f9ff215f78a7c7aa45890f3b89fc5cddfbf328132868887876040518087815260200186600160a060020a0316815260200185815260200184600160a060020a03168152602001806020018281038252848482818152602001925080828437820191505097505050505050505060405180910390a15b949350505050565b506109cf9291505b80821115610a795760008155600101610a65565b5090565b15610c2c5760008381526101096020526040812054600160a060020a031614610c2c5760408051600091909120805460018201546002929092018054600160a060020a0392909216939091819083908015610afd57820191906000526020600020905b815481529060010190602001808311610ae057829003601f168201915b505091505060006040518083038185876185025a03f150505060008481526101096020908152604080519281902080546001820154600160a060020a033281811688529587018b905293860181905292166060850181905260a06080860181815260029390930180549187018290527fe7c957c06e9a662c1a6c77366179f5b702b97651dc28eee7d5bf1dff6e40bb4a975094958a959293909160c083019084908015610bcf57820191906000526020600020905b815481529060010190602001808311610bb257829003601f168201915b5050965050505050505060405180910390a160008381526101096020908152604082208054600160a060020a031916815560018101839055600281018054848255908452828420919392610c3292601f9290920104810190610a65565b50919050565b50505060019150506101aa565b60008581526101036020526040812080549093501415610cc7576000805483556001838101919091556101048054918201808255828015829011610c9657818360005260206000209182019101610c969190610a65565b50505060028301819055610104805487929081101561000257600091909152600080516020610f9f83398151915201555b506001810154600283900a90811660001415610d975760408051600160a060020a03321681526020810187905281517fe1c52dc63b719ade82e8bea94cc41a0d5d28e4aaf536adb5e9cccc9ff8c1aeda929181900390910190a1815460019011610d84576000858152610103602052604090206002015461010480549091908110156100025760406000908120600080516020610f9f8339815191529290920181905580825560018083018290556002909201559450610d979050565b8154600019018255600182018054821790555b505050919050565b5b60018054118015610dc257506001546002906101008110156100025701546000145b15610dd65760018054600019019055610da0565b60015481108015610df95750600154600290610100811015610002570154600014155b8015610e1357506002816101008110156100025701546000145b15610e7457600154600290610100811015610002578101549082610100811015610002578101919091558190610102906000908361010081101561000257810154825260209290925260408120929092556001546101008110156100025701555b610691565b156101aa5761010754610e8f5b62015180420490565b1115610ea857600061010655610ea3610e86565b610107555b6101065480830110801590610ec65750610106546101055490830111155b15610edc575061010680548201905560016101aa565b5060006101aa565b61063c6101045460005b81811015610f745761010480548290811015610002576000918252600080516020610f9f833981519152015414610f6157610104805461010391600091849081101561000257600080516020610f9f83398151915201548252506020919091526040812081815560018101829055600201555b600101610eee565b50505060010161052f565b61010480546000808355919091526104dd90600080516020610f9f83398151915290810190610a6556004c0be60200faa20559308cb7b5a1bb3255c16cb1cab91f525b5ae7a03d02fabe',\n  ],\n  stub: [\n    '0x60606040523615600d57600d565b606a5b7328aa4f0b12d6b0601e45836a14caa9ab1ad28b8173ffffffffffffffffffffffffffffffffffffffff16600036604051808383808284378201915050925050506000604051808303816000866161da5a03f2915050505b565b00',\n    '0x3660008037602060003660008073bfa69ba91385206bfdd2d8b9c1a5d6c10097a85b60325a03f260206000f3',\n    '0x3660008037602060003660003473d658a4b8247c14868f3c512fa5cbb6e458e4a98961235a5a03f260206000f3',\n    '0x3660008037602060003660003473a8b566789c430c906d0eb6b2916e550a9c493d8a61235a5a03f260206000f3',\n  ],\n  stubDynamic: [\n    '0x3660008037602060003660003473cafecafecafecafecafecafecafecafecafecafe61235a5a03f260206000f3',\n    '0x3660008037602060003660003473cafecafecafecafecafecafecafecafecafecafe61235a5a03f21560015760206000f3',\n  ],\n};\n\nexport const NavFields = {\n  Wallet: {\n    type: 'link',\n    // href: '/',\n    href: '/accounts',\n    liClass: 'wallet-nav-li',\n    icon: 'icon-wallet',\n    displayText: 'Wallets',\n  },\n  Send: {\n    type: 'link',\n    href: '/send-from',\n    liClass: 'send-nav-li',\n    icon: 'icon-arrow-up',\n    displayText: 'Send',\n  },\n  PeerInfo: {\n    type: 'peerInfo',\n    liClass: 'block-info dapp-flex-item',\n    firstIcon: 'icon-feed',\n    firstText: 'peers',\n    firstClass: '',\n    secondIcon: 'icon-layers',\n    secondText: 'since last block',\n    secondClass: 'hide-on-small',\n    thirdIcon: 'icon-clock',\n  },\n  Contracts: {\n    type: 'link',\n    href: '/contracts',\n    liClass: 'contracts-nav-li',\n    icon: 'icon-docs',\n    displayText: 'Contracts',\n  },\n  BalanceInfo: {\n    type: 'balanceInfo',\n    liClass: 'balance-nav-li wallet-balance',\n    firstText: 'Balance',\n    firstClass: 'account-balance',\n    secondText: 'ETHER',\n  },\n};\n\nexport const DefaultNavFields = [\n  {\n    type: 'link',\n    // href: '/',\n    href: '/accounts',\n    liClass: 'wallet-nav-li',\n    icon: 'icon-wallet',\n    displayText: 'Wallets',\n  },\n  {\n    type: 'link',\n    href: '/send-from',\n    liClass: 'send-nav-li',\n    icon: 'icon-arrow-up',\n    displayText: 'Send',\n  },\n  {\n    type: 'peerInfo',\n    liClass: 'block-info dapp-flex-item',\n    firstIcon: 'icon-feed',\n    firstText: 'peers',\n    firstClass: '',\n    secondIcon: 'icon-layers',\n    secondText: 'since last block',\n    secondClass: 'hide-on-small',\n  },\n  {\n    type: 'link',\n    href: '/contracts',\n    liClass: 'contracts-nav-li',\n    icon: 'icon-docs',\n    displayText: 'Contracts',\n  },\n  {\n    type: 'balanceInfo',\n    liClass: 'balance-nav-li wallet-balance',\n    firstText: 'Balance',\n    firstClass: 'account-balance',\n    secondText: 'ETHER',\n  },\n];\n\nexport const AccountPageHeader = [\n  { text: 'Accounts', strong: true },\n  { text: ' ', strong: false },\n  { text: 'Overiew', strong: false },\n];\n\nexport const ContractPageHeader = [{ text: 'Contracts', strong: true }];\n\nexport const SendPageHeader = [\n  { text: 'Send', strong: true },\n  { text: ' ', strong: false },\n  { text: 'funds', strong: false },\n];\n\nexport const DefaultAccountList = [\n  {\n    title: 'Accounts',\n    redirect: false,\n    buttonClass: 'wallet-box create add-account',\n    buttonDescription: 'ADD ACCOUNT',\n    contractDescription:\n      \"Accounts are password protected keys that can hold Ether and Ethereum-based tokens. They can control contracts, but can't display incoming transactions.\",\n  },\n  {\n    title: 'Wallet Contracts',\n    redirect: true,\n    link: 'account/new',\n    buttonClass: 'wallet-box create',\n    buttonDescription: 'ADD WALLET CONTRACt',\n    contractDescription:\n      'These contracts are stored on the blockchain and can hold and secure Ether. They can have multiple accounts as owners and keep a full log of all transactions.',\n  },\n];\n\nexport const ContractSectionList = {\n  DeployContract: {\n    title: '',\n    redirect: true,\n    link: 'deploy-contract',\n    buttonClass: 'wallet-box create add-contract',\n    buttonDescription: 'DEPLOY NEW CONTRACT',\n    contractDescription: '',\n  },\n  CustomContracts: {\n    title: 'Custom Contracts',\n    redirect: false,\n    link: 'deploy-contract',\n    buttonClass: 'wallet-box create add-contract',\n    buttonDescription: 'WATCH CONTRACT',\n    contractDescription:\n      'To watch and interact with a contract already deployed on the blockchain, you need to know its address and the description of its interface in JSON format.',\n  },\n  CustomTokens: {\n    title: 'Custom Tokens',\n    redirect: false,\n    link: 'deploy-contract',\n    buttonClass: 'wallet-box create add-token',\n    buttonDescription: 'WATCH CUSTOM TOKEN',\n    contractDescription:\n      'Tokens are currencies and other fungibles built on the Ethereum platform. In order for accounts to watch for tokens and send them, you have to add their address to this list. You can create your own token by simply modifying this example of a custom token contract or learning more about Ethereum Tokens.',\n  },\n};\nexport const DefaultContractList = [\n  {\n    title: '',\n    redirect: true,\n    link: 'deploy-contract',\n    buttonClass: 'wallet-box create add-contract',\n    buttonDescription: 'DEPLOY NEW CONTRACT',\n    contractDescription: '',\n  },\n  {\n    title: 'Custom Contracts',\n    redirect: false,\n    link: 'deploy-contract',\n    buttonClass: 'wallet-box create add-contract',\n    buttonDescription: 'WATCH CONTRACT',\n    contractDescription:\n      'To watch and interact with a contract already deployed on the blockchain, you need to know its address and the description of its interface in JSON format.',\n  },\n  {\n    title: 'Custom Tokens',\n    redirect: false,\n    link: 'deploy-contract',\n    buttonClass: 'wallet-box create add-token',\n    buttonDescription: 'WATCH CUSTOM TOKEN',\n    contractDescription:\n      'Tokens are currencies and other fungibles built on the Ethereum platform. In order for accounts to watch for tokens and send them, you have to add their address to this list. You can create your own token by simply modifying this example of a custom token contract or learning more about Ethereum Tokens.',\n  },\n];\n","export const ReplicateBinanceToken = {\n  jsonInterface: [\n    {\n      constant: true,\n      inputs: [],\n      name: 'name',\n      outputs: [{ name: '', type: 'string' }],\n      payable: false,\n      type: 'function',\n    },\n    {\n      constant: false,\n      inputs: [\n        { name: '_spender', type: 'address' },\n        { name: '_value', type: 'uint256' },\n      ],\n      name: 'approve',\n      outputs: [{ name: 'success', type: 'bool' }],\n      payable: false,\n      type: 'function',\n    },\n    {\n      constant: true,\n      inputs: [],\n      name: 'totalSupply',\n      outputs: [{ name: '', type: 'uint256' }],\n      payable: false,\n      type: 'function',\n    },\n    {\n      constant: false,\n      inputs: [\n        { name: '_from', type: 'address' },\n        { name: '_to', type: 'address' },\n        { name: '_value', type: 'uint256' },\n      ],\n      name: 'transferFrom',\n      outputs: [{ name: 'success', type: 'bool' }],\n      payable: false,\n      type: 'function',\n    },\n    {\n      constant: true,\n      inputs: [],\n      name: 'decimals',\n      outputs: [{ name: '', type: 'uint8' }],\n      payable: false,\n      type: 'function',\n    },\n    {\n      constant: false,\n      inputs: [{ name: 'amount', type: 'uint256' }],\n      name: 'withdrawEther',\n      outputs: [],\n      payable: false,\n      type: 'function',\n    },\n    {\n      constant: false,\n      inputs: [{ name: '_value', type: 'uint256' }],\n      name: 'burn',\n      outputs: [{ name: 'success', type: 'bool' }],\n      payable: false,\n      type: 'function',\n    },\n    {\n      constant: false,\n      inputs: [{ name: '_value', type: 'uint256' }],\n      name: 'unfreeze',\n      outputs: [{ name: 'success', type: 'bool' }],\n      payable: false,\n      type: 'function',\n    },\n    {\n      constant: true,\n      inputs: [{ name: '', type: 'address' }],\n      name: 'balanceOf',\n      outputs: [{ name: '', type: 'uint256' }],\n      payable: false,\n      type: 'function',\n    },\n    {\n      constant: true,\n      inputs: [],\n      name: 'owner',\n      outputs: [{ name: '', type: 'address' }],\n      payable: false,\n      type: 'function',\n    },\n    {\n      constant: true,\n      inputs: [],\n      name: 'symbol',\n      outputs: [{ name: '', type: 'string' }],\n      payable: false,\n      type: 'function',\n    },\n    {\n      constant: false,\n      inputs: [\n        { name: '_to', type: 'address' },\n        { name: '_value', type: 'uint256' },\n      ],\n      name: 'transfer',\n      outputs: [],\n      payable: false,\n      type: 'function',\n    },\n    {\n      constant: true,\n      inputs: [{ name: '', type: 'address' }],\n      name: 'freezeOf',\n      outputs: [{ name: '', type: 'uint256' }],\n      payable: false,\n      type: 'function',\n    },\n    {\n      constant: false,\n      inputs: [{ name: '_value', type: 'uint256' }],\n      name: 'freeze',\n      outputs: [{ name: 'success', type: 'bool' }],\n      payable: false,\n      type: 'function',\n    },\n    {\n      constant: true,\n      inputs: [{ name: '', type: 'address' }, { name: '', type: 'address' }],\n      name: 'allowance',\n      outputs: [{ name: '', type: 'uint256' }],\n      payable: false,\n      type: 'function',\n    },\n    {\n      inputs: [\n        { name: 'initialSupply', type: 'uint256' },\n        { name: 'tokenName', type: 'string' },\n        { name: 'decimalUnits', type: 'uint8' },\n        { name: 'tokenSymbol', type: 'string' },\n      ],\n      payable: false,\n      type: 'constructor',\n    },\n    { payable: true, type: 'fallback' },\n    {\n      anonymous: false,\n      inputs: [\n        { indexed: true, name: 'from', type: 'address' },\n        { indexed: true, name: 'to', type: 'address' },\n        { indexed: false, name: 'value', type: 'uint256' },\n      ],\n      name: 'Transfer',\n      type: 'event',\n    },\n    {\n      anonymous: false,\n      inputs: [\n        { indexed: true, name: 'from', type: 'address' },\n        { indexed: false, name: 'value', type: 'uint256' },\n      ],\n      name: 'Burn',\n      type: 'event',\n    },\n    {\n      anonymous: false,\n      inputs: [\n        { indexed: true, name: 'from', type: 'address' },\n        { indexed: false, name: 'value', type: 'uint256' },\n      ],\n      name: 'Freeze',\n      type: 'event',\n    },\n    {\n      anonymous: false,\n      inputs: [\n        { indexed: true, name: 'from', type: 'address' },\n        { indexed: false, name: 'value', type: 'uint256' },\n      ],\n      name: 'Unfreeze',\n      type: 'event',\n    },\n  ],\n  ABI:\n    '0x606060405234156200001057600080fd5b604051620016d8380380620016d8833981016040528080519060200190919080518201919060200180519060200190919080518201919050505b83600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550836003819055508260009080519060200190620000ad9291906200012e565b508060019080519060200190620000c69291906200012e565b5081600260006101000a81548160ff021916908360ff16021790555033600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50505050620001dd565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200017157805160ff1916838001178555620001a2565b82800160010185558215620001a2579182015b82811115620001a157825182559160200191906001019062000184565b5b509050620001b19190620001b5565b5090565b620001da91905b80821115620001d6576000816000905550600101620001bc565b5090565b90565b6114eb80620001ed6000396000f300606060405236156100d9576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde03146100e2578063095ea7b31461017157806318160ddd146101cb57806323b872dd146101f4578063313ce5671461026d5780633bed33ce1461029c57806342966c68146102bf5780636623fc46146102fa57806370a08231146103355780638da5cb5b1461038257806395d89b41146103d7578063a9059cbb14610466578063cd4217c1146104a8578063d7a78db8146104f5578063dd62ed3e14610530575b6100e05b5b565b005b34156100ed57600080fd5b6100f561059c565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101365780820151818401525b60208101905061011a565b50505050905090810190601f1680156101635780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561017c57600080fd5b6101b1600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190505061063a565b604051808215151515815260200191505060405180910390f35b34156101d657600080fd5b6101de6106d6565b6040518082815260200191505060405180910390f35b34156101ff57600080fd5b610253600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff169060200190919080359060200190919050506106dc565b604051808215151515815260200191505060405180910390f35b341561027857600080fd5b610280610b01565b604051808260ff1660ff16815260200191505060405180910390f35b34156102a757600080fd5b6102bd6004808035906020019091905050610b14565b005b34156102ca57600080fd5b6102e06004808035906020019091905050610bd6565b604051808215151515815260200191505060405180910390f35b341561030557600080fd5b61031b6004808035906020019091905050610d29565b604051808215151515815260200191505060405180910390f35b341561034057600080fd5b61036c600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610ef6565b6040518082815260200191505060405180910390f35b341561038d57600080fd5b610395610f0e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156103e257600080fd5b6103ea610f34565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561042b5780820151818401525b60208101905061040f565b50505050905090810190601f1680156104585780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561047157600080fd5b6104a6600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610fd2565b005b34156104b357600080fd5b6104df600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611260565b6040518082815260200191505060405180910390f35b341561050057600080fd5b6105166004808035906020019091905050611278565b604051808215151515815260200191505060405180910390f35b341561053b57600080fd5b610586600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611445565b6040518082815260200191505060405180910390f35b60008054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106325780601f1061060757610100808354040283529160200191610632565b820191906000526020600020905b81548152906001019060200180831161061557829003601f168201915b505050505081565b6000808211151561064a57600080fd5b81600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600190505b92915050565b60035481565b6000808373ffffffffffffffffffffffffffffffffffffffff16141561070157600080fd5b60008211151561071057600080fd5b81600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101561075c57600080fd5b600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020540110156107e957600080fd5b600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482111561087257600080fd5b6108bb600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548361146a565b600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610947600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205483611484565b600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610a10600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548361146a565b600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a3600190505b9392505050565b600260009054906101000a900460ff1681565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610b7057600080fd5b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501515610bd257600080fd5b5b50565b600081600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610c2457600080fd5b600082111515610c3357600080fd5b610c7c600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548361146a565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610ccb6003548361146a565b6003819055503373ffffffffffffffffffffffffffffffffffffffff167fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5836040518082815260200191505060405180910390a2600190505b919050565b600081600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610d7757600080fd5b600082111515610d8657600080fd5b610dcf600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548361146a565b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610e5b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205483611484565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff167f2cfce4af01bcb9d6cf6c84ee1b7c491100b8695368264146a94d71e10a63083f836040518082815260200191505060405180910390a2600190505b919050565b60056020528060005260406000206000915090505481565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610fca5780601f10610f9f57610100808354040283529160200191610fca565b820191906000526020600020905b815481529060010190602001808311610fad57829003601f168201915b505050505081565b60008273ffffffffffffffffffffffffffffffffffffffff161415610ff657600080fd5b60008111151561100557600080fd5b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101561105157600080fd5b600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205481600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020540110156110de57600080fd5b611127600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548261146a565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506111b3600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482611484565b600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35b5050565b60066020528060005260406000206000915090505481565b600081600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156112c657600080fd5b6000821115156112d557600080fd5b61131e600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548361146a565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506113aa600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205483611484565b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff167ff97a274face0b5517365ad396b1fdba6f68bd3135ef603e44272adba3af5a1e0836040518082815260200191505060405180910390a2600190505b919050565b6007602052816000526040600020602052806000526040600020600091509150505481565b6000611478838311156114af565b81830390505b92915050565b60008082840190506114a484821015801561149f5750838210155b6114af565b8091505b5092915050565b8015156114bb57600080fd5b5b505600a165627a7a72305820082734e053ffbdf2a3195354a3210dff3723c239a1e76ae3be0936f6aed31bee0029000000000000000000000000000000000000000000a56fa5b99019a5c80000000000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000001200000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000003424e4200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003424e420000000000000000000000000000000000000000000000000000000000',\n};\n\nexport default ReplicateBinanceToken;\n","import React, { Component } from 'react';\nimport isEqual from 'lodash/isEqual';\nimport { connect } from 'react-redux';\nimport compose from 'recompose/compose';\nimport { withStyles } from '@material-ui/core/styles';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport TokenBox from './elements/TokenBox';\nimport { ContractSectionList } from '../constants/FieldConstants';\nimport { ReplicateBinanceToken } from '../constants/DevConstants';\nimport WalletDropdown from './elements/WalletDropdown';\nimport ButtonDescription from './ButtonDescription';\nimport * as Actions from '../actions/actions';\nimport * as Utils from '../utils/utils';\nimport { combineWallets, sortByBalance } from '../utils/helperFunctions';\nimport web3 from '../web3';\n\nconst styles = theme => ({\n  fab: {\n    margin: theme.spacing.unit,\n  },\n  extendedIcon: {\n    marginRight: theme.spacing.unit,\n  },\n});\n\nconst buttonTitle = 'Deploy Token';\nconst buttonDescription = 'This feature is for testing in development';\n\nexport class DeployToken extends Component {\n  constructor(props) {\n    super(props);\n    const { Wallets, WalletContracts } = this.props;\n    const combinedWallets = combineWallets(Wallets, WalletContracts);\n    this.state = {\n      deployingAddress: combinedWallets[0].address,\n      disabledWallet: '',\n    };\n    this.deployBinanceToken = this.deployBinanceToken.bind(this);\n    this.returnDeployTokenAddress = this.returnDeployTokenAddress.bind(this);\n  }\n\n  shouldComponentUpdate() {\n    return false;\n  }\n\n  componentDidMount() {\n    this.setState({ disabledWallet: false });\n  }\n\n  deployBinanceToken() {\n    this.setState({ disabledWallet: true });\n    if (!web3) {\n      return;\n    }\n    const code = ReplicateBinanceToken.ABI;\n    const args = [18000000, 'Asdf', 18, 'bnb0'];\n    const options = {\n      data: code,\n      arguments: [...args],\n      from: this.state.deployingAddress,\n    };\n\n    const jsonInterface = ReplicateBinanceToken.jsonInterface;\n    const contract = new web3.eth.Contract(jsonInterface);\n\n    contract\n      .deploy({\n        data: code,\n        arguments: options.arguments,\n      })\n      .send({\n        from: this.state.deployingAddress,\n        gas: 3000000,\n      })\n      .on('error', err => {\n        console.warn('error deploying contract', err);\n        this.props.displayGlobalNotification({\n          display: true,\n          type: 'error',\n          msg: err.message,\n        });\n      })\n      .on('transactionHash', transactionHash => {\n        this.props.displayGlobalNotification({\n          display: true,\n          type: 'warning',\n          msg: 'Pending contract deployment',\n        });\n      })\n      .on('receipt', receipt => {\n        contract.options.address = receipt.contractAddress;\n        contract.methods\n          .totalSupply()\n          .call()\n          .then(totalSupply => {\n            console.log('totalSupply', totalSupply);\n            const token = {\n              address: receipt.contractAddress,\n              name: 'Asdf',\n              symbol: 'bnb0',\n              decimals: '18',\n            };\n            this.props.addObservedToken({\n              address: token.address,\n              value: Object.assign({}, token, {\n                totalSupply,\n              }),\n            });\n          });\n      });\n  }\n\n  returnDeployTokenAddress(e) {\n    this.setState({ deployingAddress: e.target.value });\n  }\n\n  renderButton() {\n    const { classes } = this.props;\n    return (\n      <Fab\n        color=\"primary\"\n        aria-label=\"Add\"\n        className={classes.fab}\n        onClick={this.deployBinanceToken}\n      >\n        <AddIcon />\n      </Fab>\n    );\n  }\n\n  renderWallet() {\n    const dropdownConfig = {\n      component: 'deployToken',\n      selectClassName: 'send-from',\n      selectName: 'from',\n    };\n    return (\n      <React.Fragment>\n        <h3 style={{ display: 'inline-block' }}>Deploy a ERC-20 token</h3>\n        <div\n          className=\"dapp-select-account send-from\"\n          style={{ display: 'inline-block', marginLeft: '20px' }}\n        >\n          <WalletDropdown\n            disabled={this.state.disabledWallet}\n            dropdownConfig={dropdownConfig}\n            returnDeployTokenAddress={this.returnDeployTokenAddress}\n          />\n        </div>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"contracts-view-custom-tokens\">\n        <ButtonDescription\n          title={buttonTitle}\n          description={buttonDescription}\n        />\n        <div className=\"container row\">\n          {this.renderButton()}\n          {this.renderWallet()}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  Wallets: state.reducers.Wallets,\n  WalletContracts: state.reducers.WalletContracts,\n});\n\nexport default compose(\n  withStyles(styles, { name: 'CustomContracts' }),\n  connect(\n    mapStateToProps,\n    { ...Actions }\n  )\n)(DeployToken);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport CustomContracts from '../components/CustomContracts';\nimport CustomTokens from '../components/CustomTokens';\nimport DeployToken from '../components/DeployToken';\n\nconst Title = () => {\n  return (\n    <h1>\n      <strong>Contracts</strong>\n    </h1>\n  );\n};\n\nexport class ContractsView extends Component {\n  render() {\n    return (\n      <div className=\"dapp-container\">\n        <Title />\n        <CustomContracts />\n        <CustomTokens />\n        {this.props.network !== 'mainnet' ? <DeployToken /> : null}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  network: state.network,\n});\n\nexport default connect(\n  mapStateToProps,\n  null\n)(ContractsView);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport compose from 'recompose/compose';\nimport { Identicon } from 'ethereum-react-components';\nimport WalletDropdown from './elements/WalletDropdown';\nimport web3 from '../web3';\nimport { updateTransactionToSend } from '../actions/actions';\n\nimport * as Utils from '../utils/utils';\n\nimport { combineWallets, sortByBalance } from '../utils/helperFunctions';\n\nexport class Send extends Component {\n  // TODO replace fromWallet with the from field from reducer TransactionToSend\n  constructor(props) {\n    super(props);\n    const wallets = this.props.Wallets;\n\n    const { Wallets, WalletContracts } = this.props;\n    console.log(Wallets);\n    console.log(WalletContracts);\n\n    const combinedWallets = combineWallets(Wallets, WalletContracts);\n\n    this.props.updateTransactionToSend({\n      name: 'from',\n      value: combinedWallets[0].address,\n    });\n    this.state = {\n      fromWallet: combinedWallets[0].address,\n      switchChecked: true,\n      checkbox: false,\n      standardFee: false,\n    };\n\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.checkIsAddress = this.checkIsAddress.bind(this);\n  }\n\n  handleInputChange(e) {\n    // TODO:validate inputs here\n    const target = e.target.getAttribute('name');\n    let targetValue = e.target.value;\n\n    if (target === 'value' && targetValue) {\n      targetValue = web3.utils.toWei(targetValue, 'ETHER');\n    }\n\n    this.setState({ toAddress: targetValue });\n\n    this.checkIsAddress();\n\n    this.props.updateTransactionToSend({\n      name: target,\n      value: targetValue,\n    });\n  }\n\n  checkIsAddress() {\n    const isAddress =\n      this.state.toAddress !== '' && this.state.toAddress !== undefined\n        ? web3.utils.isAddress(this.state.toAddress)\n        : this.state.toAddress !== '' || this.state.toAddress !== undefined\n        ? null\n        : false;\n    this.setState({ toIsAddress: isAddress });\n  }\n\n  renderFrom() {\n    const dropdownConfig = {\n      component: 'Send',\n      selectClassName: 'send-from',\n      selectName: 'from',\n    };\n    return (\n      <div className=\"col col-6 mobile-full from\">\n        <h3>From</h3>\n        <div className=\"dapp-select-account send-from\">\n          <WalletDropdown dropdownConfig={dropdownConfig} />\n        </div>\n      </div>\n    );\n  }\n\n  renderIcon() {\n    return (\n      <React.Fragment>\n        {this.state.toIsAddress &&\n        typeof this.state.toIsAddress === typeof true ? (\n          <Identicon\n            classes=\"dapp-identicon dapp-tiny\"\n            title\n            size=\"tiny\"\n            address={this.state.toAddress}\n          />\n        ) : this.state.toIsAddress === null ||\n          this.state.toIsAddress === undefined ? null : (\n          <i className=\"icon-shield\" />\n        )}\n      </React.Fragment>\n    );\n  }\n\n  renderTo() {\n    const cn = require('classnames');\n    const newClasses = cn({\n      to: true,\n      'dapp-error': this.state.toIsAddress === false,\n    });\n    return (\n      <div className=\"col col-6 mobile-full\">\n        <h3>To</h3>\n        <div className=\"dapp-address-input\">\n          <input\n            type=\"text\"\n            name=\"to\"\n            placeholder=\"0x000000..\"\n            className={newClasses}\n            autoFocus\n            // value={tx.to}\n            onChange={e => this.handleInputChange(e)}\n            onKeyUp={e => this.handleInputChange(e)}\n          />\n          {this.renderIcon()}\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    const dropdownConfig = {\n      component: 'Send',\n      selectClassName: 'send-from',\n      selectName: 'from',\n    };\n    return (\n      <div className=\"row clear from-to\">\n        {this.renderFrom()}\n        {this.renderTo()}\n        <div className=\"dapp-clear-fix\" />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  TransactionToSend: state.reducers.TransactionToSend,\n  Wallets: state.reducers.Wallets,\n  WalletContracts: state.reducers.WalletContracts,\n});\n\nexport default connect(\n  mapStateToProps,\n  { updateTransactionToSend }\n)(Send);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport shortid from 'shortid';\nimport { Identicon } from 'ethereum-react-components';\nimport * as Actions from '../../actions/actions';\n\nexport class RadioTokenSelect extends Component {\n  constructor(props) {\n    super(props);\n    this.chooseToken = this.chooseToken.bind(this);\n  }\n\n  chooseToken(e) {\n    const tokens = this.props.tokens;\n    if (e.target.value === 'ether') {\n      this.props.updateTokenToSend({\n        sendToken: false,\n        tokenToSend: {},\n      });\n    } else {\n      this.props.updateTokenToSend({\n        sendToken: true,\n        tokenToSend: Object.assign({}, tokens[e.target.value]),\n      });\n    }\n  }\n\n  renderEtherChoice() {\n    return (\n      <li onClick={e => this.chooseToken(e)}>\n        <input\n          type=\"radio\"\n          id=\"ether\"\n          value=\"ether\"\n          name=\"choose-token\"\n          onClick={e => {\n            this.chooseToken(e);\n          }}\n        />\n        <label htmlFor=\"ether\">\n          <span className=\"ether-symbol\">Ξ</span>\n          <span className=\"token-name\">ETHER</span>\n          <span className=\"balance\">TODO</span>\n        </label>\n      </li>\n    );\n  }\n\n  renderTokensChoice() {\n    const tokens = this.props.tokens;\n    const wallet = this.props.wallet;\n    return (\n      <React.Fragment>\n        {Object.keys(tokens).map(token => (\n          <li key={shortid.generate()}>\n            <input\n              type=\"radio\"\n              id={`token-${tokens[token].address}`}\n              value={tokens[token].address}\n              name=\"choose-token\"\n              onClick={e => {\n                this.chooseToken(e);\n              }}\n            />\n            <label htmlFor={`token-${tokens[token].address}`}>\n              <Identicon\n                classes=\"dapp-identicon dapp-tiny\"\n                title\n                size=\"tiny\"\n                address={token}\n              />\n              <span className=\"token-name\">{tokens[token].name}</span>\n              <span className=\"balance\">\n                {tokens[token].balance}\n                &nbsp;\n                {tokens[token].symbol}\n              </span>\n            </label>\n          </li>\n        ))}\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    const tokens = this.props.tokens;\n    return (\n      <ul className=\"select-token\">\n        {this.renderEtherChoice()}\n        {tokens ? this.renderTokensChoice() : null}\n      </ul>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return state;\n};\n\nexport default connect(\n  mapStateToProps,\n  { ...Actions }\n)(RadioTokenSelect);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport RadioTokenSelect from './elements/RadioTokenSelect';\nimport { updateTransactionToSend } from '../actions/actions';\nimport { displayPriceFormatter } from '../utils/utils';\nimport web3 from '../web3';\n\nexport class AmountRow extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      checkbox: false,\n    };\n    this.handleOnKeyUp = this.handleOnKeyUp.bind(this);\n    this.toggleCheckbox = this.toggleCheckbox.bind(this);\n  }\n\n  handleOnKeyUp(e) {\n    // TODO:validate inputs here\n    const tx = this.props.TransactionToSend;\n    let target = e.target.getAttribute('name');\n    let targetValue = e.target.value;\n\n    // TODO: still not to validate, but allow single decimal\n    if (targetValue.includes('.')) {\n      const eth = targetValue.split('.')[0];\n\n      const wei = web3.utils.toWei(eth, 'ether');\n      const subEth = targetValue.split('.')[1];\n    }\n\n    if (target === 'value' && web3 && targetValue && !tx.sendToken) {\n      targetValue = web3.utils.toWei(targetValue, 'ETHER');\n    }\n\n    if (tx.sendToken) {\n      target = 'tokenAmount';\n    }\n\n    this.props.updateTransactionToSend({\n      name: target,\n      value: targetValue,\n    });\n  }\n\n  toggleCheckbox(e) {\n    const wallet = this.props.TransactionToSend;\n    this.props.updateTransactionToSend({\n      name: 'value',\n      value: this.state.checkbox ? this.props.Wallets[wallet.from] : 0,\n    });\n    this.setState({ checkbox: !this.state.checkbox });\n  }\n\n  renderAmount() {\n    return (\n      <React.Fragment>\n        <h3>Amount</h3>\n        <input\n          type=\"text\"\n          min=\"0\"\n          step=\"any\"\n          name=\"value\"\n          placeholder=\"0.0\"\n          className=\"dapp-large\"\n          pattern=\"[0-9\\.,]*\"\n          onKeyUp={e => this.handleOnKeyUp(e)}\n        />\n        <br />\n        <label>\n          <input\n            type=\"checkbox\"\n            className=\"send-all\"\n            onChange={e => this.toggleCheckbox(e)}\n          />\n          Send everything\n        </label>\n      </React.Fragment>\n    );\n  }\n\n  renderAmountSummary() {\n    const tx = this.props.TransactionToSend;\n    const currency = this.props.reducers.currency;\n    return (\n      <p className=\"send-info\">\n        You want to send\n        <strong>\n          {!tx.sendToken ? (\n            ` ${displayPriceFormatter(this.props, tx.value)} ${currency}`\n          ) : (\n            <React.Fragment>\n              &nbsp; {tx.tokenAmount}\n              &nbsp; {tx.tokenToSend.symbol}\n            </React.Fragment>\n          )}\n        </strong>\n        .\n      </p>\n    );\n  }\n\n  renderEtherBalance() {\n    const wallets = this.props.Wallets;\n    const wallet = this.props.TransactionToSend.from;\n    const currency = this.props.reducers.currency;\n    const balance = wallets[wallet].balance;\n    return (\n      <div className=\"token-ether\">\n        <span className=\"ether-symbol\">Ξ</span>\n        <span className=\"token-name\">ETHER</span>\n        <span className=\"balance\">\n          {` ${displayPriceFormatter(\n            this.props,\n            balance\n          )} ${currency} (${displayPriceFormatter(\n            this.props,\n            balance,\n            'ETHER'\n          )}ETHER)`}\n        </span>\n      </div>\n    );\n  }\n\n  renderEtherDropDown() {\n    const wallets = this.props.Wallets;\n    const wallet = this.props.TransactionToSend.from;\n    const tokens = wallets[wallet] ? wallets[wallet].tokens : undefined;\n    return (\n      <div className=\"col col-6 mobile-full\">\n        <br />\n        <br />\n        {tokens ? (\n          <RadioTokenSelect wallet={wallet} tokens={tokens} />\n        ) : (\n          this.renderEtherBalance()\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"row clear\">\n        <div className=\"col col-6 mobile-full amount\">\n          {this.renderAmount()}\n          {this.renderAmountSummary()}\n        </div>\n        {this.renderEtherDropDown()}\n        <div className=\"dapp-clear-fix\" />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  Wallets: state.reducers.Wallets,\n  GasStats: state.reducers.GasStats,\n  TransactionToSend: state.reducers.TransactionToSend,\n  reducers: {\n    exchangeRates: state.reducers.exchangeRates,\n    currency: state.reducers.currency,\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  { updateTransactionToSend }\n)(AmountRow);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\n// import * as Actions from '../actions/actions.js';\nimport { updateTransactionToSend } from '../actions/actions';\nimport { floatToTime } from '../utils/utils';\nimport web3 from '../web3';\n\nexport class GasFeeRow extends Component {\n  constructor(props) {\n    // TODO need to init gas\n    // TODO where was estimate gas being called?!\n\n    super(props);\n    this.state = {\n      standardFee: false,\n    };\n    this.changeGas = this.changeGas.bind(this);\n    this.estimateGas = this.estimateGas.bind(this);\n    this.toggleFee = this.toggleFee.bind(this);\n  }\n\n  changeGas(e) {\n    this.props.updateTransactionToSend({\n      name: 'gasPrice',\n      value: e * 1000000000,\n    });\n  }\n\n  estimateGas() {\n    const tx = this.props.TransactionToSend;\n    web3.eth.estimateGas(\n      {\n        to: tx.to,\n        from: tx.from,\n        amount: tx.value,\n      },\n      (err, res) => {\n        err\n          ? console.warn(err)\n          : this.props.updateTransactionToSend({\n              name: 'estimatedGas',\n              value: res,\n            });\n      }\n    );\n  }\n\n  toggleFee(e) {\n    this.setState({ standardFee: !this.state.standardFee });\n    this.props.GasStats !== {} && !this.state.standardFee\n      ? this.changeGas(this.props.GasStats.safeLow)\n      : this.changeGas(this.props.GasStats.fastest);\n  }\n\n  renderFeePriority() {\n    const GasStats = this.props.GasStats;\n    return (\n      <div className=\"col col-7 mobile-full\">\n        <h3>Select Fee</h3>\n        <div className=\"dapp-select-gas-price\" onClick={e => this.toggleFee(e)}>\n          {GasStats !== {} && this.state.standardFee ? (\n            <span>STANDARD FEE: &nbsp; {GasStats.safeLow} </span>\n          ) : (\n            <span>PRIORITY FEE: &nbsp; {GasStats.fastest}</span>\n          )}\n        </div>\n      </div>\n    );\n  }\n\n  renderEstimateTime() {\n    const GasStats = this.props.GasStats;\n    return (\n      <div className=\"col col-5 mobile-full send-info\">\n        <br />\n        <br />\n        This is the most amount of money that might be used to process this\n        transaction. Your transaction will be mined &nbsp;\n        <strong>\n          probably within &nbsp;\n          {GasStats !== {} && this.state.standardFee\n            ? floatToTime(GasStats.safeLowWait)\n            : floatToTime(GasStats.fastWait)}\n        </strong>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"row clear\">\n        {this.renderFeePriority()}\n        {this.renderEstimateTime()}\n        <div className=\"dapp-clear-fix\" />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  GasStats: state.reducers.GasStats,\n  TransactionToSend: state.reducers.TransactionToSend,\n});\n\nexport default connect(\n  mapStateToProps,\n  { updateTransactionToSend }\n)(GasFeeRow);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Web3 from 'web3';\nimport { displayPriceFormatter } from '../utils/utils';\n\nconst web3 = new Web3();\n\nconst TokenInfo = ({ tx }) => {\n  return (\n    <React.Fragment>\n      <span className=\"amount\">\n        &nbsp;\n        {tx.tokenAmount}\n      </span>\n      &nbsp;\n      {tx.tokenToSend.symbol}\n    </React.Fragment>\n  );\n};\n\nconst EstimatedFee = ({ total }) => {\n  return (\n    <React.Fragment>\n      Estimated Fee: &nbsp;\n      {web3.utils.fromWei(total, 'ether')}\n      &nbsp; ETHER\n    </React.Fragment>\n  );\n};\n\nexport class TotalGas extends Component {\n  renderTotal(total) {\n    const tx = this.props.TransactionToSend;\n    return (\n      <React.Fragment>\n        <h3>Total</h3>\n        {!tx.sendToken ? (\n          <span className=\"amount\">\n            {` ${displayPriceFormatter(this.props, total)} ${\n              this.props.reducers.currency\n            }`}\n          </span>\n        ) : (\n          <TokenInfo transaction={tx} />\n        )}\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    const tx = this.props.TransactionToSend;\n    const val = Number(tx.value);\n    let total = !tx.sendToken ? val + tx.gasPrice : tx.gasPrice;\n    total = !isNaN(total) ? total : 0;\n    total = web3.utils.toBN(total);\n    return (\n      <div className=\"row clear total\">\n        <div className=\"col col-12 mobile-full\">\n          {this.renderTotal(total)}\n          <br />\n          <EstimatedFee total={total} />\n        </div>\n        <div className=\"dapp-clear-fix\" />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  TransactionToSend: state.reducers.TransactionToSend,\n  web3: state.web3,\n  reducers: {\n    exchangeRates: state.reducers.exchangeRates,\n    currency: state.reducers.currency,\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  null\n)(TotalGas);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport FromToRow from '../components/FromToRow';\nimport AmountRow from '../components/AmountRow';\nimport GasFeeRow from '../components/GasFeeRow';\nimport TotalGas from '../components/TotalGas';\nimport web3 from '../web3';\n\nimport {\n  updateTransactionToSend,\n  displayGlobalNotification,\n  displayModal,\n} from '../actions/actions';\n\nconst Title = () => {\n  return (\n    <h1>\n      <strong>Send</strong> Funds\n    </h1>\n  );\n};\n\nexport class Send extends Component {\n  constructor(props) {\n    super(props);\n    this.handleOnKeyUp = this.handleOnKeyUp.bind(this);\n    this.validateForm = this.validateForm.bind(this);\n    this.validateSendingEther = this.validateSendingEther.bind(this);\n    this.validateSendingTokens = this.validateSendingTokens.bind(this);\n  }\n\n  validateSendingEther(tx) {\n    let msg;\n    let valid = true;\n    const { totalBalance } = this.props.reducers;\n    if (!tx.value) {\n      msg = \"Oops! You'll need  to specify an amount to send\";\n      valid = false;\n      this.props.displayGlobalNotification({\n        display: true,\n        type: 'info',\n        msg,\n      });\n    }\n    if (tx.amount > totalBalance) {\n      msg =\n        \"Oops! That's more than the wallet holds. Please select a lesser amount\";\n      valid = false;\n      this.props.displayGlobalNotification({\n        display: true,\n        type: 'warning',\n        msg,\n      });\n    }\n    if (valid) this.props.displayModal('displaySendTransaction');\n  }\n\n  validateSendingTokens(tx) {\n    console.log('in validateSendingTokens');\n    const valid = true;\n    if (valid) this.props.displayModal('displaySendTransaction');\n  }\n\n  validateForm(tx) {\n    let msg;\n    let valid = true;\n\n    if (!web3.utils.isAddress(tx.to)) {\n      msg =\n        'The To field has an invalid address! Please check that it has been entered correctly';\n      valid = false;\n      this.props.displayGlobalNotification({\n        display: true,\n        type: 'error',\n        msg,\n      });\n    }\n    if (!web3.utils.isAddress(tx.from)) {\n      msg =\n        'The From field has an invalid address! Please check that it has been entered correctly';\n      valid = false;\n      this.props.displayGlobalNotification({\n        display: true,\n        type: 'error',\n        msg,\n      });\n    }\n\n    !tx.sendToken\n      ? this.validateSendingEther(tx)\n      : this.validateSendingTokens(tx);\n\n    // if (valid) this.props.displayModal('displaySendTransaction');\n  }\n\n  handleOnKeyUp(e) {\n    // TODO:validate inputs here\n    const target = e.target.getAttribute('name');\n    let targetValue = e.target.value;\n\n    if (target === 'value' && web3 && targetValue) {\n      targetValue = web3.utils.toWei(targetValue, 'ETHER');\n    }\n    this.props.updateTransactionToSend({\n      name: target,\n      value: targetValue,\n    });\n  }\n\n  renderSubmitButton() {\n    return (\n      <button\n        type=\"submit\"\n        className=\"dapp-block-button\"\n        onClick={e => {\n          e.preventDefault();\n          this.validateForm(this.props.reducers.TransactionToSend);\n        }}\n      >\n        Send\n      </button>\n    );\n  }\n\n  render() {\n    return (\n      <form\n        className=\"account-send-form\"\n        action=\"about:blank\"\n        target=\"dapp-form-helper-iframe\"\n        autoComplete=\"on\"\n      >\n        <Title />\n        <FromToRow />\n        <AmountRow />\n        <GasFeeRow />\n        <TotalGas />\n        {this.renderSubmitButton()}\n      </form>\n    );\n  }\n}\n\nSend.propTypes = {\n  updateTransactionToSend: PropTypes.func,\n  displayGlobalNotification: PropTypes.func,\n  displayModal: PropTypes.func,\n};\n\nconst mapStateToProps = state => {\n  return state;\n};\n\nexport default connect(\n  mapStateToProps,\n  { updateTransactionToSend, displayGlobalNotification, displayModal }\n)(Send);\n","/**\nConfig for the ethereum connector\n\n@property config\n*/\nexport const ethereumConfig = {\n  /**\n    Number of blocks to rollback, from the last checkpoint block of the wallet.\n\n    @property ethereumConfig.rollBackBy\n    */\n  rollBackBy: 0,\n  /**\n    Number of blocks to confirm a wallet\n\n    @property ethereumConfig.requiredConfirmations\n    */\n  requiredConfirmations: 12,\n  /**\n    The default daily limit used for simple accounts\n\n    @property ethereumConfig.dailyLimitDefault\n    */\n  dailyLimitDefault: '100000000000000000000000000',\n};\n\nexport const WalletInterfaceItems = {\n  mainNetAddress: '0x273930d21e01ee25e4c219b63259d214872220a2',\n  testNetAddress: '0x1d649ca03d1bcd84877482c1dd8d3f9a7398728f', // morden testnet\n  walletInterface: [\n    {\n      constant: false,\n      inputs: [{ name: '_owner', type: 'address' }],\n      name: 'removeOwner',\n      outputs: [],\n      type: 'function',\n    },\n    {\n      constant: false,\n      inputs: [{ name: '_addr', type: 'address' }],\n      name: 'isOwner',\n      outputs: [{ name: '', type: 'bool' }],\n      type: 'function',\n    },\n    {\n      constant: true,\n      inputs: [],\n      name: 'm_numOwners',\n      outputs: [{ name: '', type: 'uint256' }],\n      type: 'function',\n    },\n    {\n      constant: true,\n      inputs: [],\n      name: 'm_lastDay',\n      outputs: [{ name: '', type: 'uint256' }],\n      type: 'function',\n    },\n    {\n      constant: true,\n      inputs: [],\n      name: 'version',\n      outputs: [{ name: '', type: 'uint256' }],\n      type: 'function',\n    },\n    {\n      constant: false,\n      inputs: [],\n      name: 'resetSpentToday',\n      outputs: [],\n      type: 'function',\n    },\n    {\n      constant: true,\n      inputs: [],\n      name: 'm_spentToday',\n      outputs: [{ name: '', type: 'uint256' }],\n      type: 'function',\n    },\n    {\n      constant: false,\n      inputs: [{ name: '_owner', type: 'address' }],\n      name: 'addOwner',\n      outputs: [],\n      type: 'function',\n    },\n    {\n      constant: true,\n      inputs: [],\n      name: 'm_required',\n      outputs: [{ name: '', type: 'uint256' }],\n      type: 'function',\n    },\n    {\n      constant: false,\n      inputs: [{ name: '_h', type: 'bytes32' }],\n      name: 'confirm',\n      outputs: [{ name: '', type: 'bool' }],\n      type: 'function',\n    },\n    {\n      constant: false,\n      inputs: [{ name: '_newLimit', type: 'uint256' }],\n      name: 'setDailyLimit',\n      outputs: [],\n      type: 'function',\n    },\n    {\n      constant: false,\n      inputs: [\n        { name: '_to', type: 'address' },\n        { name: '_value', type: 'uint256' },\n        { name: '_data', type: 'bytes' },\n      ],\n      name: 'execute',\n      outputs: [{ name: '_r', type: 'bytes32' }],\n      type: 'function',\n    },\n    {\n      constant: false,\n      inputs: [{ name: '_operation', type: 'bytes32' }],\n      name: 'revoke',\n      outputs: [],\n      type: 'function',\n    },\n    {\n      constant: false,\n      inputs: [{ name: '_newRequired', type: 'uint256' }],\n      name: 'changeRequirement',\n      outputs: [],\n      type: 'function',\n    },\n    {\n      constant: true,\n      inputs: [\n        { name: '_operation', type: 'bytes32' },\n        { name: '_owner', type: 'address' },\n      ],\n      name: 'hasConfirmed',\n      outputs: [{ name: '', type: 'bool' }],\n      type: 'function',\n    },\n    {\n      constant: false,\n      inputs: [{ name: '_to', type: 'address' }],\n      name: 'kill',\n      outputs: [],\n      type: 'function',\n    },\n    {\n      constant: false,\n      inputs: [\n        { name: '_from', type: 'address' },\n        { name: '_to', type: 'address' },\n      ],\n      name: 'changeOwner',\n      outputs: [],\n      type: 'function',\n    },\n    {\n      constant: true,\n      inputs: [],\n      name: 'm_dailyLimit',\n      outputs: [{ name: '', type: 'uint256' }],\n      type: 'function',\n    },\n    {\n      inputs: [\n        { name: '_owners', type: 'address[]' },\n        { name: '_required', type: 'uint256' },\n        { name: '_daylimit', type: 'uint256' },\n      ],\n      type: 'constructor',\n    },\n    {\n      anonymous: false,\n      inputs: [\n        { indexed: false, name: 'owner', type: 'address' },\n        { indexed: false, name: 'operation', type: 'bytes32' },\n      ],\n      name: 'Confirmation',\n      type: 'event',\n    },\n    {\n      anonymous: false,\n      inputs: [\n        { indexed: false, name: 'owner', type: 'address' },\n        { indexed: false, name: 'operation', type: 'bytes32' },\n      ],\n      name: 'Revoke',\n      type: 'event',\n    },\n    {\n      anonymous: false,\n      inputs: [\n        { indexed: false, name: 'oldOwner', type: 'address' },\n        { indexed: false, name: 'newOwner', type: 'address' },\n      ],\n      name: 'OwnerChanged',\n      type: 'event',\n    },\n    {\n      anonymous: false,\n      inputs: [{ indexed: false, name: 'newOwner', type: 'address' }],\n      name: 'OwnerAdded',\n      type: 'event',\n    },\n    {\n      anonymous: false,\n      inputs: [{ indexed: false, name: 'oldOwner', type: 'address' }],\n      name: 'OwnerRemoved',\n      type: 'event',\n    },\n    {\n      anonymous: false,\n      inputs: [{ indexed: false, name: 'newRequirement', type: 'uint256' }],\n      name: 'RequirementChanged',\n      type: 'event',\n    },\n    {\n      anonymous: false,\n      inputs: [\n        { indexed: false, name: 'from', type: 'address' },\n        { indexed: false, name: 'value', type: 'uint256' },\n      ],\n      name: 'Deposit',\n      type: 'event',\n    },\n    {\n      anonymous: false,\n      inputs: [\n        { indexed: false, name: 'owner', type: 'address' },\n        { indexed: false, name: 'value', type: 'uint256' },\n        { indexed: false, name: 'to', type: 'address' },\n        { indexed: false, name: 'data', type: 'bytes' },\n      ],\n      name: 'SingleTransact',\n      type: 'event',\n    },\n    {\n      anonymous: false,\n      inputs: [\n        { indexed: false, name: 'owner', type: 'address' },\n        { indexed: false, name: 'operation', type: 'bytes32' },\n        { indexed: false, name: 'value', type: 'uint256' },\n        { indexed: false, name: 'to', type: 'address' },\n        { indexed: false, name: 'data', type: 'bytes' },\n      ],\n      name: 'MultiTransact',\n      type: 'event',\n    },\n    {\n      anonymous: false,\n      inputs: [\n        { indexed: false, name: 'operation', type: 'bytes32' },\n        { indexed: false, name: 'initiator', type: 'address' },\n        { indexed: false, name: 'value', type: 'uint256' },\n        { indexed: false, name: 'to', type: 'address' },\n        { indexed: false, name: 'data', type: 'bytes' },\n      ],\n      name: 'ConfirmationNeeded',\n      type: 'event',\n    },\n  ],\n  walletABI:\n    '',\n  walletStubABI:\n    '0x6060604052600261010860005055604051611b51380380611b51833981016040528080518201919060200180519060200190919080519060200190919050505b805b83835b600060018351016001600050819055503373ffffffffffffffffffffffffffffffffffffffff16600260005060016101008110156100025790900160005b5081905550600161010260005060003373ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005081905550600090505b825181101561016e5782818151811015610002579060200190602002015173ffffffffffffffffffffffffffffffffffffffff166002600050826002016101008110156100025790900160005b508190555080600201610102600050600085848151811015610002579060200190602002015173ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050819055505b80600101905080506100c2565b816000600050819055505b505050806101056000508190555061018f6101ad565b610107600050819055505b505b505050611992806101bf6000396000f35b600062015180420490506101bc565b9056606060405236156100f8576000357c010000000000000000000000000000000000000000000000000000000090048063173825d9146101605780632f54bf6e146101785780634123cb6b146101a457806352375093146101c757806354fd4d50146101ea5780635c52c2f51461020d578063659010e71461021c5780637065cb481461023f578063746c917114610257578063797af6271461027a578063b20d30a9146102a6578063b61d27f6146102be578063b75c7dc614610307578063ba51a6df1461031f578063c2cf732614610337578063cbf0b0c01461036c578063f00d4b5d14610384578063f1736d86146103a5576100f8565b61015e5b600034111561015b577fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c3334604051808373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a15b5b565b005b61017660048080359060200190919050506107c4565b005b61018e60048080359060200190919050506109a5565b6040518082815260200191505060405180910390f35b6101b16004805050610a91565b6040518082815260200191505060405180910390f35b6101d46004805050610b38565b6040518082815260200191505060405180910390f35b6101f76004805050610b42565b6040518082815260200191505060405180910390f35b61021a6004805050610adf565b005b6102296004805050610b2e565b6040518082815260200191505060405180910390f35b610255600480803590602001909190505061066e565b005b6102646004805050610a88565b6040518082815260200191505060405180910390f35b6102906004808035906020019091905050610f0e565b6040518082815260200191505060405180910390f35b6102bc6004808035906020019091905050610a9a565b005b6102f160048080359060200190919080359060200190919080359060200190820180359060200191909192905050610b9e565b6040518082815260200191505060405180910390f35b61031d60048080359060200190919050506103c8565b005b610335600480803590602001909190505061090f565b005b61035660048080359060200190919080359060200190919050506109e7565b6040518082815260200191505060405180910390f35b6103826004808035906020019091905050610b4c565b005b6103a360048080359060200190919080359060200190919050506104ca565b005b6103b26004805050610b24565b6040518082815260200191505060405180910390f35b60006000600061010260005060003373ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050549250600083141561040f576104c4565b8260020a91506101036000506000858152602001908152602001600020600050905060008282600101600050541611156104c3578060000160008181505480929190600101919050555081816001016000828282505403925050819055507fc7fb647e59b18047309aa15aad418e5d7ca96d173ad704f1031a2c3d7591734b3385604051808373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a15b5b50505050565b600060003643604051808484808284378201915050828152602001935050505060405180910390206104fb816112db565b1561066757610509836109a5565b156105145750610669565b61010260005060008573ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005054915060008214156105565750610669565b61055e611777565b8273ffffffffffffffffffffffffffffffffffffffff166002600050836101008110156100025790900160005b5081905550600061010260005060008673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050819055508161010260005060008573ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050819055507fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c8484604051808373ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a15b505b505050565b600036436040518084848082843782019150508281526020019350505050604051809103902061069d816112db565b156107bf576106ab826109a5565b156106b657506107c1565b6106be611777565b60fa6001600050541015156106d7576106d561153d565b505b60fa6001600050541015156106ec57506107c1565b60016000818150548092919060010191905055508173ffffffffffffffffffffffffffffffffffffffff1660026000506001600050546101008110156100025790900160005b508190555060016000505461010260005060008473ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050819055507f994a936646fe87ffe4f1e469d3d6aa417d6b855598397f323de5b449f765f0c382604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a15b505b50565b600060003643604051808484808284378201915050828152602001935050505060405180910390206107f5816112db565b156109095761010260005060008473ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050549150600082141561083c575061090b565b6001600160005054036000600050541115610857575061090b565b60006002600050836101008110156100025790900160005b5081905550600061010260005060008573ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050819055506108b2611777565b6108ba61153d565b507f58619076adf5bb0943d100ef88d52d7c3fd691b19d3a9071b555b651fbf418da83604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a15b505b5050565b600036436040518084848082843782019150508281526020019350505050604051809103902061093e816112db565b156109a05760016000505482111561095657506109a2565b81600060005081905550610968611777565b7facbdb084c721332ac59f9b8e392196c9eb0e4932862da8eb9beaf0dad4f550da826040518082815260200191505060405180910390a15b505b50565b6000600061010260005060008473ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050541190506109e2565b919050565b60006000600060006101036000506000878152602001908152602001600020600050925061010260005060008673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000505491506000821415610a505760009350610a7f565b8160020a90506000818460010160005054161415610a755760009350610a7f56610a7e565b60019350610a7f565b5b50505092915050565b60006000505481565b60016000505481565b6000364360405180848480828437820191505082815260200193505050506040518091039020610ac9816112db565b15610ada5781610105600050819055505b505b50565b6000364360405180848480828437820191505082815260200193505050506040518091039020610b0e816112db565b15610b20576000610106600050819055505b505b565b6101056000505481565b6101066000505481565b6101076000505481565b6101086000505481565b6000364360405180848480828437820191505082815260200193505050506040518091039020610b7b816112db565b15610b99578173ffffffffffffffffffffffffffffffffffffffff16ff5b505b50565b6000610ba9336109a5565b15610f0557610bb7846116d7565b15610ca0577f92ca3a80853e6663fa31fa10b99225f18d4902939b4c53a9caae9043f6efd0043385878686604051808673ffffffffffffffffffffffffffffffffffffffff1681526020018581526020018473ffffffffffffffffffffffffffffffffffffffff1681526020018060200182810382528484828181526020019250808284378201915050965050505050505060405180910390a18473ffffffffffffffffffffffffffffffffffffffff168484846040518083838082843782019150509250505060006040518083038185876185025a03f1925050505060006001029050610f06565b600036436040518084848082843782019150508281526020019350505050604051809103902090508050610cd381610f0e565b158015610d3357506000610109600050600083815260200190815260200160002060005060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b15610f045784610109600050600083815260200190815260200160002060005060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff0219169083021790555083610109600050600083815260200190815260200160002060005060010160005081905550828261010960005060008481526020019081526020016000206000506002016000509190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610e0857803560ff1916838001178555610e39565b82800160010185558215610e39579182015b82811115610e38578235826000505591602001919060010190610e1a565b5b509050610e649190610e46565b80821115610e605760008181506000905550600101610e46565b5090565b50507f1733cbb53659d713b79580f79f3f9ff215f78a7c7aa45890f3b89fc5cddfbf32813386888787604051808781526020018673ffffffffffffffffffffffffffffffffffffffff1681526020018581526020018473ffffffffffffffffffffffffffffffffffffffff168152602001806020018281038252848482818152602001925080828437820191505097505050505050505060405180910390a15b5b5b949350505050565b600081610f1a816112db565b156112d4576000610109600050600085815260200190815260200160002060005060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156112d357610109600050600084815260200190815260200160002060005060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610109600050600085815260200190815260200160002060005060010160005054610109600050600086815260200190815260200160002060005060020160005060405180828054600181600116156101000203166002900480156110765780601f1061104b57610100808354040283529160200191611076565b820191906000526020600020905b81548152906001019060200180831161105957829003601f168201915b505091505060006040518083038185876185025a03f192505050507fe7c957c06e9a662c1a6c77366179f5b702b97651dc28eee7d5bf1dff6e40bb4a3384610109600050600087815260200190815260200160002060005060010160005054610109600050600088815260200190815260200160002060005060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166101096000506000898152602001908152602001600020600050600201600050604051808673ffffffffffffffffffffffffffffffffffffffff1681526020018581526020018481526020018373ffffffffffffffffffffffffffffffffffffffff168152602001806020018281038252838181546001816001161561010002031660029004815260200191508054600181600116156101000203166002900480156112005780601f106111d557610100808354040283529160200191611200565b820191906000526020600020905b8154815290600101906020018083116111e357829003601f168201915b5050965050505050505060405180910390a1610109600050600084815260200190815260200160002060006000820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600182016000506000905560028201600050805460018160011615610100020316600290046000825580601f1061128957506112c6565b601f0160209004906000526020600020908101906112c591906112a7565b808211156112c157600081815060009055506001016112a7565b5090565b5b50505060019150506112d6565b5b505b919050565b600060006000600061010260005060003373ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050549250600083141561132457611535565b610103600050600086815260200190815260200160002060005091506000826000016000505414156113fd57600060005054826000016000508190555060008260010160005081905550610104600050805480919060010190908154818355818115116113c3578183600052602060002091820191016113c291906113a4565b808211156113be57600081815060009055506001016113a4565b5090565b5b5050508260020160005081905550846101046000508360020160005054815481101561000257906000526020600020900160005b50819055505b8260020a90506000818360010160005054161415611534577fe1c52dc63b719ade82e8bea94cc41a0d5d28e4aaf536adb5e9cccc9ff8c1aeda3386604051808373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a16001826000016000505411151561150757610104600050610103600050600087815260200190815260200160002060005060020160005054815481101561000257906000526020600020900160005b50600090556101036000506000868152602001908152602001600020600060008201600050600090556001820160005060009055600282016000506000905550506001935061153556611533565b816000016000818150548092919060019003919050555080826001016000828282505417925050819055505b5b5b505050919050565b60006000600190505b6001600050548110156116d2575b60016000505481108015611580575060006002600050826101008110156100025790900160005b505414155b15611592578080600101915050611554565b5b60016001600050541180156115c45750600060026000506001600050546101008110156100025790900160005b5054145b156115e357600160008181505480929190600190039190505550611593565b600160005054811080156116145750600060026000506001600050546101008110156100025790900160005b505414155b8015611637575060006002600050826101008110156100025790900160005b5054145b156116cd5760026000506001600050546101008110156100025790900160005b50546002600050826101008110156100025790900160005b50819055508061010260005060006002600050846101008110156100025790900160005b5054815260200190815260200160002060005081905550600060026000506001600050546101008110156100025790900160005b50819055505b611546565b5b5090565b60006116e2336109a5565b1561177157610107600050546116f6611980565b111561171b57600061010660005081905550611710611980565b610107600050819055505b610106600050548261010660005054011015801561174757506101056000505482610106600050540111155b15611768578161010660008282825054019250508190555060019050611772565b60009050611772565b5b919050565b60006000610104600050805490509150600090505b8181101561187857610109600050600061010460005083815481101561000257906000526020600020900160005b5054815260200190815260200160002060006000820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600182016000506000905560028201600050805460018160011615610100020316600290046000825580601f1061182a5750611867565b601f0160209004906000526020600020908101906118669190611848565b808211156118625760008181506000905550600101611848565b5090565b5b5050505b806001019050805061178c565b611880611885565b5b5050565b60006000610104600050805490509150600090505b8181101561193857600060010261010460005082815481101561000257906000526020600020900160005b505414151561192a57610103600050600061010460005083815481101561000257906000526020600020900160005b50548152602001908152602001600020600060008201600050600090556001820160005060009055600282016000506000905550505b5b806001019050805061189a565b61010460005080546000825590600052602060002090810190611979919061195b565b80821115611975576000818150600090555060010161195b565b5090565b5b505b5050565b6000620151804204905061198f565b9056', // '0x606060405260026101086000505560405161015638038061015683398101604052805160805160a051919092019190808383815160019081018155600090600160a060020a0332169060029060038390559183525061010260205260408220555b82518110156100eb57828181518110156100025790602001906020020151600160a060020a03166002600050826002016101008110156100025790900160005081905550806002016101026000506000858481518110156100025790602001906020020151600160a060020a0316815260200190815260200160002060005081905550600101610060565b81600060005081905550505050806101056000508190555061010f62015180420490565b61010755505050506031806101256000396000f3003660008037602060003660003473cafecafecafecafecafecafecafecafecafecafe61235a5a03f21560015760206000f3'\n  // '0x606060405260026101086000505560405161015638038061015683398101604052805160805160a051919092019190808383815160019081018155600090600160a060020a0332169060029060038390559183525061010260205260408220555b82518110156100eb57828181518110156100025790602001906020020151600160a060020a03166002600050826002016101008110156100025790900160005081905550806002016101026000506000858481518110156100025790602001906020020151600160a060020a0316815260200190815260200160002060005081905550600101610060565b81600060005081905550505050806101056000508190555061010f62015180420490565b61010755505050506031806101256000396000f3003660008037602060003660003473cafecafecafecafecafecafecafecafecafecafe61235a5a03f21560015760206000f3',\n  // CONTRACT VERSIONS\n  contractVersions: [\n    // 0 foundation\n    {\n      original:\n        '971ac1efe62de02ab7497cf2cad2b93ce990a8d11c3a544943baf807e42eab7d',\n      stub: false,\n      // version 0 with tx.origin\n      address: '0x4efc6389b88569a375668b7b3bd4a9b6c8f4a942',\n    },\n    // 1 better daily limit\n    {\n      original:\n        '8207780d6fb31803373aff97360562231187ebb0da6b4678eeb68ceb16897509',\n      stub: '',\n      address: '0x273930d21e01ee25e4c219b63259d214872220a2',\n    },\n  ],\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport compose from 'recompose/compose';\nimport PropTypes from 'prop-types';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Collapse from '@material-ui/core/Collapse';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport InputAdornment from '@material-ui/core/InputAdornment';\n\nimport shortid from 'shortid';\nimport { Identicon } from 'ethereum-react-components';\nimport WalletDropdown from '../components/elements/WalletDropdown';\nimport * as Actions from '../actions/actions';\nimport { makeID } from '../utils/helperFunctions';\nimport web3 from '../web3';\n\nimport {\n  WalletInterfaceItems,\n  ethereumConfig,\n} from '../constants/InitConstants.js';\n\nconst styles = theme => ({\n  radioRoot: {\n    display: 'flex',\n  },\n  formControl: {\n    margin: theme.spacing.unit * 3,\n  },\n  group: {\n    margin: `${theme.spacing.unit}px 0`,\n  },\n  fadeRoot: {\n    height: 'auto',\n    noHeight: 0,\n  },\n  paper: {\n    margin: theme.spacing.unit,\n  },\n  svg: {\n    width: 100,\n    height: 100,\n  },\n  polygon: {\n    fill: theme.palette.common.white,\n    stroke: theme.palette.divider,\n    strokeWidth: 1,\n  },\n});\n\nconst Title = () => {\n  return (\n    <h1>\n      New <strong>wallet contract</strong>\n    </h1>\n  );\n};\n\nconst SelectOwner = () => {\n  const dropdownConfig = {\n    component: 'DeployContractForm',\n    selectClassName: 'send-from',\n    selectName: 'MainOwnerAddress',\n  };\n  return (\n    <React.Fragment>\n      <h2>Select owner</h2>\n      <div className=\"col col-6 mobile-full from\">\n        <h3>From</h3>\n        <div className=\"dapp-select-account send-from\">\n          <WalletDropdown dropdownConfig={dropdownConfig} />\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nconst dcfRadio = ['simpleChecked', 'multisigChecked', 'importWalletChecked'];\n\nclass NewWalletContract extends Component {\n  constructor(props) {\n    super(props);\n    this.state = this.props;\n    this.selectWallet = this.selectWallet.bind(this);\n    this.createContract = this.createContract.bind(this);\n    this.checkIfImportableWallet = this.checkIfImportableWallet.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    let defaultWallet;\n    const wallets = this.props.reducers.Wallets;\n    for (const prop in wallets) {\n      defaultWallet = prop;\n      break;\n    }\n    this.state.reducers.DeployContractForm.MainOwnerAddress = defaultWallet;\n    this.state.reducers.DeployContractForm.multiSigContract.owners[0] = defaultWallet;\n  }\n\n  selectWallet(e) {\n    // TODO:validate inputs here\n    const obj = { ...this.props.reducers.DeployContractForm };\n    obj.MainOwnerAddress = e.target.value;\n    this.props.updateMainContractAddress({\n      name: 'MainOwnerAddress',\n      value: e.target.value,\n    });\n  }\n\n  shouldComponentUpdate(prevProps, prevState) {\n    const dcf = this.props.reducers.DeployContractForm;\n    const prevDcf = prevProps.reducers.DeployContractForm;\n    if (\n      dcf !== prevDcf ||\n      dcf.multiSigContract !== prevDcf.multiSigContract ||\n      dcf.MainOwnerAddress !== prevDcf.MainOwnerAddress\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  checkIfImportableWallet(e) {\n    const dcf = this.props.reducers.DeployContractForm;\n    const address = dcf.importWalletAddress;\n\n    if (!web3.utils.isAddress(address)) {\n      console.log('inside not address');\n      this.props.displayGlobalNotification({\n        display: true,\n        type: 'error',\n        msg: 'Invalid address input',\n      });\n      this.props.updateMainDCF({ name: 'importWalletAddress', value: '' });\n      return false;\n    }\n\n    const pendingConf = this.props.reducers.ContractsPendingConfirmations;\n    const wc = this.props.reducers.WalletContracts;\n    const walletContracts = Object.assign({}, pendingConf, wc);\n    if (Object.keys(walletContracts).includes(address)) {\n      this.props.displayGlobalNotification({\n        display: true,\n        type: 'warning',\n        msg:\n          'You are already following this wallet, or it is pending confirmation.',\n      });\n      this.props.updateMainDCF({ name: 'importWalletAddress', value: '' });\n      return false;\n    }\n\n    const originalABI = WalletInterfaceItems.walletStubABI;\n    return web3.eth.getCode(address).then((err, res) => {\n      if (err) {\n        this.props.displayGlobalNotification({\n          display: true,\n          type: 'error',\n          msg:\n            err === '0x' || err === '0x0'\n              ? \"A contract doesn't exist at this address\"\n              : err,\n        });\n        this.props.updateMainDCF({ name: 'importWalletAddress', value: '' });\n        return false;\n      }\n      if (originalABI !== res) {\n        this.props.displayGlobalNotification({\n          display: true,\n          type: 'error',\n          msg:\n            'This address does not reference a contract identical to the wallets this form deploys, and cannot be imported',\n        });\n        this.props.updateMainDCF({ name: 'importWalletAddress', value: '' });\n        return false;\n      }\n      return true;\n    });\n  }\n\n  handleChange(e) {\n    const buttonValue = e.target.value;\n    const name = e.target.name;\n    let obj = {};\n    switch (name) {\n      case 'ContractToDeployRadio':\n        obj = { ...this.props.reducers.DeployContractForm };\n        dcfRadio.map(key => (obj[key] = false));\n        obj[buttonValue] = true;\n        this.props.updateDCFRadio(obj);\n        break;\n      case 'multisigSigneesCount':\n        obj = { ...this.props.reducers.DeployContractForm.multiSigContract };\n        obj.ownerCount = buttonValue;\n        this.props.updateDeployContractForm(obj);\n        break;\n      case 'multisigSigneesAddresses':\n        obj = { ...this.props.reducers.DeployContractForm.multiSigContract };\n        obj.owners[e.target.getAttribute('id').split('-')[0]] = buttonValue;\n        this.props.updateDeployContractForm(obj);\n        break;\n      case 'multisigSigneesRequired':\n        obj = { ...this.props.reducers.DeployContractForm.multiSigContract };\n        obj.confirmationAddressesRequired = buttonValue;\n        this.props.updateDeployContractForm(obj);\n        break;\n      case 'dailyLimitAmount':\n        obj = { ...this.props.reducers.DeployContractForm.multiSigContract };\n        obj.dailyLimitAmount = buttonValue;\n        this.props.updateDeployContractForm(obj);\n        break;\n      case 'WalletContractName':\n        this.props.updateMainDCF({ name: 'contract-name', value: buttonValue });\n        break;\n      case 'MainOwnerAddress':\n        this.props.updateMainDCF({\n          name: 'MainOwnerAddress',\n          value: buttonValue,\n        });\n        break;\n      case 'importWalletAddress':\n        this.props.updateMainDCF({\n          name: 'importWalletAddress',\n          value: buttonValue,\n        });\n        break;\n      default:\n        break;\n    }\n  }\n\n  renderMultiSigOwners() {\n    const dcf = this.props.reducers.DeployContractForm;\n    const { ownerCount, owners } = dcf.multiSigContract;\n    return (\n      <React.Fragment>\n        {[...Array(ownerCount).keys()].map((num, index) => (\n          <TextField\n            key={shortid.generate()}\n            id={`${index}-multiSigAddress`}\n            onChange={e => this.handleChange(e)}\n            data-name=\"multisigSigneesAddresses\"\n            name=\"multisigSigneesAddresses\"\n            label=\"Owner address\"\n            className=\"dapp-address-input owners\"\n            value={\n              index === 0\n                ? dcf.MainOwnerAddress\n                : typeof owners[index] === 'undefined'\n                ? ''\n                : owners[index]\n            }\n            disabled={index === 0}\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <Identicon\n                    classes=\"dapp-identicon dapp-small\"\n                    title\n                    size=\"small\"\n                    address={\n                      index === 0\n                        ? dcf.MainOwnerAddress\n                        : typeof owners[index] === 'undefined'\n                        ? makeID()\n                        : owners[index]\n                    }\n                  />\n                </InputAdornment>\n              ),\n            }}\n          />\n        ))}\n      </React.Fragment>\n    );\n  }\n\n  validateMultipleAddress(web3, addresses) {\n    const ownerSet = new Set(addresses);\n    const arr = [...ownerSet].map(address => web3.utils.isAddress(address));\n    if (arr.includes(false)) {\n      console.warn('invalid address');\n      this.props.displayGlobalNotification({\n        display: true,\n        type: 'error',\n        msg: 'Invalid address input',\n      });\n      return false;\n    }\n    if (addresses.length !== ownerSet.size) {\n      console.warn('invalid address');\n      this.props.displayGlobalNotification({\n        display: true,\n        type: 'warning',\n        msg:\n          'Invalid address input - you may have used an address more than once',\n      });\n      return false;\n    }\n    return true;\n  }\n\n  createContract(e) {\n    // this.checkIfImportableWallet(e)\n\n    console.log('e in createContract', e);\n    const dcf = this.props.reducers.DeployContractForm;\n    console.log(dcf);\n\n    // TODO: finish up import wallet\n    // if (dcf.importWalletChecked) {\n    //   let bool = this.checkIfImportableWallet(e);\n    //   console.log(bool);\n    //   return;\n    //   // if(!bool) return;\n    // }\n    // return;\n\n    const msContract = dcf.multiSigContract;\n    // hardcoded bytecode\n    // same for imported wallet - there is a web3 check to make the\n    // code at the given address is identical to the walletStubABI\n    const code = WalletInterfaceItems.walletStubABI;\n    // hardcoded JSON interface\n    const jsonInterface = WalletInterfaceItems.walletInterface;\n    const contract = new web3.eth.Contract(jsonInterface);\n    if (!web3) {\n      return;\n    }\n\n    const options = {\n      data: code,\n      arguments: '',\n      from: dcf.MainOwnerAddress.toLowerCase(),\n    };\n\n    let valid = false;\n\n    if (dcf.multisigChecked === false) {\n      options.arguments = [\n        [dcf.MainOwnerAddress.toLowerCase()], // owner\n        1, // require signature count,\n        ethereumConfig.dailyLimitDefault.toString(10), // ethereum configs daily limit\n      ];\n      valid = true;\n    } else {\n      options.arguments = [\n        msContract.owners,\n        msContract.confirmationAddressesRequired || 1,\n        msContract.dailyLimitAmount ||\n          ethereumConfig.dailyLimitDefault.toString(10), // ethereum configs daily limit\n      ];\n      valid = this.validateMultipleAddress(web3, msContract.owners);\n    }\n\n    if (!valid) {\n      return;\n    }\n    // TODO: more security checks from observewallets and account_create\n    this.props.history.push('/accounts');\n    contract\n      .deploy({\n        data: code,\n        arguments: options.arguments,\n      })\n      .send({\n        from: dcf.MainOwnerAddress.toLowerCase(),\n        gas: 3000000,\n      })\n      .on('error', err => {\n        console.warn('error deploying contract', err);\n        this.props.displayGlobalNotification({\n          display: true,\n          type: 'error',\n          msg: err.message,\n        });\n      })\n      .on('transactionHash', transactionHash => {\n        console.log('transactionHash', transactionHash);\n        this.props.updatePendingContracts({ name: transactionHash, value: {} });\n      })\n      .on('receipt', receipt => {\n        console.log('reecipt', receipt);\n      })\n      .on('confirmation', (confirmationNumber, receipt) => {\n        receipt.confirmationNumber = confirmationNumber;\n        receipt['contract-name'] = dcf['contract-name'];\n        receipt.address = receipt.contractAddress;\n        receipt.logs = [];\n        receipt.balance = 0;\n        receipt.deployedWalletContract = true;\n        receipt.jsonInterface = JSON.stringify(jsonInterface);\n\n        console.log(receipt);\n\n        this.props.updateWalletContracts({\n          name: receipt.contractAddress,\n          value: receipt,\n        });\n\n        // web3.eth.getBalance(receipt.contractAddress, (err, res) => {\n        //   if(err) {\n        //     this.props.displayGlobalNotification({\n        //       display: true,\n        //       type: 'error',\n        //       msg: 'Error retreiving balance for the added contract',\n        //     });\n        //     return;\n        //   }\n        //   contract.balance = res;\n        //   contract['logs'] = [];\n        //   con[contract['address']] = contract;\n        //   this.props.addObservedContract(con);\n        //   this.props.displayGlobalNotification({\n        //     display: true,\n        //     type: 'success',\n        //     msg: 'Added custom contract',\n        //   });\n        // });\n      })\n      .then(newContractInstance => {\n        console.log('newContractInstance', newContractInstance); // instance with the new contract address\n      });\n  }\n\n  renderSimpleButton() {\n    const { DeployContractForm } = this.props.reducers;\n    return (\n      <React.Fragment>\n        <FormControlLabel\n          value=\"simpleChecked\"\n          control={\n            <Radio checked={DeployContractForm.simpleChecked} color=\"primary\" />\n          }\n          label=\"SINGLE OWNER ACCOUNT\"\n          name=\"accountType\"\n        />\n        <Collapse in={DeployContractForm.simpleChecked}>\n          <div className=\"indented-box\">\n            <span\n              style={{\n                verticalAlign: 'middle',\n                lineHeight: '35px',\n              }}\n            >\n              Note: If your owner account is compromised, your wallet has no\n              protection.\n            </span>\n          </div>\n        </Collapse>\n      </React.Fragment>\n    );\n  }\n\n  // renderOwnerCounter(type, multiline, counter){\n  //   return (\n  //     <TextField\n  //       select\n  //       data-name={type}\n  //       className=\"inline-form\"\n  //       name={type}\n  //       multiline={multiline}\n  //       value={counter}\n  //       onChange={e => this.handleChange(e)}\n  //     >\n  //       {[...Array(10).keys()].map(num => (\n  //         <MenuItem key={num + 1} value={num + 1}>\n  //           {num + 1}\n  //         </MenuItem>\n  //       ))}\n  //     </TextField>\n  //   )\n  // }\n\n  renderMultiSigButton() {\n    const { DeployContractForm } = this.props.reducers;\n    return (\n      <React.Fragment>\n        <FormControlLabel\n          value=\"multisigChecked\"\n          control={\n            <Radio\n              checked={DeployContractForm.multisigChecked}\n              color=\"primary\"\n            />\n          }\n          label=\"MULTISIGNATURE WALLET CONTRACT\"\n          name=\"accountType\"\n        />\n        <Collapse in={DeployContractForm.multisigChecked}>\n          <div className=\"indented-box\">\n            <p\n              style={{\n                verticalAlign: 'middle',\n                lineHeight: '35px',\n              }}\n            >\n              This is a joint account controlled by &nbsp;\n              {/* {this.renderOwnerCounter(\"multisigSigneesCount\", true, DeployContractForm.multiSigContract.ownerCount)} */}\n              <TextField\n                select\n                data-name=\"multisigSigneesCount\"\n                className=\"inline-form\"\n                name=\"multisigSigneesCount\"\n                multiline\n                value={DeployContractForm.multiSigContract.ownerCount}\n                onChange={e => this.handleChange(e)}\n              >\n                {[...Array(10).keys()].map(num => (\n                  <MenuItem key={num + 1} value={num + 1}>\n                    {num + 1}\n                  </MenuItem>\n                ))}\n              </TextField>\n              owners. You can send up to &nbsp;\n              <TextField\n                value={DeployContractForm.multiSigContract.dailyLimitAmount}\n                onChange={e => this.handleChange(e)}\n                type=\"number\"\n                className=\"inline-form\"\n                name=\"dailyLimitAmount\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              />\n              &nbsp;Ether per day.\n            </p>\n            <p\n              style={{\n                verticalAlign: 'middle',\n                lineHeight: '35px',\n              }}\n            >\n              Any transaction over that daily limit requires the confirmation of\n              &nbsp;\n              {/* {this.renderOwnerCounter(\"multisigSigneesCount\", true, DeployContractForm.multiSigContract.ownerCount)} */}\n              <TextField\n                select\n                data-name=\"multisigSigneesRequired\"\n                className=\"inline-form\"\n                name=\"multisigSigneesRequired\"\n                value={\n                  DeployContractForm.multiSigContract\n                    .confirmationAddressesRequired\n                }\n                onChange={e => this.handleChange(e)}\n              >\n                {[\n                  ...Array(\n                    DeployContractForm.multiSigContract.ownerCount\n                  ).keys(),\n                ].map(num => (\n                  <MenuItem key={num + 1} value={num + 1}>\n                    {num + 1}\n                  </MenuItem>\n                ))}\n              </TextField>\n              &nbsp; owners.\n            </p>\n            <h4>Account owners</h4>\n            {this.renderMultiSigOwners()}\n          </div>\n        </Collapse>\n      </React.Fragment>\n    );\n  }\n\n  renderImportButton() {\n    const { DeployContractForm } = this.props.reducers;\n    return (\n      <React.Fragment>\n        <FormControlLabel\n          value=\"importWalletChecked\"\n          control={\n            <Radio\n              checked={DeployContractForm.importWalletChecked}\n              color=\"primary\"\n            />\n          }\n          label=\"IMPORT WALLET\"\n          name=\"accountType\"\n        />\n        <Collapse in={DeployContractForm.importWalletChecked}>\n          <div className=\"indented-box\">\n            <br />\n            <div className=\"dapp-address-input\">\n              <input\n                type=\"text\"\n                placeholder=\"Wallet address\"\n                className=\"import\"\n                name=\"importWalletAddress\"\n                value={\n                  DeployContractForm.importWalletAddress !== ''\n                    ? DeployContractForm.importWalletAddress\n                    : ''\n                }\n                onChange={e => this.handleChange(e)}\n              />\n            </div>\n            <p className=\"invalid\" />\n          </div>\n        </Collapse>\n      </React.Fragment>\n    );\n  }\n\n  renderCreateButton() {\n    return (\n      <React.Fragment>\n        <button\n          className=\"dapp-block-button\"\n          type=\"submit\"\n          onClick={e => this.createContract(e)}\n        >\n          Create\n        </button>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    const { classes } = this.props;\n    const { DeployContractForm } = this.props.reducers;\n    const dcf = this.props.reducers.DeployContractForm;\n    return (\n      <React.Fragment>\n        <FormControl component=\"fieldset\" className={classes.formControl}>\n          <Title />\n          <input\n            type=\"text\"\n            name=\"WalletContractName\"\n            placeholder=\"Wallet contract name\"\n            onChange={e => this.handleChange(e)}\n            autoFocus\n          />\n          <SelectOwner />\n          <div className={classes.radioRoot}>\n            <FormLabel component=\"legend\">Wallet Contract Type</FormLabel>\n            <RadioGroup\n              aria-label=\"ContractToDeployRadio\"\n              name=\"ContractToDeployRadio\"\n              className={classes.group}\n              value={this.state.value}\n              onChange={e => this.handleChange(e)}\n            >\n              <FormControlLabel\n                value=\"simpleChecked\"\n                control={\n                  <Radio\n                    checked={DeployContractForm.simpleChecked}\n                    color=\"primary\"\n                  />\n                }\n                label=\"SINGLE OWNER ACCOUNT\"\n                name=\"accountType\"\n              />\n              <Collapse in={DeployContractForm.simpleChecked}>\n                <div className=\"indented-box\">\n                  <span\n                    style={{\n                      verticalAlign: 'middle',\n                      lineHeight: '35px',\n                    }}\n                  >\n                    Note: If your owner account is compromised, your wallet has\n                    no protection.\n                  </span>\n                </div>\n              </Collapse>\n              {this.renderMultiSigButton()}\n              {this.renderImportButton()}\n            </RadioGroup>\n            {this.renderCreateButton()}\n          </div>\n        </FormControl>\n      </React.Fragment>\n    );\n  }\n}\n\nNewWalletContract.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = state => {\n  return state;\n};\n\nexport default compose(\n  withStyles(styles, { name: 'NewWalletContract' }),\n  connect(\n    mapStateToProps,\n    { ...Actions }\n  )\n)(NewWalletContract);\n","import React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\n\n// views\nimport AccountView from './Account';\nimport SingleAccountView from './SingleAccountView';\nimport SingleContractView from './SingleContractView';\nimport ContractsView from './Contracts';\nimport SendContractForm from './Send';\nimport NewWalletContract from './NewWalletContract';\n\nclass ViewContainer extends Component {\n  render() {\n    return (\n      <div className=\"dapp-flex-content\">\n        <main className=\"dapp-content\">\n          <Route exact path=\"/\" component={AccountView} />\n          <Route exact path=\"/accounts\" component={AccountView} />\n          <Route path=\"/account/*\" component={SingleAccountView} />\n          <Route exact path=\"/wallet/new\" component={NewWalletContract} />\n          <Route path=\"/contract/*\" component={SingleContractView} />\n          <Route path=\"/send*\" component={SendContractForm} />\n          <Route exact path=\"/contracts\" component={ContractsView} />\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default ViewContainer;\n","import React, { Component } from 'react';\n// import { connect } from 'react-redux';\n\nclass TestInputItem extends Component {\n  renderInputType(f) {\n    return (\n      <React.Fragment>\n        <h3>{f.title}</h3>\n        <div className={f.divClass}>\n          <input\n            type={f.type}\n            name={f.name}\n            placeholder={f.placeholder}\n            className={f.className}\n            onKeyUp={e => this.props.onKeyUp(e)}\n          />\n        </div>\n      </React.Fragment>\n    );\n  }\n\n  renderTextAreaType(f) {\n    if (!f.cols) f.cols = 30;\n    if (!f.rows) f.rows = 10;\n    return (\n      <React.Fragment>\n        <h3>{f.title}</h3>\n        <div className={f.divClass}>\n          <input\n            type={f.type}\n            name={f.name}\n            placeholder={f.placeholder}\n            className={f.className}\n            onKeyUp={e => this.props.onKeyUp(e)}\n          />\n        </div>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    const field = this.props.field;\n    return (\n      <React.Fragment>\n        {field.editor === 'textarea'\n          ? this.renderTextAreaType(field)\n          : this.renderInputType(field)}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default TestInputItem;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\n// import InputItem from '../elements/InputItem.jsx';\nimport TestInputItem from '../elements/TestInputItem';\nimport * as Actions from '../../actions/actions';\nimport {\n  updateContractToWatch,\n  cancelContractToWatch,\n  closeModal,\n  addObservedContract,\n  displayGlobalNotification,\n} from '../../actions/actions.js';\nimport web3 from '../../web3';\n\nconst listInputs = [\n  {\n    title: 'Contract Address',\n    divClass: 'dapp-address-input',\n    editor: 'input',\n    type: 'text',\n    name: 'address',\n    placeholder: '0x000000',\n    className: 'contract-address',\n  },\n  {\n    title: 'Contract name',\n    divClass: 'dapp-contract-name-input',\n    editor: 'input',\n    type: 'string',\n    name: 'contract-name',\n    placeholder: 'Name this contract',\n    className: 'name',\n  },\n  {\n    title: 'JSON Interface',\n    divClass: 'dapp-json-interface-input',\n    editor: 'textarea',\n    type: 'text',\n    name: 'jsonInterface',\n    placeholder:\n      '[{type: &quot;constructor&quot;, name: &quot;MyContract&quot;, &quot;inputs&quot;:[{\"name&quot;:&quot;_param1&quot;, &quot;type&quot;:&quot;address&quot;}]}, {...}]',\n    className: 'jsonInterface',\n    cols: '30',\n    rows: '10',\n  },\n];\n\nclass WatchItem extends Component {\n  constructor(props) {\n    super(props);\n    this.handleOnKeyUp = this.handleOnKeyUp.bind(this);\n    this.cancelFunction = this.cancelFunction.bind(this);\n    this.submitFunction = this.submitFunction.bind(this);\n  }\n\n  shouldComponentUpdate(prevProps, prevState) {\n    if (this.props.display !== prevProps.display) {\n      return true;\n    }\n    return false;\n  }\n\n  handleOnKeyUp(e) {\n    // TODO:validate inputs here\n    this.props.updateContractToWatch({\n      name: e.target.getAttribute('name'),\n      value: e.target.value,\n    });\n  }\n\n  cancelFunction(e) {\n    this.props.cancelContractToWatch(); // TODO:reset data values in inputs\n    this.props.closeModal('displayWatchContract');\n  }\n\n  submitFunction(e) {\n    const contract = this.props.reducers.ContractToWatch;\n    console.log(contract);\n    if (web3) {\n      const con = {};\n      try {\n        web3.eth.getBalance(contract.address, (err, res) => {\n          if (err) console.warn(err);\n          console.log('res received', res);\n          contract.balance = res;\n          contract.logs = [];\n          contract.contractAddress = contract.address;\n          con[contract.address] = contract;\n\n          const {\n            ContractsPendingConfirmations,\n            WalletContracts,\n          } = this.props.reducers;\n          const deployedWalletContracts = Object.assign(\n            {},\n            ContractsPendingConfirmations,\n            WalletContracts\n          );\n\n          console.log('here in watch COntracts', deployedWalletContracts);\n\n          contract.deployedWalletContract = Object.keys(\n            deployedWalletContracts\n          ).includes(contract.address);\n\n          this.props.addObservedContract(con);\n          this.props.displayGlobalNotification({\n            display: true,\n            type: 'success',\n            msg: 'Added custom contract',\n          });\n        });\n      } catch (err) {\n        console.warn(err);\n        this.props.displayGlobalNotification({\n          display: true,\n          type: 'error',\n          msg: 'Error retreiving balance for the added contract',\n        });\n      }\n    }\n    this.props.closeModal('displayWatchContract');\n  }\n\n  renderInputs() {\n    return (\n      <React.Fragment>\n        <h1>Watch contract</h1>\n        {listInputs.map((field, i) => (\n          <TestInputItem\n            key={`contract-field-${i}`}\n            field={field}\n            onKeyUp={e => this.handleOnKeyUp(e)}\n          />\n        ))}\n      </React.Fragment>\n    );\n  }\n\n  renderButtons() {\n    return (\n      <div className=\"dapp-modal-buttons\">\n        <button className=\"cancel\" onClick={e => this.cancelFunction(e)}>\n          Cancel\n        </button>\n        <button\n          className=\"ok dapp-primary-button\"\n          onClick={e => this.submitFunction(e)}\n        >\n          OK\n        </button>\n      </div>\n    );\n  }\n\n  render() {\n    let divStyle;\n    if (!this.props.display) divStyle = { display: 'none' };\n    return (\n      <div className={this.props.display} style={divStyle}>\n        <section className=\"dapp-modal-container modals-add-custom-contract\">\n          {this.renderInputs()}\n          {this.renderButtons()}\n        </section>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  // return {modals: state.modals}\n  return state;\n};\n\nexport default connect(\n  mapStateToProps,\n  {\n    updateContractToWatch,\n    cancelContractToWatch,\n    closeModal,\n    addObservedContract,\n    displayGlobalNotification,\n  }\n)(WatchItem);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { tokenInterface } from '../../constants/TokenInterfaceConstant';\nimport TokenBox from '../elements/TokenBox';\nimport TestInputItem from '../elements/TestInputItem';\nimport * as Actions from '../../actions/actions';\nimport web3 from '../../web3';\n\nclass WatchToken extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = Object.assign({}, this.props, {\n      address: '',\n      name: '',\n      symbol: '',\n      decimals: '',\n      balance: '',\n    });\n\n    this.invokeContractMethod = this.invokeContractMethod.bind(this);\n    this.getTokenContractInfo = this.getTokenContractInfo.bind(this);\n    this.handleOnKeyUp = this.handleOnKeyUp.bind(this);\n    this.cancelFunction = this.cancelFunction.bind(this);\n    this.submitFunction = this.submitFunction.bind(this);\n  }\n\n  invokeContractMethod(TokenContract, variableMethodName) {\n    try {\n      TokenContract.methods[variableMethodName]()\n        .call()\n        .then(result => {\n          console.log('result', result);\n          this.setState({ [variableMethodName]: result });\n          this.props.updateTokenToWatch({\n            name: variableMethodName,\n            value: result,\n          });\n        });\n    } catch (err) {\n      console.warn('Err :', err);\n      this.props.displayGlobalNotification({\n        display: true,\n        type: 'error',\n        msg: err.message,\n      });\n    }\n  }\n\n  getTokenContractInfo(address) {\n    const TokenContract = new web3.eth.Contract(tokenInterface);\n    TokenContract.options.address = address;\n    this.setState({ address });\n    this.props.updateTokenToWatch({\n      name: 'address',\n      value: address,\n    });\n    this.invokeContractMethod(TokenContract, 'symbol');\n    this.invokeContractMethod(TokenContract, 'name');\n    this.invokeContractMethod(TokenContract, 'decimals');\n    this.invokeContractMethod(TokenContract, 'totalSupply');\n  }\n\n  handleOnKeyUp(e) {\n    // TODO: this is getting called twice when using copy/paste with keyboard shortcuts\n\n    // TODO:validate inputs here\n\n    const name = e.target.getAttribute('name');\n    const value = e.target.value;\n\n    // TODO: checks coin symbol against MEW list?\n    // var l = e.currentTarget.value.length;\n    // if (!tokenAddress && l > 2 && l < 6) {\n    //   e.currentTarget.value += '.thetoken.eth';\n    //   e.currentTarget.setSelectionRange(l, l + 13);\n    // }\n\n    // if (\n    //   !tokenAddress ||\n    //   (template.data &&\n    //     template.data.address &&\n    //     template.data.address == tokenAddress)\n    // )\n    //   return;\n\n    if (name === 'address' && value.length === 42) {\n      const isAddress = web3.utils.isAddress(value);\n      const toCheckSum = web3.utils.toChecksumAddress(value);\n      const isCheckSummed = web3.utils.checkAddressChecksum(toCheckSum);\n      if (isAddress && isCheckSummed) {\n        this.getTokenContractInfo(value);\n        return;\n      }\n    }\n\n    this.setState({ [name]: value });\n    this.props.updateTokenToWatch({\n      name,\n      value: e.target.value,\n    });\n  }\n\n  cancelFunction(e) {\n    this.props.cancelTokenToWatch(); // TODO:reset data values in inputs\n    this.props.closeModal('displayWatchToken');\n  }\n\n  submitFunction(e) {\n    const token = this.props.reducers.TokenToWatch;\n    const address = token.address;\n    if (web3) {\n      this.props.addObservedToken({\n        address: token.address,\n        value: token,\n      });\n      this.props.displayGlobalNotification({\n        display: true,\n        type: 'success',\n        msg: 'Added custom token',\n      });\n    } else {\n      // TODO:trigger global notification here\n    }\n    this.props.closeModal('displayWatchToken');\n  }\n\n  render() {\n    let divStyle;\n    if (!this.props.display) divStyle = { display: 'none' };\n    const GeoPattern = require('geopattern');\n    const pattern = GeoPattern.generate('0x000', { color: '#CCC6C6' });\n    const iconStyle = { backgroundImage: pattern.toDataUrl() };\n    const TokenToWatch = this.props.reducers.TokenToWatch;\n\n    return (\n      <div className={this.props.display} style={divStyle}>\n        <section className=\"dapp-modal-container modals-add-token\">\n          <h1>Add Token</h1>\n          <h3>Token Contract Address</h3>\n          <div className=\"dapp-address-input\">\n            <input\n              type=\"text\"\n              name=\"address\"\n              placeholder=\"0x000000\"\n              className=\"token-address\"\n              onChange={e => this.handleOnKeyUp(e)}\n              value={this.state.address}\n            />\n          </div>\n          <h3>Token name</h3>\n          <div className=\"dapp-token-name-input\">\n            <input\n              type=\"string\"\n              name=\"name\"\n              placeholder=\"Token name\"\n              className=\"name\"\n              onChange={e => this.handleOnKeyUp(e)}\n              value={this.state.name}\n            />\n          </div>\n          <h3>Token symbol</h3>\n          <div className=\"dapp-token-symbol-input\">\n            <input\n              type=\"string\"\n              name=\"symbol\"\n              placeholder=\"Token symbol\"\n              className=\"symbol\"\n              onChange={e => this.handleOnKeyUp(e)}\n              value={this.state.symbol}\n            />\n          </div>\n          <h3>Decimals places of smallest unit</h3>\n          <input\n            type=\"number\"\n            min=\"0\"\n            step=\"1\"\n            name=\"decimals\"\n            placeholder=\"2\"\n            className=\"decimals\"\n            onChange={e => this.handleOnKeyUp(e)}\n            value={this.state.decimals}\n          />\n          <br />\n          <h3>Preview</h3>\n          <TokenBox key={TokenToWatch.address} token={TokenToWatch} />\n          <div className=\"dapp-modal-buttons\">\n            <button className=\"cancel\" onClick={() => this.cancelFunction()}>\n              Cancel\n            </button>\n            <button\n              className=\"ok dapp-primary-button\"\n              onClick={() => this.submitFunction()}\n            >\n              OK\n            </button>\n          </div>\n        </section>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return state;\n};\n\nexport default connect(\n  mapStateToProps,\n  { ...Actions }\n)(WatchToken);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { closeModal, deleteToken } from '../../actions/actions';\n\nconst Name = props => {\n  return (\n    <p>\n      Do you want to remove the token &nbps;\n      <strong>{props.name}</strong> from your list?\n    </p>\n  );\n};\n\nexport class DeleteToken extends Component {\n  constructor(props) {\n    super(props);\n    this.cancelFunction = this.cancelFunction.bind(this);\n    this.deleteToken = this.deleteToken.bind(this);\n  }\n\n  shouldComponentUpdate(prevProps, prevState) {\n    if (this.props.display !== prevProps.display) {\n      return true;\n    }\n    return false;\n  }\n\n  cancelFunction(e) {\n    this.props.closeModal('displayDeleteToken');\n  }\n\n  deleteToken(e) {\n    this.props.deleteToken(this.props.token.address);\n    this.props.closeModal('displayDeleteToken');\n  }\n\n  renderButtons() {\n    return (\n      <div className=\"dapp-modal-buttons\">\n        <button className=\"cancel\" onClick={e => this.cancelFunction(e)}>\n          Cancel\n        </button>\n        <button\n          className=\"ok dapp-primary-button\"\n          onClick={e => this.deleteToken(e)}\n        >\n          OK\n        </button>\n      </div>\n    );\n  }\n\n  render() {\n    let divStyle;\n    if (!this.props.display) divStyle = { display: 'none' };\n    return (\n      <div className={this.props.display} style={divStyle}>\n        <section className=\"dapp-modal-container\" style={divStyle}>\n          <Name name={this.props.token.name} />\n          {this.renderButtons()}\n        </section>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return state;\n};\n\nexport default connect(\n  mapStateToProps,\n  { closeModal, deleteToken }\n)(DeleteToken);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { withRouter } from 'react-router';\n\nimport { Identicon } from 'ethereum-react-components';\nimport SecurityIcon from '../elements/SecurityIcon';\nimport * as Actions from '../../actions/actions';\n\nimport { combineWallets, sortByBalance } from '../../utils/helperFunctions';\n\nimport { tokenInterface } from '../../constants/TokenInterfaceConstant';\nimport web3 from '../../web3';\n\nexport const Title = props => {\n  let value;\n  if (props.tx.value) value = web3.utils.fromWei(props.tx.value, 'ETHER');\n  return (\n    <h1>\n      Send\n      <br />\n      {value} ETHER\n    </h1>\n  );\n};\n\nexport const TransactionName = info => {\n  return (\n    <p>\n      <span className=\"address dapp-shorten-text not-ens-name\">\n        <Identicon\n          classes=\"dapp-identicon dapp-small\"\n          title\n          size=\"small\"\n          address={info.from}\n        />\n        {info.from}\n      </span>\n    </p>\n  );\n};\n\nexport const GasInfo = info => {\n  return (\n    <React.Fragment>\n      <small>+ Estimated fee</small>\n      {info.estimatedGas} Wei\n      <br />\n      <small className=\"gas-price\">\n        Gas price {info.gasPrice} gWei\n        <br />\n        Estimated required gas {info.estimatedGas}\n        <br />\n      </small>\n    </React.Fragment>\n  );\n};\n\nexport class SendTransactionModal extends Component {\n  constructor(props) {\n    super(props);\n\n    // this.state = {\n    //   userEnteredGas: '',\n    // };\n\n    this.cancelFunction = this.cancelFunction.bind(this);\n    this.submitFunction = this.submitFunction.bind(this);\n    this.sendTransaction = this.sendTransaction.bind(this);\n    this.sendEtherTransaction = this.sendEtherTransaction.bind(this);\n    this.sendTokenTransaction = this.sendTokenTransaction.bind(this);\n    this.updateTokenBalances = this.updateTokenBalances.bind(this);\n    this.returnAccountName = this.returnAccountName.bind(this);\n  }\n\n  shouldComponentUpdate(prevProps, prevState) {\n    if (this.props.display !== prevProps.display) {\n      console.log('this.props.display', this.props.display);\n      console.log('prevProps.display', prevProps.display);\n      return true;\n    }\n    if (this.props.reducers.TransactionToSend !== prevProps.TransactionToSend) {\n      // console.log(\n      //   'this.props.reducers.TransactionToSend',\n      //   this.props.reducers.TransactionToSend\n      // );\n      // console.log(\n      //   'prevProps.reducers.TransactionToSend',\n      //   prevProps.reducers.TransactionToSend\n      // );\n      return true;\n    }\n    return false;\n  }\n\n  componentWillUnmount() {\n    console.log('in will unmount');\n    this.props.clearTransactionToSend();\n  }\n\n  cancelFunction(e) {\n    this.props.closeModal('displaySendTransaction');\n  }\n\n  sendEtherTransaction(e) {\n    const tx = this.props.reducers.TransactionToSend;\n\n    const date = new Date();\n\n    const BN = web3.utils.BN;\n    const amount = new BN(tx.value);\n    // let gasPrice = new BN(tx.gasPrice.toString());\n    const gasPrice = tx.gasPrice;\n    const maxGas = new BN('21000');\n\n    const { Wallets, WalletContracts } = this.props.reducers;\n    console.log(Wallets);\n    console.log(WalletContracts);\n    const combinedWallets = Object.keys(\n      combineWallets(Wallets, WalletContracts)\n    ).map(address => address);\n\n    console.log(combinedWallets);\n\n    let transactionType;\n    if (combinedWallets.includes(tx.to) && combinedWallets.includes(tx.from)) {\n      transactionType = 'Transfer between accounts';\n    }\n\n    web3.eth\n      .sendTransaction({\n        from: tx.from,\n        to: tx.to,\n        value: amount,\n        gasPrice,\n      })\n      .on('transactionHash', transactionHash => {\n        this.props.addTransaction({\n          hash: transactionHash,\n          value: {\n            ...tx,\n            dateSent: date,\n            confirmationNumber: 'Pending',\n            transactionHash,\n            transactionType,\n          },\n        });\n        this.props.displayGlobalNotification({\n          display: true,\n          type: 'warning',\n          msg: 'Your transaction has been submitted and is currently pending',\n        });\n        // this.props.clearTransactionToSend();\n        this.props.history.push('/accounts');\n      })\n      .on('receipt', receipt => {})\n      .on('confirmation', (confirmationNumber, receipt) => {\n        const cn = confirmationNumber;\n        let msg;\n        if (cn === 0 || cn === 12) {\n          cn === 0\n            ? (msg =\n                'Success! Your transaction has been confirmed. Please allow for 12 confirmations')\n            : (msg = 'Your transaction has been confirmed 12 times!');\n          this.props.displayGlobalNotification({\n            display: true,\n            type: 'success',\n            msg,\n          });\n        }\n      })\n      .on('error', err => {\n        this.props.displayGlobalNotification({\n          display: true,\n          type: 'error',\n          msg: err.message,\n          duration: 5,\n        });\n        console.warn(err);\n      });\n  }\n\n  updateTokenBalances(TokenContract) {\n    console.log('yes inside updateTokenBalances');\n\n    // Or should I just subscribe to Transfer Event?!\n\n    // TODO: need to use data field with the following?\n    // 0xa9059cbb00000000000000000000000065b42142606a9d46d05ea5205ad4b610a9130e92000000000000000000000000000000000000000000000001158e460913d00000\n\n    const addresses = this.props.reducers.Wallets;\n    const walletContracts = this.props.reducers.walletContracts;\n    const wallets = Object.keys(Object.assign({}, addresses, walletContracts));\n\n    // TokenContract.methods['balanceOf'](tx.to)\n    // TokenContract.methods['balanceOf'](tx.from)\n  }\n\n  sendTokenTransaction(e) {\n    const tx = this.props.reducers.TransactionToSend;\n    const token = tx.tokenToSend;\n\n    const TokenContract = new web3.eth.Contract(tokenInterface, {\n      from: tx.from,\n    });\n\n    TokenContract.options.address = token.address;\n\n    const transactionType = 'Token sent';\n\n    // TODO: update balances on successful send\n\n    try {\n      // TODO need this?\n\n      // .encodeABI();\n\n      TokenContract.methods\n        .transfer(tx.to, tx.tokenAmount)\n        .call()\n        .then(res => {\n          // yup returns nothing\n\n          console.log('Res', res);\n\n          // TODO: add to transaction list\n          // name the category is {token name} - Token transfer\n\n          this.updateTokenBalances(TokenContract);\n          this.props.history.push('/accounts');\n        });\n    } catch (err) {\n      console.warn(err);\n      this.props.displayGlobalNotification({\n        display: true,\n        type: 'error',\n        msg: 'There was an error processing your token transaction',\n      });\n    }\n  }\n\n  sendTransaction(e) {\n    // TODO: reset data values in inputs\n    e.preventDefault();\n    // let date = new Date();\n    const tx = this.props.reducers.TransactionToSend;\n    !tx.sendToken ? this.sendEtherTransaction(e) : this.sendTokenTransaction(e);\n    // console.log(tx);\n  }\n\n  submitFunction(e) {\n    this.sendTransaction(e);\n    this.props.closeModal('displaySendTransaction');\n  }\n\n  returnAccountName(address) {\n    // let transaction = this.props.reducers.TransactionToSend;\n    const wallets = this.props.reducers.Wallets;\n    const walletArray = Object.keys(wallets).map(key => key);\n    const walletContracts = this.props.reducers.WalletContracts;\n    const walletContractArray = Object.keys(walletContracts).map(key => key);\n    const observedContracts = this.props.reducers.ObservedContracts;\n    const observedContractsArray = Object.keys(observedContracts).map(\n      key => key\n    );\n    const observedTokens = this.props.reducers.ObservedTokens;\n    const observedTokensArray = Object.keys(observedTokens).map(key => key);\n    let name;\n    if (walletArray.includes(address)) {\n      name = wallets[address].name;\n      // name || `Account ${wallets[address].number}`;\n      return name;\n    }\n    if (walletContractArray.includes(address)) {\n      return walletContracts[address]['contract-name'];\n    }\n    if (observedContractsArray.includes(address)) {\n      return observedContracts[address]['contract-name'];\n    }\n    if (observedTokensArray.includes(address)) {\n      return observedTokens[address].name;\n    }\n    return name;\n  }\n\n  render() {\n    let divStyle;\n    if (!this.props.display) divStyle = { display: 'none' };\n    const transaction = this.props.reducers.TransactionToSend;\n    const fromName = this.returnAccountName(transaction.from);\n    const toName = this.returnAccountName(transaction.to);\n\n    return (\n      <div className={this.props.display} style={divStyle}>\n        <section className=\"dapp-modal-container send-transaction-info\">\n          <Title tx={transaction} />\n          {/* <TransactionName info={transaction} /> */}\n          <p>\n            <span className=\"address dapp-shorten-text not-ens-name\">\n              {/*\n              <SecurityIcon\n                type=\"accountRoute\"\n                classes={'dapp-identicon dapp-tiny'}\n                hash={transaction.from || ''}\n              />\n              */}\n              <Identicon\n                classes=\"dapp-identicon dapp-tiny\"\n                title\n                size=\"tiny\"\n                address={transaction.from}\n              />\n              {/* {transaction.from} */}\n              {fromName || transaction.from}\n            </span>\n          </p>\n          <i className=\"icon-arrow-down\" />\n          {/* <TransactionName info={transaction} /> */}\n          <p>\n            <span className=\"address dapp-shorten-text not-ens-name\">\n              {/* }\n              <SecurityIcon\n                type=\"transactionHref\"\n                classes={'dapp-identicon dapp-tiny'}\n                hash={transaction.to || ''}\n              />\n              */}\n              <Identicon\n                classes=\"dapp-identicon dapp-tiny\"\n                title\n                size=\"tiny\"\n                address={transaction.to}\n              />\n              {toName || transaction.to}\n            </span>\n          </p>\n          <hr />\n          <p className=\"tx-info\">\n            <small>+ Estimated fee</small>\n            {transaction.estimatedGas} Wei\n            <br />\n            <small className=\"gas-price\">\n              Gas price {transaction.gasPrice} gWei\n              <br />\n              Estimated required gas {transaction.estimatedGas}\n              <br />\n            </small>\n            {/* <GasInfo/> */}\n            <small>\n              Provide gas:\n              <input type=\"number\" min=\"21000\" className=\"gas dapp-tiny\" />\n            </small>\n          </p>\n          <div className=\"dapp-modal-buttons\">\n            <button className=\"cancel\" onClick={() => this.cancelFunction()}>\n              Cancel\n            </button>\n            <button\n              className=\"ok dapp-primary-button\"\n              onClick={e => this.submitFunction(e)}\n            >\n              OK\n            </button>\n          </div>\n        </section>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return state;\n};\n\nexport default connect(\n  mapStateToProps,\n  { ...Actions }\n)(withRouter(SendTransactionModal));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { EthAddress, Identicon } from 'ethereum-react-components';\nimport * as Utils from '../../utils/utils';\nimport * as Actions from '../../actions/actions';\nimport web3 from '../../web3';\n\nexport const Header = props => {\n  const nw = props.network;\n  const hash = props.txHash;\n  return (\n    <h1>\n      Transaction\n      <a\n        href={`http://${nw} .etherscan.io/tx/${hash}`}\n        target=\"_blank\"\n        style={{ fontSize: '0.4em' }}\n        rel=\"noopener noreferrer\"\n      >\n        {hash}\n      </a>\n    </h1>\n  );\n};\n\nexport const DateRow = props => {\n  const today = new Date();\n  const txDate = new Date(props.tx.dateSent);\n  const timeDiff = Math.abs(txDate.getTime() - today.getTime());\n  const diffDays = Math.ceil(timeDiff / (1000 * 3600 * 24));\n  return (\n    <p>\n      {Utils.getMonthName(props.tx.dateSent)}\n      {Utils.getDate(props.tx.dateSent)}\n      <br />\n      <small>{diffDays} day(s) ago</small>\n    </p>\n  );\n};\n\nexport const Fee = props => {\n  // TODO: from wei or from gWei\n  const fee = web3.utils.fromWei(props.gasUsed.toString(), 'ETHER');\n  return (\n    <tr>\n      <td>Fee paid</td>\n      <td>{fee} &nbsp; ETHER</td>\n    </tr>\n  );\n};\n\nexport const GasStat = props => {\n  // TODO: from wei or from gWei\n  let displayValue;\n  if (props.title === 'Fee paid') {\n    displayValue = web3.utils.fromWei(props.gasAmount.toString(), 'ETHER');\n  } else if (props.title === 'Gas used') {\n    displayValue = props.gasAmount;\n  } else if (props.title === 'Gas price') {\n    displayValue = props.gasAmount;\n  }\n  return (\n    <tr>\n      <td>{props.title}</td>\n      <td>\n        {displayValue} &nbsp; {props.text}\n      </td>\n    </tr>\n  );\n};\n\nexport const BlockInfo = props => {\n  return (\n    <tr>\n      <td>Block</td>\n      <td>\n        {props.blockNumber}\n        <br />\n        <EthAddress short classes=\"\" address={props.blockHash} />\n      </td>\n    </tr>\n  );\n};\n\nexport class TransactionInfo extends Component {\n  constructor(props) {\n    super(props);\n    this.updateToTransaction = this.updateToTransaction.bind(this);\n    this.handleRoute = this.handleRoute.bind(this);\n  }\n\n  shouldComponentUpdate(prevProps, prevState) {\n    if (\n      this.props.transaction !== prevProps.transaction ||\n      this.props.display !== prevProps.display\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  handleClickOutside(evt) {\n    if (!this.props.display) return;\n    this.props.closeModal('displayTransaction');\n  }\n\n  handleRoute(e) {\n    this.updateToTransaction(e);\n    this.closeModal(e);\n  }\n\n  closeModal(e) {\n    e.preventDefault();\n    if (e.target.getAttribute('id') === 'viewTransaction') {\n      this.props.closeModal('displayTransaction');\n    }\n  }\n\n  updateToTransaction(e) {\n    e.stopPropagation();\n    console.warn('todo: moved from security icon and need to pudate');\n    // this.props.updateTransactionToSend({\n    //   name: 'to',\n    //   value: props.hash,\n    // });\n  }\n\n  renderSentAmount() {\n    const tx = this.props.transaction;\n    const amount = web3.utils.fromWei(tx.value.toString(), 'ETHER');\n    return (\n      <tr>\n        <td>Amount</td>\n        <td>{amount} &nbsp; ETHER</td>\n      </tr>\n    );\n  }\n\n  renderAddress(tx, direction) {\n    // TODO: conditional update transaction inside handleRoute\n    return (\n      <tr>\n        <td>{direction}</td>\n        <td>\n          <span className=\"address dapp-shorten-text not-ens-name\">\n            <Identicon\n              classes=\"dapp-identicon dapp-tiny\"\n              title\n              size=\"tiny\"\n              address={tx[direction.toLowerCase()]}\n            />\n            <Link\n              to={{ pathname: `/send-from/${tx[direction.toLowerCase()]}` }}\n              title={tx[direction.toLowerCase()]}\n              onClick={this.handleRoute}\n            >\n              {tx[direction.toLowerCase()]}\n            </Link>\n          </span>\n        </td>\n      </tr>\n    );\n  }\n\n  render() {\n    // TODO: gas paid versus fee\n\n    let divStyle;\n    if (!this.props.display) divStyle = { display: 'none' };\n    const tx = this.props.transaction;\n    console.log(this.props);\n    console.log(this.props.transaction);\n\n    return (\n      <div\n        className={this.props.display}\n        style={divStyle}\n        onClick={e => this.closeModal(e)}\n        id=\"viewTransaction\"\n      >\n        <section className=\"dapp-modal-container transaction-info\">\n          <Header\n            network={this.props.reducers.network}\n            txHash={tx.transactionHash}\n          />\n          <DateRow tx={tx} />\n          <table className=\"dapp-zebra\">\n            <tbody>\n              {this.renderSentAmount()}\n              {this.renderAddress(tx, 'From')}\n              {this.renderAddress(tx, 'To')}\n              <GasStat title=\"Fee paid\" text=\"ETHER\" gasAmount={tx.gasUsed} />\n              <GasStat title=\"Gas used\" text=\"\" gasAmount={tx.gasUsed} />\n              <GasStat\n                title=\"Gas price\"\n                text=\"ETHER PER MILLION GAS\"\n                gasAmount={tx.gasPrice}\n              />\n              <BlockInfo\n                blockNumber={tx.blockNumber}\n                blockHash={tx.blockHash}\n              />\n            </tbody>\n          </table>\n        </section>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return state;\n};\n\nexport default connect(\n  mapStateToProps,\n  { ...Actions }\n)(TransactionInfo);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as Actions from '../../actions/actions';\n\nclass QRCode extends Component {\n  shouldComponentUpdate(prevProps, prevState) {\n    if (\n      this.props.display !== prevProps.display ||\n      this.props.hash !== prevProps.hash\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  closeModal(e) {\n    e.preventDefault();\n    if (e.target.getAttribute('id') === 'qrCode') {\n      this.props.closeModal('displayQRCode');\n    }\n  }\n\n  render() {\n    const QRCode = require('qrcode.react');\n    let divStyle;\n    if (!this.props.display) divStyle = { display: 'none' };\n    return (\n      <div\n        className={this.props.display}\n        style={divStyle}\n        onClick={e => this.closeModal(e)}\n        id=\"qrCode\"\n      >\n        <section className=\"dapp-modal-container\">\n          <p />\n          {/* <p> */}\n          <div id=\"qrcode\">\n            <QRCode value={this.props.hash} />\n          </div>\n          {/* </p> */}\n          <p />\n          <p> Point a compatible mobile app to this code </p>\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  { ...Actions }\n)(QRCode);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Identicon } from 'ethereum-react-components';\nimport * as Actions from '../../actions/actions';\nimport * as Utils from '../../utils/utils';\n\nexport const EventName = event => {\n  return (\n    <tr>\n      <td>Event name</td>\n      <td>{event.event}</td>\n    </tr>\n  );\n};\n\nexport const Outputs = event => {\n  return (\n    <tr>\n      <td>Return Values</td>\n      <td style={{ wordBreak: 'break-word' }}>\n        from: <strong>{event.returnValues.from}</strong>\n        <br />\n        to: <strong>{event.returnValues.to}</strong>\n        <br />\n        tokenId: <strong>{event.returnValues.tokenId}</strong>\n        <br />\n      </td>\n    </tr>\n  );\n};\n\nexport const Origin = event => {\n  return (\n    <tr>\n      <td>Origin Contract</td>\n      <td>\n        <Identicon\n          classes=\"dapp-identicon dapp-tiny\"\n          title\n          size=\"tiny\"\n          address={event.originalContractAddress}\n        />\n        {event.originalContractName}\n      </td>\n    </tr>\n  );\n};\n\nexport class EventInfo extends Component {\n  constructor() {\n    super();\n    this.closeModal = this.closeModal.bind(this);\n  }\n\n  shouldComponentUpdate(prevProps, prevState) {\n    if (\n      this.props.event !== prevProps.event ||\n      this.props.display !== prevProps.display\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  closeModal(e) {\n    e.preventDefault();\n    if (e.target.getAttribute('id') === 'viewEventInfo') {\n      this.props.closeModal('displayEventInfo');\n    }\n  }\n\n  render() {\n    let divStyle;\n    if (!this.props.display) divStyle = { display: 'none' };\n    const event = this.props.event;\n    console.log(event);\n    return (\n      <div\n        className={this.props.display}\n        style={divStyle}\n        onClick={e => this.closeModal(e)}\n        id=\"viewEventInfo\"\n      >\n        <section className=\"dapp-modal-container transaction-info\">\n          <h1>Event</h1>\n          <p>\n            {Utils.getFullTime(event.timestamp)}\n            <br />\n            <small>{Utils.timeFromNow(event.timestamp)}</small>\n          </p>\n          <table className=\"dapp-zebra\">\n            <tbody>\n              <EventName event={event} />\n              <Outputs event={event} />\n              <Origin event={event} />\n              {/* }\n              <tr>\n                <td>Event name</td>\n                <td>{event.event}</td>\n              </tr>\n              <tr>\n                <td>Return Values</td>\n                <td style={{ wordBreak: 'break-word' }}>\n                  from: <strong>{event.returnValues.from}</strong>\n                  <br />\n                  to: <strong>{event.returnValues.to}</strong>\n                  <br />\n                  tokenId: <strong>{event.returnValues.tokenId}</strong>\n                  <br />\n                </td>\n              </tr>\n              <tr>\n                <td>Origin Contract</td>\n                <td>\n                  <Identicon size=\"tiny\" address={event.originalContractAddress} />\n                  {event.originalContractName}\n                </td>\n              </tr>\n              <tr>\n                <td>Log index</td>\n                <td>{event.logIndex}</td>\n              </tr>\n              <tr>\n                <td>Transaction index</td>\n                <td>{event.transactionIndex}</td>\n              </tr>\n              <tr>\n                <td>Transaction Hash</td>\n                <td>\n                  <a\n                    href={'http://etherscan.io/tx/' + event.transactionHash}\n                    target=\"_blank\"\n                  >\n                    {event.transactionHash}\n                  </a>\n                </td>\n              </tr>\n              <tr>\n                <td>Block</td>\n                <td>\n                  <a\n                    href={'http://etherscan.io/block/' + event.blockHash}\n                    title={event.blockHash}\n                    target=\"_blank\"\n                    className=\"dapp-shorten-text\"\n                  >\n                    {event.blockNumber}\n                    <br />\n                    {event.blockHash}\n                  </a>\n                </td>\n              </tr>\n            */}\n            </tbody>\n          </table>\n        </section>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return state;\n};\n\nexport default connect(\n  mapStateToProps,\n  { ...Actions }\n)(EventInfo);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as Actions from '../../actions/actions';\n\nclass JSONInterface extends Component {\n  shouldComponentUpdate(prevProps, prevState) {\n    if (\n      this.props.display !== prevProps.display ||\n      this.props.JSONInterface !== prevProps.JSONInterface\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  closeModal(e) {\n    e.preventDefault();\n    if (e.target.getAttribute('id') === 'JSONInterface') {\n      this.props.closeModal('displayJSONInterface');\n    }\n  }\n\n  render() {\n    let divStyle;\n    if (!this.props.display) divStyle = { display: 'none' };\n    return (\n      <div\n        className={this.props.display}\n        style={divStyle}\n        onClick={e => this.closeModal(e)}\n        id=\"JSONInterface\"\n      >\n        <section className=\"dapp-modal-container\">\n          <h1>Contract JSON Interface</h1>\n          <textarea\n            readOnly\n            name=\"jsonInterface\"\n            cols=\"40\"\n            rows=\"10\"\n            value={this.props.JSONInterface}\n          />\n          <p>\n            If you want to have someone else execute this contract, send this\n            information along with the contract's address.\n          </p>\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  { ...Actions }\n)(JSONInterface);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport cn from 'classnames';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n// actions\n// import * as Actions from '../../actions/actions';\nimport { displayGlobalNotification } from '../../actions/actions';\n// Modals\n// import NoConnection from './NoConnection';\nimport WatchContract from './WatchContract';\nimport WatchToken from './WatchToken';\nimport DeleteToken from './DeleteToken';\nimport SendTransaction from './SendTransaction';\nimport TransactionInfo from './TransactionInfo';\nimport QRCode from './QRCode';\nimport EventInfo from './EventInfo';\nimport JSONInterface from './JSONInterface';\n\nexport class ModalContainer extends Component {\n  componentDidMount() {\n    window.addEventListener('blur', e =>\n      document.body.classList.add('app-blur')\n    );\n    window.addEventListener('focus', e =>\n      document.body.classList.remove('app-blur')\n    );\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (\n      this.props.globalNotification !== prevProps.globalNotification.display &&\n      this.props.globalNotification.display === true\n    ) {\n      const notification = this.props.globalNotification;\n      const toastConfig = {\n        position: 'bottom-right',\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n      };\n      switch (notification.type) {\n        case 'error':\n          toast.error(notification.msg, toastConfig);\n          break;\n        case 'warning':\n          toast.warning(notification.msg, toastConfig);\n          break;\n        case 'success':\n          toast.success(notification.msg, toastConfig);\n          break;\n        case 'info':\n          toast.info(notification.msg, toastConfig);\n          break;\n        case 'default':\n          toast(notification.msg, toastConfig);\n          break;\n        default:\n          toast('a notification type was not set', toastConfig);\n          break;\n      }\n      this.props.displayGlobalNotification({ display: false });\n    }\n\n    Object.values(this.props.modals).includes(true)\n      ? document.body.classList.add('disable-scroll', 'blur', 'app-blur')\n      : document.body.classList.remove('disable-scroll', 'blur', 'app-blur');\n  }\n\n  render() {\n    const modals = this.props.modals;\n\n    const watchContract = cn({\n      'dapp-modal-overlay': modals.displayWatchContract || false,\n    });\n    const watchToken = cn({\n      'dapp-modal-overlay': modals.displayWatchToken || false,\n    });\n    const deleteToken = cn({\n      'dapp-modal-overlay': modals.displayDeleteToken || false,\n    });\n\n    const viewTransaction = cn({\n      'dapp-modal-overlay': modals.displayTransaction || false,\n    });\n\n    const JsonInterface = cn({\n      'dapp-modal-overlay': modals.displayJSONInterface || false,\n    });\n    const qrCode = cn({\n      'dapp-modal-overlay': modals.displayQRCode || false,\n    });\n\n    const sendTransaction = cn({\n      'dapp-modal-overlay': modals.displaySendTransaction || false,\n    });\n\n    const viewEventInfo = cn({\n      'dapp-modal-overlay': modals.displayEventInfo || false,\n    });\n\n    const txToSend = this.props.TransactionToSend;\n\n    return (\n      <React.Fragment>\n        <ToastContainer\n          position=\"bottom-right\"\n          autoClose={5000}\n          hideProgressBar={false}\n          newestOnTop={false}\n          closeOnClick\n          rtl={false}\n          pauseOnVisibilityChange\n          draggable\n          pauseOnHover\n        />\n        {/* <NoConnection connection={this.props.web3} /> */}\n        <WatchToken display={watchToken} />\n        <WatchContract display={watchContract} />\n        {this.props.TokenToDelete ? (\n          <DeleteToken token={this.props.TokenToDelete} display={deleteToken} />\n        ) : null}\n        {this.props.SelectedTransaction ? (\n          <TransactionInfo\n            display={viewTransaction}\n            transaction={this.props.SelectedTransaction}\n          />\n        ) : null}\n        {this.props.SelectedEvent ? (\n          <EventInfo display={viewEventInfo} event={this.props.SelectedEvent} />\n        ) : null}\n        {/* {Object.keys(txToSend).length && txToSend.constructor === Object ? ( */}\n        {txToSend.value ? <SendTransaction display={sendTransaction} /> : null}\n        {/* }\n        {this.props.TransactionToSend ? (\n          <SendTransaction display={sendTransaction} />\n        ) : null}\n      */}\n        {this.props.qrCode ? (\n          <QRCode hash={this.props.qrCode} display={qrCode} />\n        ) : null}\n        {this.props.JSONInterface ? (\n          <JSONInterface\n            JSONInterface={this.props.JSONInterface}\n            display={JsonInterface}\n          />\n        ) : null}\n      </React.Fragment>\n    );\n  }\n}\n\n// const mapStateToProps = state => {\n//   return state;\n// };\n\nconst mapStateToProps = state => ({\n  // return state;\n  TransactionToSend: state.reducers.TransactionToSend,\n  TokenToDelete: state.reducers.TokenToDelete,\n  SelectedTransaction: state.reducers.SelectedTransaction,\n  JSONInterface: state.reducers.JSONInterface,\n  globalNotification: state.reducers.globalNotification,\n  modals: state.reducers.modals,\n});\n\nexport default connect(\n  mapStateToProps,\n  // { ...Actions }\n  { displayGlobalNotification }\n)(ModalContainer);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\n\nimport { Link } from 'react-router-dom';\nimport '../stylesheets/navbar.css';\n\nimport Tooltip from '@material-ui/core/Tooltip';\nimport SettingsSharp from '@material-ui/icons/SettingsSharp';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport NumberFormat from 'react-number-format';\nimport { displayPriceFormatter } from '../utils/utils';\n\nimport { NavFields } from '../constants/FieldConstants';\nimport SU from './elements/SelectableUnit';\n\nconst HeaderField = field => {\n  return (\n    <li className={field.liClass}>\n      <Link to={field.href}>\n        <i className={field.icon} />\n        <span>{field.displayText}</span>\n      </Link>\n    </li>\n  );\n};\n\nexport class NavBar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = this.props;\n    this.handleScroll = this.handleScroll.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({\n      small: false,\n      sticky: false,\n      time: 'Waiting for blocks...',\n    });\n    this.setState({ displaySU: false });\n    window.addEventListener('scroll', this.handleScroll);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (typeof prevProps.reducers.blockHeader.number === undefined) return;\n    if (\n      prevProps.reducers.blockHeader.number !==\n      this.props.reducers.blockHeader.number\n    ) {\n      clearInterval(this.interval);\n      let time = 0;\n      this.interval = setInterval(() => {\n        time += 1;\n        let text = 's since last block';\n        if (time < 3600 > 59) {\n          time = Math.floor(time / 60);\n          text = ' minutes since last block';\n        }\n        if (time > 3599) {\n          time = Math.floor(time / 3600);\n          text = ' hours since last block';\n        }\n        this.setState({ time: time + text });\n      }, 1000);\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('scroll', this.handleScroll);\n    clearInterval(this.interval);\n  }\n\n  handleScroll() {\n    const scrollPosition = window.scrollY;\n    if (scrollPosition > 150) {\n      this.setState({ small: true, sticky: true });\n    } else if (scrollPosition > 48) {\n      this.setState({ small: true, sticky: false });\n    } else {\n      this.setState({ small: false, sticky: false });\n    }\n  }\n\n  renderHeaderField(field) {\n    return (\n      <li className={field.liClass}>\n        <Link to={field.href}>\n          <i className={field.icon} />\n          <span>{field.displayText}</span>\n        </Link>\n      </li>\n    );\n  }\n\n  toggleSU() {\n    this.state.displaySU\n      ? this.setState({ displaySU: false })\n      : this.setState({ displaySU: true });\n  }\n\n  redirectToSettings(e) {\n    this.props.history.push('/');\n  }\n\n  renderBalanceHeader() {\n    return (\n      <li className=\"balance-nav-li wallet-balance\">\n        <h3>Balance</h3>\n        <span className=\"account-balance\">\n          <NumberFormat\n            value={displayPriceFormatter(\n              this.props,\n              this.props.reducers.totalBalance\n            )}\n            displayType=\"text\"\n            thousandSeparator\n          />\n          &nbsp;\n          <span className=\"inline-form\" name=\"unit\">\n            <button\n              type=\"button\"\n              data-name=\"unit\"\n              data-value=\"ether\"\n              onClick={() => this.toggleSU()}\n            >\n              {this.props.reducers.currency}\n            </button>\n            <SU displaySU={this.state.displaySU} />\n          </span>\n        </span>\n      </li>\n    );\n  }\n\n  renderNetworkHeader(field) {\n    const inlineStyle = { marginLeft: '10px' };\n    return (\n      <React.Fragment>\n        <li className=\"block-info dapp-flex-item\">\n          <Tooltip title=\"Change Network\">\n            <IconButton\n              aria-label=\"Delete\"\n              onClick={e => this.redirectToSettings(e)}\n            >\n              <SettingsSharp />\n            </IconButton>\n          </Tooltip>\n          <i className=\"icon-feed\" />\n          <span style={inlineStyle} className=\"hide-on-small\">\n            {this.props.reducers.peerCount}\n            &nbsp; peers\n          </span>\n          &nbsp; &nbsp;| &nbsp; &nbsp;\n          <i className=\"icon-layers\" />\n          <span>&nbsp; {this.props.reducers.blockHeader.number}</span>\n          <i className=\"icon-clock\" style={inlineStyle} />\n          <span className=\"hide-on-small\">&nbsp; {this.state.time}</span>\n        </li>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    const cn = require('classnames');\n    const newStyles = cn({\n      'dapp-header': true,\n      'dapp-sticky-bar': true,\n      'dapp-small': this.state.small,\n      sticky: this.state.sticky,\n    });\n    return (\n      <header className={newStyles}>\n        <nav>\n          <ul>\n            {this.renderHeaderField(NavFields.Wallet)}\n            {this.renderHeaderField(NavFields.Send)}\n            {this.renderNetworkHeader()}\n            {this.renderHeaderField(NavFields.Contracts)}\n            {this.renderBalanceHeader()}\n          </ul>\n        </nav>\n      </header>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  ...state,\n  timeSinceLastBlock: state.reducers.timeSinceLastBlock,\n  peerCount: state.reducers.peerCount,\n  peerCountIntervalId: state.reducers.peerCountIntervalId,\n  totalBalance: state.reducers.totalBalance,\n  blockHeader: state.reducers.blockHeader,\n  currency: state.reducers.currency,\n});\n\nexport default connect(mapStateToProps)(withRouter(NavBar));\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { BrowserRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport web3 from './web3';\n\n// actions\nimport {\n  fetchEthGasStationStats,\n  closeModal,\n  updateConnectedNetwork,\n  setWallets,\n  updateTotalBalance,\n  updateBlockHeader,\n  updateTransactionConfirmation,\n  updateTransaction,\n  createInitWalletContract,\n  updateEtherPrices,\n} from './actions/actions';\nimport * as Utils from './utils/utils';\n// import * as WalletUtils from './utils/WalletUtils';\n\n// views\nimport ViewContainer from './views/ViewContainer';\n\n// Modals\nimport ModalContainer from './components/modals/ModalContainer';\nimport NavBar from './components/Navbar';\n\n// stylesheets\nimport './stylesheets/mergedstyles.css';\nimport './App.css';\n\nexport class App extends Component {\n  constructor(props) {\n    super(props);\n    this.getCryptoComparePrices = this.getCryptoComparePrices.bind(this);\n    this.getCryptoComparePrices();\n    this.CryptoCompareInterval = setInterval(\n      () => this.getCryptoComparePrices(),\n      15000\n    );\n    this.props.fetchEthGasStationStats();\n    this.GasInterval = setInterval(\n      () => this.props.fetchEthGasStationStats(),\n      15000\n    );\n\n    // this.props.closeModal('displayEventInfo');\n  }\n\n  componentDidMount() {\n    this.getEverything();\n  }\n\n  getEverything() {\n    // do once to load on init, then repeat later to update balances\n    try {\n      Utils.checkNetwork(web3, this.props.updateConnectedNetwork);\n      Utils.getAccounts(\n        web3,\n        this.props.setWallets,\n        this.props.updateTotalBalance\n      );\n    } catch (err) {\n      console.error('error', err);\n    }\n\n    try {\n      web3.eth.subscribe('newBlockHeaders', (err, b) => {\n        if (!err) {\n          this.props.updateBlockHeader({\n            gasLimit: b.gasLimit,\n            gasUsed: b.gasUsed,\n            number: b.number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ','),\n            size: b.size,\n            timestamp: b.timestamp,\n          });\n          web3.eth.net.getPeerCount().then(this.props.updatePeerCount);\n        }\n        Utils.getAccounts(\n          web3,\n          this.props.setWallets,\n          this.props.updateTotalBalance\n        );\n        Utils.updateTransactionConfirmation(\n          b,\n          web3,\n          this.props.Transactions,\n          this.props.updateTransactionConfirmation\n        );\n        Utils.updatePendingConfirmations(\n          b,\n          web3,\n          this.props.Transactions,\n          this.props.updateTransaction\n        );\n      });\n    } catch (err) {\n      console.warn('web3 provider not open', err);\n      return err;\n    }\n  }\n\n  getCryptoComparePrices() {\n    Utils.getCryptoComparePrices().then(exchangeRates => {\n      this.props.updateEtherPrices(exchangeRates);\n    });\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.CryptoCompareInterval);\n    clearInterval(this.GasInterval);\n  }\n\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <NavBar />\n          <ViewContainer />\n          <ModalContainer />\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nApp.propTypes = {\n  Transactions: PropTypes.object,\n  updatePeerCount: PropTypes.func,\n  fetchEthGasStationStats: PropTypes.func,\n  closeModal: PropTypes.func,\n  updateConnectedNetwork: PropTypes.func,\n  setWallets: PropTypes.func,\n  updateTotalBalance: PropTypes.func,\n  updateBlockHeader: PropTypes.func,\n  updateTransactionConfirmation: PropTypes.func,\n  updateTransaction: PropTypes.func,\n  createInitWalletContract: PropTypes.func,\n  updateEtherPrices: PropTypes.func,\n};\n\nconst mapStateToProps = state => ({\n  Transactions: state.reducers.Transactions,\n});\n\nexport default connect(\n  mapStateToProps,\n  {\n    fetchEthGasStationStats,\n    closeModal,\n    updateConnectedNetwork,\n    setWallets,\n    updateTotalBalance,\n    updateBlockHeader,\n    updateTransactionConfirmation,\n    updateTransaction,\n    createInitWalletContract,\n    updateEtherPrices,\n  }\n)(App);\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react';\n\nclass ErrorBoundary extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  componentDidCatch(error, info) {\n    // Display fallback UI\n    this.setState({ hasError: true });\n    // You can also log the error to an error reporting service\n    // logErrorToMyService(error, info);\n    console.warn('in error boundary', error, info);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      // You can render any custom fallback UI\n      return <h1>Something went wrong.</h1>;\n    }\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n","export const initialState = {\n  displayAlertMessage: false,\n  alertKey: 'alert_20171104-hidden',\n  peerCountIntervalId: null,\n  currency: 'ETHER',\n  totalBalance: 0.0,\n  Wallets: {},\n  ObservedContracts: {},\n  ObservedTokens: {},\n  CustomContracts: {},\n  Transactions: {},\n  WalletContracts: {},\n  PendingConfirmations: {},\n  ContractsPendingConfirmations: {},\n  Events: {},\n  Tokens: {},\n  peerCount: 0,\n  blockHeader: 0,\n  timeSinceLastBlock: 0,\n  network: '',\n  provider: '',\n  modals: {\n    displayWatchContract: false,\n    displayWatchToken: false,\n    displayDeleteToken: false,\n    displaySendTransaction: false,\n    displayTransaction: false,\n    displayJSONInterface: false,\n    displayQRCode: false,\n    displayEventInfo: false,\n  },\n  ContractToWatch: {},\n  TokenToWatch: {},\n  TokenToDelete: '',\n  GasStats: {},\n  TransactionToSend: {},\n  globalNotification: {\n    display: false,\n  },\n  DeployContractForm: {\n    simpleChecked: true,\n    multisigChecked: false,\n    importWalletChecked: false,\n    importWalletAddress: '',\n    multiSigContract: {\n      ownerCount: 3,\n      confirmationAddressesRequired: 1,\n      dailyLimitAmount: 10,\n      MainOwnerAddress: '',\n      owners: [],\n    },\n  },\n  balancesAutoScanChecked: 0,\n  errorsAutoScanReceived: 0,\n  SelectedEvent: {},\n  qrCode: '',\n  JSONInterface: '',\n  SelectedFunction: {},\n};\n\nconst reducers = (state = initialState, action) => {\n  switch (action.type) {\n    case 'UPDATE_OBSERVED_CONTRACT_NAME':\n      return {\n        ...state,\n        ObservedContracts: {\n          ...state.ObservedContracts,\n          [action.payload.address]: {\n            ...state.ObservedContracts[action.payload.address],\n            name: action.payload.name,\n          },\n        },\n        // TODO: testing update logs for selectedContract\n\n        selectedContract: {\n          ...state.selectedContract,\n          name: action.payload.name,\n        },\n        // selectedContract: {\n        //   ...state.ObservedContracts,\n        //   [action.payload.address]: {\n        //     ...state.ObservedContracts[action.payload.address],\n        //     name: action.payload.name,\n        //   }\n        // },\n      };\n    case 'UPDATE_WALLET_CONTRACT_NAME':\n      return {\n        ...state,\n        WalletContracts: {\n          ...state.WalletContracts,\n          [action.payload.address]: {\n            ...state.WalletContracts[action.payload.address],\n            name: action.payload.name,\n          },\n        },\n        selectedContract: {\n          ...state.selectedContract,\n          name: action.payload.name,\n        },\n        // selectedContract: {\n        //   ...state.WalletContracts,\n        //   [action.payload.address]: {\n        //     ...state.WalletContracts[action.payload.address],\n        //     name: action.payload.name,\n        //   }\n        // },\n      };\n    case 'UPDATE_ADDRESS_NAME':\n      return {\n        ...state,\n        Wallets: {\n          ...state.Wallets,\n          [action.payload.address]: {\n            ...state.Wallets[action.payload.address],\n            name: action.payload.name,\n          },\n        },\n        selectedWallet: {\n          ...state.selectedWallet,\n          name: action.payload.name,\n        },\n      };\n    case 'UPDATE_TOKEN_TO_SEND':\n      return {\n        ...state,\n        TransactionToSend: {\n          ...state.TransactionToSend,\n          sendToken: action.payload.sendToken,\n          tokenToSend: action.payload.tokenToSend,\n        },\n      };\n    case 'UPDATE_CONTRACT_TOKEN_BALANCE':\n      return {\n        ...state,\n        WalletContracts: {\n          ...state.WalletContracts,\n          [action.payload.account]: {\n            ...state.WalletContracts[action.payload.account],\n            tokens: {\n              ...state.WalletContracts[action.payload.account].tokens,\n              [action.payload.tokenAddress]: action.payload.value,\n            },\n          },\n        },\n      };\n    case 'UPDATE_ACCOUNT_TOKEN_BALANCE':\n      return {\n        ...state,\n        Wallets: {\n          ...state.Wallets,\n          [action.payload.account]: {\n            ...state.Wallets[action.payload.account],\n            tokens: {\n              ...state.Wallets[action.payload.account].tokens,\n              [action.payload.tokenAddress]: action.payload.value,\n            },\n          },\n        },\n      };\n    case 'UPDATE_WALLET_CONTRACT':\n      return {\n        ...state,\n        WalletContracts: Object.assign({}, state.WalletContracts, {\n          [action.payload.name]: action.payload.value,\n        }),\n      };\n    case 'DELETE_PENDING_CONTRACT':\n      return {\n        ...state,\n        ContractsPendingConfirmations: Object.assign(\n          {},\n          ...Object.entries(state.ContractsPendingConfirmations)\n            .filter(([k]) => k !== action.payload)\n            .map(([k, v]) => ({ [k]: v }))\n        ),\n      };\n    case 'UPDATE_PENDING_CONTRACTS':\n      return {\n        ...state,\n        ContractsPendingConfirmations: Object.assign(\n          {},\n          state.ContractsPendingConfirmations,\n          {\n            [action.payload.name]: action.payload.value,\n          }\n        ),\n      };\n\n    case 'UPDATE_INITIAL_DEPLOYED_CONTRACT_METHOD_OUTPUTS':\n      return {\n        ...state,\n        WalletContracts: {\n          ...state.WalletContracts,\n          [action.payload.contractAddress]: {\n            ...state.WalletContracts[action.payload.contractAddress],\n            contractConstants: state.WalletContracts[\n              action.payload.contractAddress\n            ].contractConstants.map((item, ind) => {\n              if (item.name === action.payload.name) {\n                return {\n                  ...item,\n                  outputs: [...action.payload.value],\n                };\n              }\n              return item;\n            }),\n          },\n        },\n        // TODO: testing update logs for selectedContract\n      };\n\n    case 'UPDATE_INITIAL_OBSERVED_CONTRACT_METHOD_OUTPUTS':\n      return {\n        ...state,\n        ObservedContracts: {\n          ...state.ObservedContracts,\n          [action.payload.contractAddress]: {\n            ...state.ObservedContracts[action.payload.contractAddress],\n            contractConstants: state.ObservedContracts[\n              action.payload.contractAddress\n            ].contractConstants.map((item, ind) => {\n              if (item.name === action.payload.name) {\n                return {\n                  ...item,\n                  outputs: [...action.payload.value],\n                };\n              }\n              return item;\n            }),\n          },\n        },\n        // TODO: testing update logs for selectedContract\n      };\n    case 'UPDATE_FUNCTION_INPUT':\n      return {\n        ...state,\n        selectedFunction: {\n          ...state.selectedFunction,\n          inputs: state.selectedFunction.inputs.map((item, ind) => {\n            if (parseInt(action.payload.index, 10) === ind) {\n              return {\n                ...item,\n                value: action.payload.value,\n              };\n            }\n            return item;\n          }),\n        },\n      };\n    case 'UPDATE_EXECUTING_WALLET':\n      return {\n        ...state,\n        selectedFunction: Object.assign({}, state.selectedFunction, {\n          [action.payload.name]: action.payload.value,\n        }),\n      };\n    case 'EMPTY_SELECTED_FUNCTION':\n      return {\n        ...state,\n        selectedFunction: Object.assign({}, {}),\n      };\n    case 'UPDATE_SELECTED_FUNCTION':\n      return {\n        ...state,\n        selectedFunction: { ...action.payload },\n      };\n    case 'UPDATE_JSON_INTERFACE':\n      return {\n        ...state,\n        JSONInterface: action.payload,\n      };\n    case 'UPDATE_QR_CODE':\n      return {\n        ...state,\n        qrCode: action.payload,\n      };\n\n    case 'UPDATE_SELECTED_EVENT':\n      return {\n        ...state,\n        SelectedEvent: action.payload,\n      };\n\n    case 'ADD_DEPLOYED_CONTRACT_FUNCTIONS':\n      return {\n        ...state,\n        WalletContracts: {\n          ...state.WalletContracts,\n          [action.payload.address]: {\n            ...state.WalletContracts[action.payload.address],\n            [action.payload.name]: action.payload.value,\n          },\n        },\n        // TODO: testing\n        selectedContract: {\n          ...state.selectedContract,\n          [action.payload.name]: action.payload.value,\n        },\n      };\n    case 'ADD_DEPLOYED_CONTRACT_CONSTANTS':\n      return {\n        ...state,\n        WalletContracts: {\n          ...state.WalletContracts,\n          [action.payload.address]: {\n            ...state.WalletContracts[action.payload.address],\n            [action.payload.name]: action.payload.value,\n          },\n        },\n        // TODO: testing\n        selectedContract: {\n          ...state.selectedContract,\n          [action.payload.name]: action.payload.value,\n        },\n      };\n\n    case 'ADD_OBSERVED_CONTRACT_FUNCTIONS':\n      return {\n        ...state,\n        ObservedContracts: {\n          ...state.ObservedContracts,\n          [action.payload.address]: {\n            ...state.ObservedContracts[action.payload.address],\n            [action.payload.name]: action.payload.value,\n          },\n        },\n        // TODO: testing\n        selectedContract: {\n          ...state.selectedContract,\n          [action.payload.name]: action.payload.value,\n        },\n      };\n    case 'ADD_OBSERVED_CONTRACT_CONSTANTS':\n      return {\n        ...state,\n        ObservedContracts: {\n          ...state.ObservedContracts,\n          [action.payload.address]: {\n            ...state.ObservedContracts[action.payload.address],\n            [action.payload.name]: action.payload.value,\n          },\n        },\n        // TODO: testing\n        selectedContract: {\n          ...state.selectedContract,\n          [action.payload.name]: action.payload.value,\n        },\n      };\n    case 'UPDATE_PAST_CONTRACT_LOGS':\n      return {\n        ...state,\n        ObservedContracts: {\n          ...state.ObservedContracts,\n          [action.payload.address]: {\n            ...state.ObservedContracts[action.payload.address],\n            logs: [\n              ...state.ObservedContracts[action.payload.address].logs,\n              action.payload,\n            ],\n          },\n        },\n        // TODO: testing update logs for selectedContract\n      };\n    case 'ADD_PAST_CONTRACT_LOGS':\n      return {\n        ...state,\n        ObservedContracts: {\n          ...state.ObservedContracts,\n          [action.payload.address]: {\n            ...state.ObservedContracts[action.payload.address],\n            logs: action.payload,\n          },\n        },\n        // TODO: testing update logs for selectedContract\n      };\n    case 'UPDATE_BALANCE_CHECKED':\n      return {\n        ...state,\n        balancesAutoScanChecked: action.payload,\n      };\n    case 'UPDATE_ERR_CHECKED':\n      return {\n        ...state,\n        errorsAutoScanReceived: action.payload,\n      };\n    case 'UPDATE_DCF_RADIO':\n      return {\n        ...state,\n        DeployContractForm: Object.assign(\n          {},\n          state.DeployContractForm,\n          action.payload\n        ),\n      };\n    case 'UPDATE_MAIN_DCF': {\n      return {\n        ...state,\n        DeployContractForm: Object.assign({}, state.DeployContractForm, {\n          [action.payload.name]: action.payload.value,\n        }),\n      };\n    }\n    case 'UPDATE_MAIN_CONTRACT_ADDRESS': {\n      return {\n        ...state,\n        DeployContractForm: Object.assign(\n          {},\n          state.DeployContractForm,\n          action.payload\n        ),\n      };\n    }\n    case 'UPDATE_DEPLOY_CONTRACT_FORM':\n      return {\n        ...state,\n        DeployContractForm: {\n          ...state.DeployContractForm,\n          multiSigContract: {\n            ...action.payload,\n          },\n        },\n      };\n    case 'UPDATE_SELECTED_TRANSACTION':\n      return {\n        ...state,\n        SelectedTransaction: action.payload,\n      };\n    case 'CLEAR_TRANSACTION_TO_SEND':\n      return {\n        ...state,\n        TransactionToSend: {},\n      };\n    case 'UPDATE_TRANSACTION_CONFIRMATION':\n      return {\n        ...state,\n        Transactions: {\n          ...state.Transactions,\n          [action.payload.name]: {\n            ...state.Transactions[action.payload.name],\n            confirmationNumber: action.payload.value,\n          },\n        },\n      };\n    case 'UPDATE_TRANSACTION':\n      return {\n        ...state,\n        Transactions: {\n          ...state.Transactions,\n          [action.payload.name]: {\n            ...state.Transactions[action.payload.name],\n            ...action.payload.value,\n          },\n        },\n      };\n    case 'ADD_TRANSACTION':\n      return {\n        ...state,\n        Transactions: Object.assign({}, state.Transactions, {\n          [action.payload.hash]: action.payload.value,\n        }),\n      };\n    case 'DISPLAY_GLOBAL_NOTIFICATION':\n      return {\n        ...state,\n        globalNotification: Object.assign(\n          {},\n          state.globalNotification,\n          action.payload\n        ),\n      };\n    case 'UPDATE_TRANSACTION_TO_SEND':\n      return {\n        ...state,\n        TransactionToSend: Object.assign({}, state.TransactionToSend, {\n          [action.payload.name]: action.payload.value,\n        }),\n      };\n    // case RECEIVED_GAS_ERROR:\n    case 'RECEIVE_GAS_STATS':\n      return {\n        ...state,\n        GasStats: Object.assign({}, action.payload),\n      };\n    case 'EMPTY_SELECTED_CONTRACT':\n      return {\n        ...state,\n        selectedContract: '',\n      };\n    case 'SET_SELECTED_CONTRACT':\n      return {\n        ...state,\n        selectedContract: action.payload,\n      };\n    case 'SET_TOKEN_TO_DELETE':\n      return {\n        ...state,\n        TokenToDelete: action.payload,\n      };\n    case 'DELETE_TOKEN':\n      return {\n        ...state,\n        ObservedTokens: Object.assign(\n          {},\n          ...Object.entries(state.ObservedTokens)\n            .filter(([k]) => k !== action.payload)\n            .map(([k, v]) => ({ [k]: v }))\n        ),\n        TokenToDelete: '',\n      };\n    case 'ADD_OBSERVED_TOKEN':\n      // overwrites if already existed\n      return {\n        ...state,\n        ObservedTokens: Object.assign({}, state.ObservedTokens, {\n          [action.payload.address]: action.payload.value,\n        }),\n      };\n    case 'CANCEL_TOKEN_TO_WATCH':\n      return {\n        ...state,\n        TokenToWatch: {},\n      };\n    case 'UPDATE_TOKEN_TO_WATCH':\n      return {\n        ...state,\n        TokenToWatch: Object.assign({}, state.TokenToWatch, {\n          [action.payload.name]: action.payload.value,\n        }),\n      };\n    case 'ADD_OBSERVED_CONTRACT':\n      return {\n        ...state,\n        ObservedContracts: Object.assign(\n          {},\n          state.ObservedContracts,\n          action.payload\n        ),\n      };\n    case 'CANCEL_CONTRACT_TO_WATCH':\n      return {\n        ...state,\n        ContractToWatch: {},\n      };\n    case 'UPDATE_CONTRACT_TO_WATCH':\n      return {\n        ...state,\n        ContractToWatch: Object.assign({}, state.ContractToWatch, {\n          [action.payload.name]: action.payload.value,\n        }),\n      };\n    case 'CLOSE_MODAL':\n      return {\n        ...state,\n        modals: Object.assign({}, ...state.modals, {\n          [action.payload]: false,\n        }),\n      };\n    case 'DISPLAY_MODAL':\n      return {\n        ...state,\n        modals: Object.assign({}, ...state.modals, {\n          [action.payload]: true,\n        }),\n      };\n    case 'CREATE_INIT_WALLET_CONTRACT':\n      return {\n        ...state,\n        Wallet: action.payload,\n      };\n    case 'UPDATE_EXCHANGE_RATES':\n      return {\n        ...state,\n        exchangeRates: action.payload,\n      };\n    case 'UPDATE_ETHER_PRICES':\n      return {\n        ...state,\n        prices: action.payload,\n      };\n    case 'EMPTY_SELECTED_WALLET':\n      return {\n        ...state,\n        selectedWallet: '',\n      };\n    case 'SET_SELECTED_WALLET':\n      return {\n        ...state,\n        selectedWallet: action.payload,\n      };\n    case 'UPDATE_DISPLAY_VALUE':\n      return {\n        ...state,\n        displayValue: action.payload,\n      };\n    case 'UPDATE_TOTAL_BALANCE':\n      return {\n        ...state,\n        totalBalance: action.payload,\n      };\n    // case 'SET_WALLETS':\n    //   return {\n    //     ...state,\n    //     Wallets: Object.assign({}, state.Wallets, {\n    //       [action.payload.account]: action.payload.balance,\n    //     }),\n    //   };\n    // Wallets: {\n    //       ...state.Wallets,\n    //       [action.payload.account]: {\n    //         ...state.Wallets[action.payload.account],\n    //         balance: action.balance,\n    //       },\n    //     },\n\n    case 'SET_WALLETS':\n      return {\n        ...state,\n        Wallets: {\n          ...state.Wallets,\n          [action.payload.account]: {\n            ...state.Wallets[action.payload.account],\n            balance: action.payload.balance,\n          },\n        },\n      };\n    case 'UPDATE_PROVIDER':\n      return {\n        ...state,\n        provider: action.payload,\n      };\n    case 'UPDATE_BLOCKHEADER':\n      return {\n        ...state,\n        blockHeader: action.payload,\n      };\n    case 'UPDATE_PEERCOUNT':\n      return {\n        ...state,\n        peerCount: action.payload,\n      };\n    case 'UPDATE_CURRENCY_UNIT':\n      return {\n        ...state,\n        currency: action.payload,\n      };\n    case 'UPDATE_CONNECTED_NETWORK':\n      return {\n        ...state,\n        network: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducers;\n","import { combineReducers } from 'redux';\nimport reducers from './reducers';\n\nconst appReducer = combineReducers({\n  reducers,\n});\n\nconst rootReducer = (state, action) => {\n  let updatedState = state;\n  if (action.type === 'USER_LOGOUT') {\n    updatedState = undefined;\n  }\n  return appReducer(updatedState, action);\n};\n\nexport default rootReducer;\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage'; // defaults to localStorage for web and AsyncStorage for react-native\nimport rootReducer from '../reducers';\n\nconst middlewares = [thunk];\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n  blacklist: [\n    'reducers.selectedFunction',\n    'reducers.TransactionToSend',\n    'reducers.network',\n    'reducers.provider',\n    'reducers.blockHeader',\n    'reducers.timeSinceLastBlock',\n    'reducers.peerCount',\n    'reducers.modals',\n    'reducers.DeployContractForm',\n    'reducers.SelectedTransction',\n    'reducers.SelectedWallet',\n    'reducers.SelectedEvent',\n  ],\n};\n\n// const isChrome = window.navigator.userAgent.includes('Chrome');\n\nexport default function configureStore() {\n  /* eslint-disable no-underscore-dangle */\n  const store = createStore(\n    persistReducer(persistConfig, rootReducer),\n    compose(\n      applyMiddleware(...middlewares),\n      window.__REDUX_DEVTOOLS_EXTENSION__ &&\n        window.__REDUX_DEVTOOLS_EXTENSION__()\n    )\n  );\n  /* eslint-enable */\n\n  persistStore(store);\n\n  return store;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'react-app-polyfill/ie9'; // For IE 9-11 support\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport ErrorBoundary from './errorBoundaries/ErrorBoundary';\nimport configureStore from './store/store';\n\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <ErrorBoundary>\n      <App />\n    </ErrorBoundary>\n  </Provider>,\n  document.getElementById('root')\n);\n\nregisterServiceWorker();\n"],"sourceRoot":""}