{"version":3,"sources":["web3.js","actions/actionTypes.js","actions/actions.js","utils/utils.js","components/elements/TransactionItem.js","components/elements/LatestTransactions.js","components/elements/NoMatchingTransaction.js","constants/TokenInterfaceConstant.js","components/elements/TokenListForItems.js","components/elements/AccountItem.js","components/Addresses.js","components/elements/SecurityIcon.js","utils/helperFunctions.js","components/elements/ContractItem.js","components/ButtonDescription.js","components/DeployedWallets.js","views/Account.js","components/elements/SelectableUnit.js","components/elements/ActionBarItem.js","components/elements/AccountActionBar.js","components/TokenList.js","components/EditableName.js","views/NotFound.js","views/SingleAccountView.js","components/elements/ContractActionBar.js","components/elements/inputs/Inputs.js","components/elements/ExecuteConstants.js","components/elements/WalletDropdown.js","components/elements/ExecuteFunctions.js","components/elements/ExecutableContract.js","components/elements/ContractEvents.js","views/SingleContractView.js","components/CustomContracts.js","components/elements/TokenBox.js","components/CustomTokens.js","constants/FieldConstants.js","constants/DevConstants.js","components/DeployToken.js","views/Contracts.js","components/FromToRow.js","components/elements/RadioTokenSelect.js","components/AmountRow.js","components/GasFeeRow.js","components/TotalGas.js","views/Send.js","constants/InitConstants.js","views/NewWalletContract.js","views/ViewContainer.js","components/elements/TestInputItem.js","components/modals/WatchContract.js","components/modals/WatchToken.js","components/modals/DeleteToken.js","components/modals/SendTransaction.js","components/modals/TransactionInfo.js","components/modals/QRCode.js","components/modals/EventInfo.js","components/modals/JSONInterface.js","components/modals/ModalContainer.js","components/Navbar.js","App.js","registerServiceWorker.js","errorBoundaries/ErrorBoundary.js","reducers/reducers.js","reducers/index.js","store/store.js","index.js"],"names":["web3","Web3","actionTypes","updateContractName","name","dispatch","type","payload","updateWalletContractName","updateAddressName","walletData","updateTokenToSend","tokenData","updateContractTokenBalance","token","updateAccountTokenBalance","setEthereumProviderConfig","data","updateWalletContracts","contract","value","transactionHash","updatePendingContracts","hash","updateInitialDeployedContractMethodOutputs","outputs","updateInitialObservedContractMethodOutputs","updateFunctionInput","input","updateExecutingWallet","address","emptySelectedFunction","func","updateSelectedFunction","updateJSON","json","updateQRCode","updateSelectedEvent","event","addDeployedContractFunctions","funcs","addDeployedContractConstants","consts","addObservedContractFunctions","addObservedContractConstants","updateContractLog","newLog","addPastContractLogs","contractWithLogs","fetchTokensForAutoScan","accounts","updateBalanceChecked","num","updateErrChecked","requestTokens","fetch","then","response","error","console","warn","displayGlobalNotification","display","msg","duration","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee2","tokens","balancesChecked","errChecked","wrap","_context2","prev","next","map","account","callData","concat","substring","replace","_sendTransactionPromise","_callee","params","_context","abrupt","Promise","resolve","reject","eth","call","to","result","tokenAmt","utils","toBN","fromWei","addObservedToken","assign","amount","catch","stop","this","apply","arguments","_x2","sendTransactionPromise","_x","updateMainDCF","updateDCFRadio","updateMainContractAddress","updateDeployContractForm","updateSelectedTransaction","tx","clearTransactionToSend","updateTransactionConfirmation","cn","updateTransaction","txnInfo","addTransaction","txHash","updateTransactionToSend","fetchEthGasStationStats","gasStats","requestGas","actions_this","jsonGasStats","receiveGas","emptySelectedContract","empty","selectedContract","tokenToDelete","deleteToken","cancelTokenToWatch","updateTokenToWatch","tokenInfo","addObservedContract","cancelContractToWatch","updateContractToWatch","contractInfo","closeModal","modalName","displayModal","createInitWalletContract","wc","updateEtherPrices","exchangeRates","emptySelectedWallet","selectedWallet","wallet","updateTotalBalance","totalBalance","setWallets","Wallets","updateProvider","provider","updateBlockHeader","blockHeader","updatePeerCount","PeerCount","updateCurrency","_ref2","CurrencyUnit","updateConnectedNetwork","network","BigNumber","ethUtils","BN","newWeb3","floatToTime","str","Math","round","ceil","getFullTime","string","h","Date","getHours","amORpm","d","getDay","getDayOfWeek","getMonthName","getDate","getFullYear","getYear","getMinutes","getMonth","displayPriceFormatter","props","balance","currencyOverride","undefined","isNaN","displayPrice","currency","reducers","Number","toLowerCase","url","moment","unix","resp","status","respJSON","ETH","body","keys","key","isFinite","err","cb","getBlock","block","t0","getAccounts","forEach","acc","getBalance","add","TransactionInfo","confirmationNumber","react_default","createElement","className","MinusIcon","DateInfo","data-tool-tip","dateSent","PendingIcons","Fragment","TransactionItem","_Component","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","updateToTransaction","bind","assertThisInitialized","inherits","createClass","state","completed","LinearProgress_default","variant","e","stopPropagation","_this2","ethereum_react_components_dist","classes","title","size","Link","pathname","onClick","transactionType","renderAddressLink","from","_this3","transaction","shortid","generate","data-transaction-hash","data-block-hash","blockHash","target","tagName","TransactionItem_DateInfo","renderTransactionType","TransactionItem_PendingIcons","TransactionItem_TransactionInfo","renderTransactionAmount","TransactionItem_MinusIcon","Component","connect","objectSpread","sortOptionsArr","displayName","txKey","searchOptionsArr","LatestTransactions","filterOptions","searchValue","searchField","ascending","sortOption","filteredTransactions","fetchTransactions","updateSearchValue","filterSearchValue","selectSearchField","selectSortOption","sortOptions","toggleSortDirection","sortTransactions","transactions","length","setState","log","field","sorted","sort","b","filteredArr","filter","txValue","includes","reverse","_this4","placeholder","onKeyUp","style","marginLeft","onChange","val","i","_this5","_this6","icon","_this7","elements_TransactionItem","renderSearchField","renderSortOptions","renderDirectionalIcon","renderTransactions","NoMatchingTransaction","colSpan","tokenInterface","constant","inputs","anonymous","indexed","payable","TokenListForItems","untrackedTokens","walletAddress","ObservedTokens","tokenAddress","TokenContract","web3Instance","Contract","options","methods","balanceOf","tokenResult","addressType","message","tokenCheck","currentObservedTokens","Set","WalletContracts","currentWalletsTokens","trackedTokens","Array","toConsumableArray","x","has","getTokenBalanceForAddress","data-tooltip","symbol","Actions","AccountItem","openAccountPage","prevProps","prevState","w","number","number_format_default","displayType","thousandSeparator","ot","tokenList","displayTokens","constructor","elements_TokenListForItems","AccountURL","renderTokens","renderName","renderBalance","short","Addresses","wallets","elements_AccountItem","index","ToolTip","src","divStyle","alt","makeBlockie","backgroundImage","SecurityIcon_ToolTip","combineWallets","addresses","walletContracts","makeID","text","possible","charAt","floor","random","toSentence","trim","toUpperCase","slice","ContractItem","fakeAddress","fakeAddressInterval","setInterval","clearInterval","percent","width","elements_SecurityIcon","renderPendingProgress","renderPendingSecurityIcon","pending","contractAddress","ContractUrl","renderPending","renderCreating","ButtonDescription","description","WalletLink","DeployedWallets","_this$props$reducers","ContractsPendingConfirmations","contracts","elements_ContractItem","components_ButtonDescription","renderWalletBoxList","DeployedWallets_WalletLink","Title","StatelessPageContent","Account_Title","components_Addresses","components_DeployedWallets","AccountView","txs","Transactions","Account_StatelessPageContent","elements_LatestTransactions","elements_NoMatchingTransaction","selectableUnits","SelectableUnit","unitSelected","displaySU","document","addEventListener","removeEventListener","node","contains","newUnit","getAttribute","item","data-value","newClasses","require","simple-modal","animate","id","ref","renderList","ActionBarItem","href","AccountActionBar","preventDefault","etherScanAddress","transferEtherAddress","changellyAddress","elements_ActionBarItem","lib","displayCopiedNotification","displayAndSetQRCode","TokenList","sw","sendUrl","renderIdentity","renderInfo","renderLink","EditableName","handleChange","newName","toggleEditability","contentEditable","walletName","html","React","createRef","handleClickOutside","react_contenteditable_default","innerRef","disabled","components_EditableName","NotFound","StickyHeader","AccountDetails","AccountDescription","SingleAccountView","window","handleScroll","accountTxns","data-name","toggleSU","elements_SelectableUnit","SingleAccountView_StickyHeader","SingleAccountView_AccountDetails","components_TokenList","SingleAccountView_AccountDescription","elements_AccountActionBar","renderAccountTransactions","views_NotFound","renderSingleAccount","ContractActionBar","jsonInterface","displayAndSetJSON","Inputs","inputType","pattern","step","cols","rows","min","match","renderAddress","renderBool","renderBytes","renderInt","renderJson","renderString","renderUint","ExecuteConstants","executeInput","_console","funcName","inp","toWei","JSON","parse","_contract$methods","res","Helpers","inputs_Inputs","output","bool","renderOutputType","constants","ObservedContracts","contractConstants","renderFunctionInputs","renderFunctionOutputs","showContractFunctions","WalletDropdown","WalletsCombined","fromWallet","dropdownConfig","owners","DeployContractForm","multiSigContract","obj","MainOwnerAddress","chooseWallet","component","returnDeployTokenAddress","config","selectClassName","selectName","toFixed","compose","withStyles","theme","keyIcon","WebkitTransform","MozTransform","MsTransform","OTransform","transform","ExecuteFunctions","executingWallet","chooseFunction","executeContractFunction","functions","chosenFunction","contractFunctions","selectedIndex","selectedFunction","execWallet","send","on","receipt","elements_WalletDropdown","defaultValue","c","executable","renderAccountDropdown","renderSelectFunction","renderIsExecutable","ExecutableContract","show","toggleContractInfo","elements_ExecuteConstants","elements_ExecuteFunctions","DateFormat","Utils","timestamp","LogValue","wordBreak","returnValues","Event","ContractEvents_LogValue","ContractEvents","displayEventModal","originalContractName","originalContractAddress","logs","ContractEvents_DateFormat","ContractEvents_Event","StickyBar","StatelessSummary","SingleContractView","dailyEtherLimit","requiredSignatures","ownersList","redirectToOwnersSingleView","watchContractEvents","executeAndWatch","executeFunctions","updateContractWithMethods","updateContractWithMethodOutputs","deployedWalletContract","method","contractInstance","push","args","typeShort","_contractInstance$met","_console2","subscription","events","allEvents","getPastEvents","blockNumber","fontWeight","SingleContractView_StatelessSummary","renderWalletDetails","htmlFor","elements_ContractEvents","SingleContractView_StickyBar","renderSummary","elements_ContractActionBar","elements_ExecutableContract","renderEvents","renderSingleContract","CustomContracts","isEqual","oc","renderObservedContracts","renderWatchContractButton","TokenBox","deleteTokenModal","totalSupply","iconStyle","color","toDataUrl","CustomTokens","elements_TokenBox","float","autoScanTokens","renderObservedTokens","renderAddTokenButton","renderAutoScan","NavFields","liClass","displayText","ReplicateBinanceToken","ABI","DeployToken","_this$props","combinedWallets","deployingAddress","disabledWallet","deployBinanceToken","code","deploy","gas","decimals","Fab_default","aria-label","fab","Add_default","renderButton","renderWallet","margin","spacing","unit","extendedIcon","marginRight","ContractsView","Contracts_Title","components_CustomContracts","components_CustomTokens","components_DeployToken","Send","switchChecked","checkbox","standardFee","handleInputChange","checkIsAddress","targetValue","toAddress","isAddress","toIsAddress","dapp-error","autoFocus","renderIcon","renderFrom","renderTo","TransactionToSend","RadioTokenSelect","chooseToken","sendToken","tokenToSend","renderEtherChoice","renderTokensChoice","AmountRow","handleOnKeyUp","toggleCheckbox","split","tokenAmount","elements_RadioTokenSelect","renderEtherBalance","renderAmount","renderAmountSummary","renderEtherDropDown","GasStats","GasFeeRow","changeGas","estimateGas","toggleFee","fastest","safeLow","safeLowWait","fastWait","renderFeePriority","renderEstimateTime","TokenInfo","EstimatedFee","total","TotalGas","TotalGas_TokenInfo","gasPrice","renderTotal","TotalGas_EstimatedFee","validateForm","validateSendingEther","validateSendingTokens","valid","action","autoComplete","Send_Title","FromToRow","components_AmountRow","components_GasFeeRow","components_TotalGas","renderSubmitButton","ethereumConfig","rollBackBy","requiredConfirmations","dailyLimitDefault","WalletInterfaceItems","SelectOwner","dcfRadio","NewWalletContract","defaultWallet","selectWallet","createContract","checkIfImportableWallet","prop","dcf","prevDcf","importWalletAddress","pendingConf","originalABI","getCode","buttonValue","ownerCount","confirmationAddressesRequired","dailyLimitAmount","_dcf$multiSigContract","TextField_default","label","InputProps","startAdornment","InputAdornment_default","position","ownerSet","msContract","multisigChecked","toString","validateMultipleAddress","history","stringify","newContractInstance","FormControlLabel_default","control","Radio_default","checked","simpleChecked","Collapse_default","in","verticalAlign","lineHeight","select","multiline","MenuItem_default","InputLabelProps","shrink","renderMultiSigOwners","importWalletChecked","_this8","FormControl_default","formControl","NewWalletContract_Title","NewWalletContract_SelectOwner","radioRoot","FormLabel_default","RadioGroup_default","group","renderMultiSigButton","renderImportButton","renderCreateButton","fadeRoot","height","noHeight","paper","svg","polygon","fill","palette","common","white","stroke","divider","strokeWidth","ViewContainer","Route","exact","path","SendContractForm","TestInputItem","f","divClass","editor","renderTextAreaType","renderInputType","listInputs","WatchItem","cancelFunction","submitFunction","ContractToWatch","con","_this2$props$reducers","deployedWalletContracts","elements_TestInputItem","renderInputs","renderButtons","WatchToken","invokeContractMethod","getTokenContractInfo","variableMethodName","defineProperty","toCheckSum","toChecksumAddress","isCheckSummed","checkAddressChecksum","TokenToWatch","Name","DeleteToken","DeleteToken_Name","SendTransactionModal","sendTransaction","sendEtherTransaction","sendTokenTransaction","updateTokenBalances","returnAccountName","date","transfer","walletArray","walletContractArray","observedContracts","observedContractsArray","observedTokens","observedTokensArray","fromName","toName","SendTransaction_Title","estimatedGas","withRouter","Header","nw","fontSize","rel","DateRow","today","txDate","timeDiff","abs","getTime","diffDays","GasStat","displayValue","gasAmount","BlockInfo","handleRoute","evt","direction","TransactionInfo_Header","TransactionInfo_DateRow","renderSentAmount","TransactionInfo_GasStat","gasUsed","TransactionInfo_BlockInfo","QRCode","EventName","Outputs","tokenId","Origin","EventInfo","diff","hours","parseInt","EventInfo_EventName","EventInfo_Outputs","EventInfo_Origin","JSONInterface","readOnly","ModalContainer","classList","remove","snapshot","globalNotification","notification","toastConfig","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","toast","warning","success","info","values","modals","watchContract","dapp-modal-overlay","displayWatchContract","watchToken","displayWatchToken","displayDeleteToken","viewTransaction","displayTransaction","JsonInterface","displayJSONInterface","qrCode","displayQRCode","displaySendTransaction","viewEventInfo","displayEventInfo","txToSend","react_toastify_lib","newestOnTop","rtl","pauseOnVisibilityChange","modals_WatchToken","WatchContract","TokenToDelete","modals_DeleteToken","SelectedTransaction","modals_TransactionInfo","SelectedEvent","modals_EventInfo","SendTransaction","modals_QRCode","modals_JSONInterface","NavBar","small","sticky","time","interval","scrollPosition","scrollY","inlineStyle","Tooltip_default","IconButton_default","redirectToSettings","SettingsSharp_default","peerCount","newStyles","dapp-header","dapp-sticky-bar","dapp-small","renderHeaderField","renderNetworkHeader","renderBalanceHeader","timeSinceLastBlock","peerCountIntervalId","App","getCryptoComparePrices","CryptoCompareInterval","GasInterval","getEverything","_checkNetwork","subscribe","gasLimit","net","getPeerCount","unconfirmed","currentBlock","getTransaction","confirmations","getTransactionReceipt","_getCryptoComparePrices","BrowserRouter","Navbar","views_ViewContainer","modals_ModalContainer","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ErrorBoundary","hasError","children","initialState","displayAlertMessage","alertKey","PendingConfirmations","Events","Tokens","balancesAutoScanChecked","errorsAutoScanReceived","SelectedFunction","entries","slicedToArray","_ref3","_ref4","k","v","ind","_ref6","_ref8","_ref9","Wallet","prices","appReducer","combineReducers","rootReducer","updatedState","middlewares","thunk","persistConfig","storage","blacklist","store","createStore","persistReducer","applyMiddleware","__REDUX_DEVTOOLS_EXTENSION__","persistStore","ReactDOM","render","es","errorBoundaries_ErrorBoundary","src_App_0","getElementById","URL","process","origin","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.cdff17d7.chunk.js","sourcesContent":["import Web3 from 'web3';\n\nlet web3;\n\n// if (window.web3) {\n// web3 = new Web3(window.web3.currentProvider);\n// } else {\n// web3 = new Web3('http://127.0.0.1:8545');\n// }\n\n// Development mode:\nweb3 = new Web3('http://127.0.0.1:8545');\n\nexport default web3;\n","export const actionTypes = {\n  UPDATE_OBSERVED_CONTRACT_NAME: 'UPDATE_OBSERVED_CONTRACT_NAME',\n  UPDATE_WALLET_CONTRACT_NAME: 'UPDATE_WALLET_CONTRACT_NAME',\n  UPDATE_ADDRESS_NAME: 'UPDATE_ADDRESS_NAME',\n  UPDATE_TOKEN_TO_SEND: 'UPDATE_TOKEN_TO_SEND',\n  UPDATE_CONTRACT_TOKEN_BALANCE: 'UPDATE_CONTRACT_TOKEN_BALANCE',\n  UPDATE_ACCOUNT_TOKEN_BALANCE: 'UPDATE_ACCOUNT_TOKEN_BALANCE',\n  SET_ETHEREUM_PROVIDER_CONFIG: 'SET_ETHEREUM_PROVIDER_CONFIG',\n  UPDATE_MAIN_DCF: 'UPDATE_MAIN_DCF',\n  UPDATE_WALLET_CONTRACT: 'UPDATE_WALLET_CONTRACT',\n  DELETE_PENDING_CONTRACT: 'DELETE_PENDING_CONTRACT',\n  UPDATE_PENDING_CONTRACTS: 'UPDATE_PENDING_CONTRACTS',\n  UPDATE_FUNCTION_INPUT: 'UPDATE_FUNCTION_INPUT',\n  UPDATE_EXECUTING_WALLET: 'UPDATE_EXECUTING_WALLET',\n  EMPTY_SELECTED_FUNCTION: 'EMPTY_SELECTED_FUNCTION',\n  UPDATE_SELECTED_FUNCTION: 'UPDATE_SELECTED_FUNCTION',\n  UPDATE_INITIAL_DEPLOYED_CONTRACT_METHOD_OUTPUTS:\n    'UPDATE_INITIAL_DEPLOYED_CONTRACT_METHOD_OUTPUTS',\n  UPDATE_INITIAL_OBSERVED_CONTRACT_METHOD_OUTPUTS:\n    'UPDATE_INITIAL_OBSERVED_CONTRACT_METHOD_OUTPUTS',\n  UPDATE_JSON_INTERFACE: 'UPDATE_JSON_INTERFACE',\n  UPDATE_QR_CODE: 'UPDATE_QR_CODE',\n  UPDATE_SELECTED_EVENT: 'UPDATE_SELECTED_EVENT',\n  ADD_DEPLOYED_CONTRACT_FUNCTIONS: 'ADD_DEPLOYED_CONTRACT_FUNCTIONS',\n  ADD_DEPLOYED_CONTRACT_CONSTANTS: 'ADD_DEPLOYED_CONTRACT_CONSTANTS',\n  ADD_OBSERVED_CONTRACT_FUNCTIONS: 'ADD_OBSERVED_CONTRACT_FUNCTIONS',\n  ADD_OBSERVED_CONTRACT_CONSTANTS: 'ADD_OBSERVED_CONTRACT_CONSTANTS',\n  UPDATE_PAST_CONTRACT_LOGS: 'UPDATE_PAST_CONTRACT_LOGS',\n  ADD_PAST_CONTRACT_LOGS: 'ADD_PAST_CONTRACT_LOGS',\n  UPDATE_BALANCE_CHECKED: 'UPDATE_BALANCE_CHECKED',\n  UPDATE_ERR_CHECKED: 'UPDATE_ERR_CHECKED',\n  REQUEST_TOKENS_AUTOSCAN: 'REQUEST_TOKENS_AUTOSCAN',\n  RECEIVE_GAS_AUTOSCAN: 'RECEIVE_GAS_AUTOSCAN',\n  UPDATE_DCF_RADIO: 'UPDATE_DCF_RADIO',\n  UPDATE_MAIN_CONTRACT_ADDRESS: 'UPDATE_MAIN_CONTRACT_ADDRESS',\n  UPDATE_DEPLOY_CONTRACT_FORM: 'UPDATE_DEPLOY_CONTRACT_FORM',\n  UPDATE_SELECTED_TRANSACTION: 'UPDATE_SELECTED_TRANSACTION',\n  CLEAR_TRANSACTION_TO_SEND: 'CLEAR_TRANSACTION_TO_SEND',\n  UPDATE_TRANSACTION_CONFIRMATION: 'UPDATE_TRANSACTION_CONFIRMATION',\n  UPDATE_TRANSACTION: 'UPDATE_TRANSACTION',\n  ADD_TRANSACTION: 'ADD_TRANSACTION',\n  DISPLAY_GLOBAL_NOTIFICATION: 'DISPLAY_GLOBAL_NOTIFICATION',\n  UPDATE_TRANSACTION_TO_SEND: 'UPDATE_TRANSACTION_TO_SEND',\n  REQUEST_GAS_STATS: 'REQUEST_GAS_STATS',\n  RECEIVE_GAS_STATS: 'RECEIVE_GAS_STATS',\n  EMPTY_SELECTED_CONTRACT: 'EMPTY_SELECTED_CONTRACT',\n  SET_SELECTED_CONTRACT: 'SET_SELECTED_CONTRACT',\n  SET_TOKEN_TO_DELETE: 'SET_TOKEN_TO_DELETE',\n  DELETE_TOKEN: 'DELETE_TOKEN',\n  ADD_OBSERVED_TOKEN: 'ADD_OBSERVED_TOKEN',\n  CANCEL_TOKEN_TO_WATCH: 'CANCEL_TOKEN_TO_WATCH',\n  UPDATE_TOKEN_TO_WATCH: 'UPDATE_TOKEN_TO_WATCH',\n  ADD_OBSERVED_CONTRACT: 'ADD_OBSERVED_CONTRACT',\n  CANCEL_CONTRACT_TO_WATCH: 'CANCEL_CONTRACT_TO_WATCH',\n  UPDATE_CONTRACT_TO_WATCH: 'UPDATE_CONTRACT_TO_WATCH',\n  CLOSE_MODAL: 'CLOSE_MODAL',\n  DISPLAY_MODAL: 'DISPLAY_MODAL',\n  CREATE_INIT_WALLET_CONTRACT: 'CREATE_INIT_WALLET_CONTRACT',\n  UPDATE_EXCHANGE_RATES: 'UPDATE_EXCHANGE_RATES',\n  UPDATE_ETHER_PRICES: 'UPDATE_ETHER_PRICES',\n  EMPTY_SELECTED_WALLET: 'EMPTY_SELECTED_WALLET',\n  SET_SELECTED_WALLET: 'SET_SELECTED_WALLET',\n  UPDATE_DISPLAY_VALUE: 'UPDATE_DISPLAY_VALUE',\n  UPDATE_TOTAL_BALANCE: 'UPDATE_TOTAL_BALANCE',\n  SET_WALLETS: 'SET_WALLETS',\n  UPDATE_PROVIDER: 'UPDATE_PROVIDER',\n  UPDATE_BLOCKHEADER: 'UPDATE_BLOCKHEADER',\n  UPDATE_PEERCOUNT: 'UPDATE_PEERCOUNT',\n  UPDATE_CURRENCY_UNIT: 'UPDATE_CURRENCY_UNIT',\n  UPDATE_CONNECTED_NETWORK: 'UPDATE_CONNECTED_NETWORK',\n};\n","import Web3 from 'web3';\nimport { actionTypes } from './actionTypes.js';\n// import io from 'socket.io-client';\n// let socket = io('wss://streamer.cryptocompare.com')\n\n// const web3 = new Web3('ws://127.0.0.1:8546');\nconst web3 = new Web3(\n  'https://mainnet.infura.io/v3/2e1f7de617754b72a8a61bef3f7de966'\n);\n\nexport const updateContractName = name => dispatch => {\n  dispatch({\n    type: actionTypes.UPDATE_OBSERVED_CONTRACT_NAME,\n    payload: name,\n  });\n};\n\nexport const updateWalletContractName = name => dispatch => {\n  dispatch({\n    type: actionTypes.UPDATE_WALLET_CONTRACT_NAME,\n    payload: name,\n  });\n};\n\nexport const updateAddressName = walletData => dispatch => {\n  dispatch({\n    type: actionTypes.UPDATE_ADDRESS_NAME,\n    payload: walletData,\n  });\n};\n\nexport const updateTokenToSend = tokenData => dispatch => {\n  dispatch({\n    type: actionTypes.UPDATE_TOKEN_TO_SEND,\n    payload: tokenData,\n  });\n};\n\nexport const updateContractTokenBalance = token => dispatch => {\n  dispatch({\n    type: actionTypes.UPDATE_CONTRACT_TOKEN_BALANCE,\n    payload: token,\n  });\n};\n\nexport const updateAccountTokenBalance = token => dispatch => {\n  dispatch({\n    type: actionTypes.UPDATE_ACCOUNT_TOKEN_BALANCE,\n    payload: token,\n  });\n};\n\nexport const setEthereumProviderConfig = data => dispatch => {\n  dispatch({\n    type: actionTypes.SET_ETHEREUM_PROVIDER_CONFIG,\n    payload: data,\n  });\n};\n\nexport const updateWalletContracts = contract => dispatch => {\n  dispatch({\n    type: actionTypes.UPDATE_WALLET_CONTRACT,\n    payload: contract,\n  });\n  // TODO: data structs must match\n  // dispatch({\n  //   type: actionTypes.ADD_OBSERVED_CONTRACT,\n  //   payload: contract,\n  // });\n  dispatch({\n    type: actionTypes.DELETE_PENDING_CONTRACT,\n    payload: contract.value.transactionHash,\n  });\n};\n\nexport const updatePendingContracts = hash => dispatch => {\n  dispatch({\n    type: actionTypes.UPDATE_PENDING_CONTRACTS,\n    payload: hash,\n  });\n};\n\nexport const updateInitialDeployedContractMethodOutputs = outputs => dispatch => {\n  dispatch({\n    type: actionTypes.UPDATE_INITIAL_DEPLOYED_CONTRACT_METHOD_OUTPUTS,\n    payload: outputs,\n  });\n};\n\nexport const updateInitialObservedContractMethodOutputs = outputs => dispatch => {\n  dispatch({\n    type: actionTypes.UPDATE_INITIAL_OBSERVED_CONTRACT_METHOD_OUTPUTS,\n    payload: outputs,\n  });\n};\n\nexport const updateFunctionInput = input => dispatch => {\n  dispatch({\n    type: actionTypes.UPDATE_FUNCTION_INPUT,\n    payload: input,\n  });\n};\n\nexport const updateExecutingWallet = address => dispatch => {\n  dispatch({\n    type: actionTypes.UPDATE_EXECUTING_WALLET,\n    payload: address,\n  });\n};\n\nexport const emptySelectedFunction = func => dispatch => {\n  dispatch({\n    type: actionTypes.EMPTY_SELECTED_FUNCTION,\n    payload: func,\n  });\n};\n\nexport const updateSelectedFunction = func => dispatch => {\n  dispatch({\n    type: actionTypes.UPDATE_SELECTED_FUNCTION,\n    payload: func,\n  });\n};\n\nexport const updateJSON = json => dispatch => {\n  dispatch({\n    type: actionTypes.UPDATE_JSON_INTERFACE,\n    payload: json,\n  });\n};\n\nexport const updateQRCode = address => dispatch => {\n  dispatch({\n    type: actionTypes.UPDATE_QR_CODE,\n    payload: address,\n  });\n};\n\nexport const updateSelectedEvent = event => dispatch => {\n  dispatch({\n    type: actionTypes.UPDATE_SELECTED_EVENT,\n    payload: event,\n  });\n};\n\nexport const addDeployedContractFunctions = funcs => dispatch => {\n  dispatch({\n    type: actionTypes.ADD_DEPLOYED_CONTRACT_FUNCTIONS,\n    payload: funcs,\n  });\n};\n\nexport const addDeployedContractConstants = consts => dispatch => {\n  dispatch({\n    type: actionTypes.ADD_DEPLOYED_CONTRACT_CONSTANTS,\n    payload: consts,\n  });\n};\n\nexport const addObservedContractFunctions = funcs => dispatch => {\n  dispatch({\n    type: actionTypes.ADD_OBSERVED_CONTRACT_FUNCTIONS,\n    payload: funcs,\n  });\n};\n\nexport const addObservedContractConstants = consts => dispatch => {\n  dispatch({\n    type: actionTypes.ADD_OBSERVED_CONTRACT_CONSTANTS,\n    payload: consts,\n  });\n};\nexport const updateContractLog = newLog => dispatch => {\n  dispatch({\n    type: actionTypes.UPDATE_PAST_CONTRACT_LOGS,\n    payload: newLog,\n  });\n};\n\nexport const addPastContractLogs = contractWithLogs => dispatch => {\n  dispatch({\n    type: actionTypes.ADD_PAST_CONTRACT_LOGS,\n    payload: contractWithLogs,\n  });\n};\n\nexport const fetchTokensForAutoScan = accounts => {\n  const requestTokens = accounts => {\n    return {\n      type: actionTypes.REQUEST_TOKENS_AUTOSCAN,\n      payload: accounts,\n    };\n  };\n  const receiveTokens = tokens => {\n    return {\n      type: actionTypes.RECEIVE_GAS_AUTOSCAN,\n      payload: tokens,\n    };\n  };\n  const updateBalanceChecked = num => {\n    return {\n      type: actionTypes.UPDATE_BALANCE_CHECKED,\n      payload: num,\n    };\n  };\n  const updateErrChecked = num => {\n    return {\n      type: actionTypes.UPDATE_ERR_CHECKED,\n      payload: num,\n    };\n  };\n  return dispatch => {\n    dispatch(requestTokens(accounts));\n    const tokenListURL =\n      'https://raw.githubusercontent.com/MyEtherWallet/ethereum-lists/master/dist/tokens/eth/tokens-eth.json';\n\n    return fetch(tokenListURL)\n      .then(\n        response => response.json(),\n        error => {\n          console.warn('An error occurred in fetchTokensForAutoScan', error);\n          dispatch(\n            displayGlobalNotification({\n              display: true,\n              type: 'error',\n              msg: 'There was an error scanning tokens for autoscan',\n              duration: 5,\n            })\n          );\n        }\n      )\n      .then(async tokens => {\n        let balancesChecked = 0;\n        let errChecked = 0;\n        tokens.map(token => {\n          accounts.map(account => {\n            // let web3 = new Web3('ws://127.0.0.1:8546');\n\n            // balanceOf(address)\n            const callData = `0x70a08231000000000000000000000000${account\n              .substring(2)\n              .replace(' ', '')}`;\n\n            async function sendTransactionPromise(params) {\n              return new Promise((resolve, reject) => {\n                web3.eth\n                  .call({\n                    to: token.address.replace(' ', ''),\n                    data: callData,\n                  })\n                  .then(result => {\n                    dispatch(updateBalanceChecked((balancesChecked += 1)));\n                    const tokenAmt = web3.utils.toBN(result);\n\n                    const tokenAmtInEther = web3.utils.fromWei(\n                      tokenAmt,\n                      'ether'\n                    );\n\n                    // TODO along with the rest of this action.\n                    // not token name, changing/changed to token address\n                    // if (!tokenAmt.isZero()) {\n                    dispatch(\n                      addObservedToken({\n                        name: token.name,\n                        value: Object.assign({}, token, {\n                          amount: web3.utils.fromWei(tokenAmt, 'ether'),\n                        }),\n                      })\n                    );\n                    // }\n\n                    return null;\n                  })\n                  .catch(error => {\n                    console.error(error);\n                    dispatch(updateErrChecked((errChecked += 1)));\n                    errChecked += 1;\n                  });\n              });\n            }\n\n            sendTransactionPromise();\n\n            // console.log(yield call(sendTransactionPromise, sendParams))\n            // tx = yield call(sendTransactionPromise, sendParams);\n\n            // const promise = new Promise(web3.eth.call({\n            //   to: token.address.replace(' ', ''),\n            //   data: callData\n            // }))\n            // // console.log(promise)\n            // let tokenArray = web3.eth.call({\n            //   to: token.address.replace(' ', ''),\n            //   data: callData\n            // })\n            // .then((result) => {\n            //   console.log(result)\n            //   dispatch(updateBalanceChecked(balancesChecked += 1));\n            //   const tokenAmt = web3.utils.toBN(result);\n            //   return null;\n            // })\n            // .catch(function(error) {\n            //   console.error(error);\n            //   dispatch(updateErrChecked(errChecked += 1));\n            //   errChecked += 1;\n            //   // this.displayGlobalNotification({\n            //   //   display: true,\n            //   //   type: 'error',\n            //   //   msg: 'There was an error tokens for autoscan during a web3 call',\n            //   //   duration: 5,\n            //   // });\n            // });\n          });\n        });\n        // dispatch(receiveTokens(tokens));\n      });\n  };\n};\n\nexport const updateMainDCF = data => dispatch => {\n  dispatch({\n    type: actionTypes.UPDATE_MAIN_DCF,\n    payload: data,\n  });\n};\n\nexport const updateDCFRadio = data => dispatch => {\n  dispatch({\n    type: actionTypes.UPDATE_DCF_RADIO,\n    payload: data,\n  });\n};\n\nexport const updateMainContractAddress = data => dispatch => {\n  dispatch({\n    type: actionTypes.UPDATE_MAIN_CONTRACT_ADDRESS,\n    payload: data,\n  });\n};\n\nexport const updateDeployContractForm = data => dispatch => {\n  dispatch({\n    type: actionTypes.UPDATE_DEPLOY_CONTRACT_FORM,\n    payload: data,\n  });\n};\n\nexport const updateSelectedTransaction = tx => dispatch => {\n  dispatch({\n    type: actionTypes.UPDATE_SELECTED_TRANSACTION,\n    payload: tx,\n  });\n};\n\nexport const clearTransactionToSend = () => dispatch => {\n  dispatch({\n    type: actionTypes.CLEAR_TRANSACTION_TO_SEND,\n  });\n};\n\nexport const updateTransactionConfirmation = cn => dispatch => {\n  dispatch({\n    type: actionTypes.UPDATE_TRANSACTION_CONFIRMATION,\n    payload: cn,\n  });\n};\n\nexport const updateTransaction = txnInfo => dispatch => {\n  dispatch({\n    type: actionTypes.UPDATE_TRANSACTION,\n    payload: txnInfo,\n  });\n};\n\nexport const addTransaction = txHash => dispatch => {\n  dispatch({\n    type: actionTypes.ADD_TRANSACTION,\n    payload: txHash,\n  });\n};\n\nexport const displayGlobalNotification = msg => dispatch => {\n  dispatch({\n    type: actionTypes.DISPLAY_GLOBAL_NOTIFICATION,\n    payload: msg,\n  });\n};\n\nexport const updateTransactionToSend = tx => dispatch => {\n  dispatch({\n    type: actionTypes.UPDATE_TRANSACTION_TO_SEND,\n    payload: tx,\n  });\n};\n\nexport const fetchEthGasStationStats = gasStats => {\n  const requestGas = gasStats => {\n    return {\n      type: actionTypes.REQUEST_GAS_STATS,\n      payload: gasStats,\n    };\n  };\n  const receiveGas = jsonGasStats => {\n    return {\n      type: actionTypes.RECEIVE_GAS_STATS,\n      payload: jsonGasStats,\n    };\n  };\n  return dispatch => {\n    dispatch(requestGas(gasStats));\n    return fetch('https://ethgasstation.info/json/ethgasAPI.json')\n      .then(\n        response => response.json(),\n        error => {\n          console.warn('An error occurred.', error);\n          this.displayGlobalNotification({\n            display: true,\n            type: 'error',\n            msg: 'There was an error fetching gas stats',\n            duration: 5,\n          });\n        }\n      )\n      .then(jsonGasStats => {\n        dispatch(receiveGas(jsonGasStats));\n      });\n  };\n};\n\nexport const emptySelectedContract = empty => dispatch => {\n  dispatch({\n    type: actionTypes.EMPTY_SELECTED_CONTRACT,\n    payload: empty,\n  });\n};\n\nexport const selectedContract = contract => dispatch => {\n  dispatch({\n    type: actionTypes.SET_SELECTED_CONTRACT,\n    payload: contract,\n  });\n};\n\nexport const tokenToDelete = token => dispatch => {\n  dispatch({\n    type: actionTypes.SET_TOKEN_TO_DELETE,\n    payload: token,\n  });\n};\n\nexport const deleteToken = token => dispatch => {\n  dispatch({\n    type: actionTypes.DELETE_TOKEN,\n    payload: token,\n  });\n};\n\nexport const addObservedToken = token => dispatch => {\n  dispatch({\n    type: actionTypes.ADD_OBSERVED_TOKEN,\n    payload: token,\n  });\n};\n\nexport const cancelTokenToWatch = () => dispatch => {\n  dispatch({\n    type: actionTypes.CANCEL_TOKEN_TO_WATCH,\n    payload: '',\n  });\n};\n\nexport const updateTokenToWatch = tokenInfo => dispatch => {\n  dispatch({\n    type: actionTypes.UPDATE_TOKEN_TO_WATCH,\n    payload: tokenInfo,\n  });\n};\n\nexport const addObservedContract = contract => dispatch => {\n  dispatch({\n    type: actionTypes.ADD_OBSERVED_CONTRACT,\n    payload: contract,\n  });\n};\n\nexport const cancelContractToWatch = () => dispatch => {\n  dispatch({\n    type: actionTypes.CANCEL_CONTRACT_TO_WATCH,\n    payload: '',\n  });\n};\n\nexport const updateContractToWatch = contractInfo => dispatch => {\n  dispatch({\n    type: actionTypes.UPDATE_CONTRACT_TO_WATCH,\n    payload: contractInfo,\n  });\n};\n\nexport const closeModal = modalName => dispatch => {\n  dispatch({\n    type: actionTypes.CLOSE_MODAL,\n    payload: modalName,\n  });\n};\n\nexport const displayModal = modalName => dispatch => {\n  dispatch({\n    type: actionTypes.DISPLAY_MODAL,\n    payload: modalName,\n  });\n};\n\nexport const createInitWalletContract = wc => dispatch => {\n  dispatch({\n    type: actionTypes.CREATE_INIT_WALLET_CONTRACT,\n    payload: wc,\n  });\n};\n\nexport const updateEtherPrices = exchangeRates => dispatch => {\n  dispatch({\n    type: actionTypes.UPDATE_EXCHANGE_RATES,\n    payload: exchangeRates,\n  });\n};\n\nexport const emptySelectedWallet = empty => dispatch => {\n  dispatch({\n    type: actionTypes.EMPTY_SELECTED_WALLET,\n    payload: empty,\n  });\n};\n\nexport const selectedWallet = wallet => dispatch => {\n  dispatch({\n    type: actionTypes.SET_SELECTED_WALLET,\n    payload: wallet,\n  });\n};\n\nexport const updateTotalBalance = totalBalance => dispatch => {\n  dispatch({\n    type: actionTypes.UPDATE_TOTAL_BALANCE,\n    payload: totalBalance,\n  });\n};\n\nexport const setWallets = Wallets => dispatch => {\n  dispatch({\n    type: actionTypes.SET_WALLETS,\n    payload: Wallets,\n  });\n};\n\nexport const updateProvider = provider => dispatch => {\n  dispatch({\n    type: actionTypes.UPDATE_PROVIDER,\n    payload: provider,\n  });\n};\n\nexport const updateBlockHeader = blockHeader => dispatch => {\n  dispatch({\n    type: actionTypes.UPDATE_BLOCKHEADER,\n    payload: blockHeader,\n  });\n};\n\nexport const updatePeerCount = PeerCount => dispatch => {\n  dispatch({\n    type: actionTypes.UPDATE_PEERCOUNT,\n    payload: PeerCount,\n  });\n};\n\nexport const updateCurrency = ({ CurrencyUnit }) => dispatch => {\n  dispatch({\n    type: actionTypes.UPDATE_CURRENCY_UNIT,\n    payload: CurrencyUnit,\n  });\n};\n\nexport const updateConnectedNetwork = network => dispatch => {\n  dispatch({\n    type: actionTypes.UPDATE_CONNECTED_NETWORK,\n    payload: network,\n  });\n};\n","import moment from 'moment';\nimport isFinite from 'lodash/isFinite';\nimport Web3 from 'web3';\nimport ethUtils from 'ethereumjs-util';\n\nconst BigNumber = ethUtils.BN;\n\nconst newWeb3 = new Web3();\n\nexport function updateTokenbalances(accounts, wallets, TokenContract) {\n  const addresses = Object.assign({}, accounts, wallets);\n\n  Object.keys(addresses).map(address => {\n    let balance;\n    TokenContract.methods\n      .balanceOf(address)\n      .call()\n      .then(res => {\n        console.log('res', res);\n        balance = res;\n      });\n  });\n}\n\nexport function displayPriceFormatter2(props, balance, currencyOverride) {\n  if (balance === undefined || isNaN(balance) || balance === null) balance = 0;\n  const currency = currencyOverride ? 'ETHER' : props.reducers.currency;\n  const totalBalance = balance.toString();\n  const exchangeRates = props.reducers.exchangeRates;\n  if (exchangeRates === undefined || exchangeRates === null) return;\n  let displayPrice;\n  if (currency === 'FINNEY') {\n    displayPrice = newWeb3.utils.fromWei(totalBalance, 'finney');\n  } else {\n    displayPrice = newWeb3.utils.fromWei(totalBalance, 'ether');\n    if (currency !== 'ETHER') {\n      displayPrice = Number(\n        `${Math.round(\n          `${displayPrice * exchangeRates[currency.toLowerCase()]}e2`\n        )}e-2`\n      );\n    }\n  }\n  return displayPrice;\n}\n/*\nReturns the from now time, using a javascript date obejct if less than 23 hours\n\n@method (timeFromNow)\n@return {String}\n*/\n\nexport function timeFromNow(string) {\n  const diff = new Date() - new Date(string);\n  const hours = parseInt(diff / 360000, 10);\n  if (hours <= 24) return '(Less than a day ago)';\n  return `(Less than ${Math.ceil(hours / 24)} days ago)`;\n}\n\nexport function floatToTime(input) {\n  let str = ' ~';\n  if (input < 1) {\n    str += `${Math.round((input * 60) / 10) * 10} seconds.`;\n  } else if (input < 60) {\n    str += `${Math.ceil(input)} minute(s).`;\n  } else {\n    str += `${Math.ceil(input / 60)} hour(s).`;\n  }\n  return str;\n}\n\nexport function getFullTime(string) {\n  let h = getHours(string);\n  const amORpm = h > 12 ? 'PM' : 'AM';\n  if (h > 12) h %= 12;\n\n  return `${getDayOfWeek(string)}, ${getMonthName(string)} ${getDate(\n    string\n  )}, ${getYear(string)} ${h}:${getMinutes(string)} ${amORpm}`;\n}\n\nexport function getMinutes(string) {\n  const d = new Date(string);\n  return d.getMinutes();\n}\n\nexport function getHours(string) {\n  const d = new Date(string);\n  return d.getHours();\n}\n\nexport function getYear(string) {\n  const d = new Date(string);\n  return d.getFullYear();\n}\n\nexport function getDayOfWeek(string) {\n  const days = [\n    'Sunday',\n    'Monday',\n    'Tuesday',\n    'Wednesday',\n    'Thursday',\n    'Friday',\n    'Saturday',\n  ];\n  const d = new Date(string);\n  return days[d.getDay()];\n}\n\nexport function getDate(string) {\n  const d = new Date(string);\n  return d.getDate();\n}\n\nexport function getMonthName(string) {\n  const monthNames = [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December',\n  ];\n  const d = new Date();\n  return monthNames[d.getMonth()];\n}\n\nexport function toNotWei(totalBalance, currency) {\n  return currency === 'FINNEY'\n    ? newWeb3.utils.fromWei(totalBalance, 'finney')\n    : newWeb3.utils.fromWei(totalBalance, 'ether');\n}\n\nexport function displayPriceFormatter(props, balance, currencyOverride) {\n  if (balance === undefined || isNaN(balance) || balance === null) {\n    balance = new BigNumber(0);\n  }\n  const currency = currencyOverride ? 'ETHER' : props.reducers.currency;\n  const totalBalance = new BigNumber(balance);\n  const exchangeRates = props.reducers.exchangeRates;\n  if (exchangeRates === undefined || exchangeRates === null) return;\n  let displayPrice;\n  if (currency === 'FINNEY') {\n    displayPrice = newWeb3.utils.fromWei(totalBalance, 'finney');\n  } else {\n    displayPrice = newWeb3.utils.fromWei(totalBalance, 'ether');\n    if (currency !== 'ETHER') {\n      displayPrice = Number(\n        `${Math.round(\n          `${displayPrice * exchangeRates[currency.toLowerCase()]}e2`\n        )}e-2`\n      );\n    }\n  }\n  return displayPrice;\n}\n\nexport async function getCryptoComparePrices() {\n  // TODO :  used to update transactions as well\n  // TODO : extraParams field in url\n  let url =\n    'https://min-api.cryptocompare.com/data/pricehistorical?fsym=ETH&tsyms=BTC,USD,EUR,GBP,BRL&ts=';\n  url += moment().unix();\n  return fetch(url)\n    .then(resp => {\n      if (resp && resp.status === 200) return resp.json();\n    })\n    .then(respJSON => {\n      if (respJSON.ETH) {\n        const body = respJSON.ETH;\n        const exchangeRates = {};\n        // eslint-disable-next-line\n        Object.keys(body).map(key => {\n          if (body[key] && isFinite(body[key]))\n            exchangeRates[key.toLowerCase()] = body[key];\n        });\n        return exchangeRates;\n      }\n    })\n    .catch(err => {\n      console.warn(\n        `Cannot connect to https://min-api.cryptocompare.com/ to get price ticker data, \n        please check your internet connection.${err}`\n      );\n      return err;\n    });\n}\n\nexport function s4() {\n  return Math.floor((1 + Math.random()) * 0x10000)\n    .toString(16)\n    .substring(1);\n}\n/**\nCreated random 32 byte string\n\n@method random32Bytes\n*/\nexport function random32Bytes() {\n  let randomBytes;\n  for (let i = 0; i < 16; i++) randomBytes += s4();\n  return randomBytes;\n}\n\nexport async function checkNetwork(web3, cb) {\n  try {\n    return web3.eth\n      .getBlock(0)\n      .then(block => {\n        switch (block.hash) {\n          case '0xd4e56740f876aef8c010b86a40d5f56745a118d0906a34e69aec8c0db1cb8fa3':\n            return 'main';\n          case '0x6341fd3daf94b748c72ced5a5b26028f2474f5f00d824504e4fa37a75767e177':\n            return 'rinkeby';\n          case '0x41941023680923e0fe4d74a34bdac8141f2540e3ae90623718e47d66d1ca4a2d':\n            return 'ropsten';\n          case '0xa3c565fc15c7478862d50ccd6561e3c06b24cc509bf388941c25ea985ce32cb9':\n            return 'kovan';\n          default:\n            return 'private';\n        }\n      })\n      .then(resp => cb(resp));\n  } catch (err) {\n    console.warn('web3 provider not open');\n    return err;\n  }\n}\n\nexport function nameProvider(prov) {\n  switch (prov.constructor.name) {\n    case 'MetamaskInpageProvider':\n      return 'metamask';\n    case 'WebsocketProvider':\n      return 'geth';\n    default:\n      return 'unknown';\n  }\n}\n\nexport function createNewAccount(web3, cb) {\n  alert('https://github.com/ethereum/web3.js/issues/494');\n  alert('https://github.com/ethereum/go-ethereum/issues/2723');\n}\n\nexport function getAccounts(web3, setWallets, updateTotalBalance) {\n  try {\n    web3.eth.getAccounts().then(accounts => {\n      let totalBalance = new BigNumber(0);\n      accounts.forEach(acc => {\n        const account = acc;\n        web3.eth.getBalance(acc, (err, balance) => {\n          setWallets({ account, balance: new BigNumber(balance) });\n          totalBalance = totalBalance.add(new BigNumber(balance));\n          updateTotalBalance(totalBalance);\n        });\n      });\n    });\n  } catch (err) {\n    console.warn('web3 provider not open');\n    return err;\n  }\n}\n\nexport function listenForIncomingTransactions(web3, accounts) {\n  // console.log('listenForIncomingTransactions');\n  // try {\n  //   let subscription = web3.eth\n  //     .subscribe('pendingTransactions', (err, res) => {\n  //       if (err) console.log(err);\n  //       if (res) {\n  //         console.log(res);\n  //       }\n  //     })\n  //     .on('data', function(transaction) {\n  //       console.log(transaction);\n  //     })\n  //     .on('error', function(error) {\n  //       console.log(error);\n  //     });\n  // } catch (err) {\n  //   console.warn('err in listen');\n  // }\n}\n\nexport function updatePendingConfirmations(\n  block,\n  web3,\n  transactions,\n  updateTransaction\n) {\n  if (!transactions) return;\n\n  const pending = Object.keys(transactions).filter(tx => {\n    return transactions[tx].confirmationNumber === 'Pending';\n  });\n\n  if (pending.length === 0) return;\n\n  const currentBlock = block.number;\n  pending.map((txHash, index) => {\n    web3.eth.getTransactionReceipt(txHash).then(receipt => {\n      if (receipt === null) return;\n      const confirmations = currentBlock - receipt.blockNumber;\n      receipt.confirmationNumber = confirmations;\n      updateTransaction({\n        name: [receipt.transactionHash],\n        value: receipt,\n      });\n    });\n  });\n}\n\nexport function updateTransactionConfirmation(\n  block,\n  web3,\n  transactions,\n  updateTransactionConfirmation\n) {\n  if (!transactions) return;\n\n  const unconfirmed = Object.keys(transactions).filter(tx => {\n    return (\n      transactions[tx].confirmationNumber !== 'Pending' &&\n      transactions[tx].confirmationNumber < 12\n    );\n  });\n\n  if (unconfirmed.length === 0) return;\n\n  const currentBlock = block.number;\n  unconfirmed.map((txHash, index) => {\n    web3.eth.getTransaction(txHash, (error, tx) => {\n      if (error) console.warn('error with transaction hash: ', txHash);\n      const confirmations = currentBlock - tx.blockNumber;\n      updateTransactionConfirmation({\n        name: [txHash],\n        value: confirmations,\n      });\n    });\n  });\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport shortid from 'shortid';\n\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { Identicon } from 'ethereum-react-components';\nimport { updateSelectedTransaction, displayModal } from '../../actions/actions';\n\nimport {\n  getMonthName,\n  getDate,\n  displayPriceFormatter,\n} from '../../utils/utils';\n\n// snapshotted\nconst TransactionInfo = props => {\n  const cn = props.tx.confirmationNumber;\n  return (\n    <td className=\"info\">\n      {cn === 'Pending'\n        ? 'Pending...'\n        : cn > 12\n        ? '12 of 12 Confirmations'\n        : `${cn} of 12 Confirmations`}\n    </td>\n  );\n};\n\nconst MinusIcon = () => {\n  return (\n    <td>\n      <i className=\"icon-arrow-right minus\" />\n    </td>\n  );\n};\n\nconst DateInfo = props => {\n  return (\n    <td\n      className=\"time simptip-position-right simptip-movable\"\n      data-tool-tip={props.tx.dateSent}\n    >\n      <h2>{getMonthName(props.tx.dateSent)}</h2>\n      <p>{getDate(props.tx.dateSent)}</p>\n    </td>\n  );\n};\n\nconst PendingIcons = props => {\n  return (\n    <React.Fragment>\n      <i className=\"icon-ban\" />\n      <i className=\"icon-reload\" />\n    </React.Fragment>\n  );\n};\n\nexport class TransactionItem extends Component {\n  constructor(props) {\n    super(props);\n    this.updateToTransaction = this.updateToTransaction.bind(this);\n  }\n\n  renderProgressBar(tx) {\n    this.state = {\n      completed:\n        tx.confirmationNumber !== 'Pending' ? tx.confirmationNumber : 0,\n    };\n    return (\n      <React.Fragment>\n        {tx.confirmationNumber === 'Pending' ? (\n          <LinearProgress />\n        ) : (\n          <LinearProgress\n            variant=\"determinate\"\n            value={(100 / 12) * this.state.completed}\n          />\n        )}\n      </React.Fragment>\n    );\n  }\n\n  updateToTransaction(e) {\n    e.stopPropagation();\n    console.warn('todo: moved from security icon and need to pudate');\n  }\n\n  renderAddressLink(address) {\n    return (\n      <span className=\"address dapp-shorten-text not-ens-name\">\n        <Identicon\n          classes=\"dapp-identicon dapp-tiny\"\n          title\n          size=\"tiny\"\n          address={address}\n        />\n        <Link\n          to={{ pathname: `/send-from/${address}` }}\n          title={address}\n          onClick={e => this.updateToTransaction(e)}\n        >\n          {address}\n        </Link>\n      </span>\n    );\n  }\n\n  // snapshotted\n  renderTransactionType(tx) {\n    // TODO: transaction type\n    return (\n      <td className=\"account-name\">\n        <h2>{tx.transactionType ? tx.transactionType : 'Transaction Type'}</h2>\n        <p>\n          {this.renderAddressLink(tx.from)}\n          <span className=\"arrow\">→</span>\n          {this.renderAddressLink(tx.to)}\n        </p>\n      </td>\n    );\n  }\n\n  // snapshotted\n  renderTransactionAmount(tx) {\n    return (\n      <td className=\"transaction-amount minus\">\n        - {`${displayPriceFormatter(this.props, tx.value, 'ETHER')} ETHER`}\n      </td>\n    );\n  }\n\n  render() {\n    const tx = this.props.transaction;\n    return (\n      <tr\n        className={tx.confirmationNumber === 'Pending' ? 'unconfirmed' : ''}\n        key={shortid.generate()}\n        data-transaction-hash={tx.transactionHash}\n        data-block-hash={tx.blockHash}\n        onClick={e => {\n          if (e.target.tagName !== 'A') {\n            this.props.updateSelectedTransaction(tx);\n            this.props.displayModal('displayTransaction');\n          }\n        }}\n      >\n        <DateInfo tx={tx} />\n        {this.renderTransactionType(tx)}\n        <td>{tx.confirmationNumber === 'Pending' ? <PendingIcons /> : null}</td>\n        <TransactionInfo tx={tx} />\n        {this.renderTransactionAmount(tx)}\n        <MinusIcon />\n      </tr>\n    );\n  }\n}\nconst mapStateToProps = state => ({\n  ...state,\n});\n\nexport default connect(\n  mapStateToProps,\n  {\n    updateSelectedTransaction,\n    displayModal,\n  }\n)(TransactionItem);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport shortid from 'shortid';\n\nimport TransactionItem from './TransactionItem';\n\nconst sortOptionsArr = [\n  {\n    displayName: 'Confirmations',\n    txKey: 'confirmationNumber',\n  },\n  {\n    displayName: 'Date',\n    txKey: 'dateSent',\n  },\n  {\n    displayName: 'Nonce (experimental)',\n    txKey: 'none',\n  },\n  {\n    displayName: 'Amount',\n    txKey: 'value',\n  },\n  {\n    displayName: 'Gas Used',\n    txKey: 'gasUsed',\n  },\n  {\n    displayName: 'Block Number',\n    txKey: 'blockNumber',\n  },\n];\n\nconst searchOptionsArr = [\n  {\n    displayName: 'To',\n    txKey: 'to',\n  },\n  {\n    displayName: 'From',\n    txKey: 'from',\n  },\n  {\n    displayName: 'TransactionType (experimental)',\n    txKey: 'transactionType',\n  },\n];\n\nexport class LatestTransactions extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ...this.props,\n      filterOptions: {\n        searchValue: '',\n        searchField: 'none',\n        ascending: 'false',\n        sortOption: 'dateSent',\n      },\n      filteredTransactions: [],\n    };\n\n    this.fetchTransactions = this.fetchTransactions.bind(this);\n    this.updateSearchValue = this.updateSearchValue.bind(this);\n    this.filterSearchValue = this.filterSearchValue.bind(this);\n    this.selectSearchField = this.selectSearchField.bind(this);\n    this.selectSortOption = this.selectSortOption.bind(this);\n    this.sortOptions = this.sortOptions.bind(this);\n    this.toggleSortDirection = this.toggleSortDirection.bind(this);\n    this.sortTransactions = this.sortTransactions.bind(this);\n  }\n\n  // shouldComponentUpdate(prevProps, prevState) {\n  //   console.log(this.state.filterOptions)\n  //   console.log(prevState.filterOptions)\n  //   console.log(this.state)\n  //   if (this.props.transactions !== prevProps.transactions) {\n  //     this.filterSearchValue();\n  //     this.sortOptions();\n  //     this.sortTransactions();\n  //     return true;\n  //   }\n  //   if (this.state.filterOptions !== prevState.filterOptions) {\n  //     this.filterSearchValue();\n  //     this.sortOptions();\n  //     this.sortTransactions();\n  //     return true;\n  //   }\n  //   return false;\n  // }\n\n  fetchTransactions() {\n    let transactions = this.state.filteredTransactions;\n    if (transactions.length === 0) {\n      transactions = Object.keys(this.props.transactions).map(\n        key => this.props.transactions[key]\n      );\n    }\n    return transactions;\n  }\n\n  selectSortOption(e) {\n    this.setState({\n      filterOptions: {\n        ...this.state.filterOptions,\n        sortOption: e.target.value,\n      },\n    });\n    this.sortOptions();\n  }\n\n  sortOptions(e) {\n    console.log(this.state);\n    const transactions = this.fetchTransactions();\n    const field = this.state.filterOptions.sortOption;\n\n    if (\n      this.state.filterOptions.sortOption !== 'none' &&\n      this.state.filterOptions.sortOption !== ''\n    ) {\n      const sorted = transactions.sort((a, b) => {\n        return b[field] - a[field];\n      });\n      this.setState({ filteredTransactions: sorted });\n    } else {\n      this.setState({ filteredTransactions: transactions });\n    }\n  }\n\n  updateSearchValue(e) {\n    console.log(e.target.value);\n    this.setState(\n      {\n        filterOptions: {\n          ...this.state.filterOptions,\n          searchValue: e.target.value,\n        },\n      },\n      this.filterSearchValue()\n    );\n  }\n\n  filterSearchValue(e) {\n    const transactions = this.fetchTransactions();\n    console.log(transactions);\n    console.log(this.state.filterOptions);\n    if (\n      this.state.filterOptions.searchValue !== '' &&\n      this.state.filterOptions.searchField !== 'none'\n    ) {\n      const filteredArr = transactions.filter(tx => {\n        const txValue = tx[this.state.filterOptions.searchField].toLowerCase();\n        const searchValue = this.state.filterOptions.searchValue.toLowerCase();\n        return txValue.includes(searchValue);\n      });\n      console.log(filteredArr);\n      this.setState({ filteredTransactions: filteredArr });\n    } else {\n      this.setState({ filteredTransactions: transactions });\n    }\n  }\n\n  selectSearchField(e) {\n    this.setState({\n      filterOptions: {\n        ...this.state.filterOptions,\n        searchField: e.target.value,\n      },\n    });\n    // this.filterSearchValue();\n  }\n\n  toggleSortDirection(e) {\n    this.setState({\n      filterOptions: {\n        ...this.state.filterOptions,\n        ascending: !this.state.filterOptions.ascending,\n      },\n    });\n    this.sortTransactions();\n  }\n\n  sortTransactions() {\n    this.setState({\n      filteredTransactions: this.state.filteredTransactions.reverse(),\n    });\n  }\n\n  renderSearchField() {\n    return (\n      <React.Fragment>\n        <h2>Latest transactions</h2>\n        <br />\n        <input\n          type=\"text\"\n          className=\"filter-transactions\"\n          placeholder=\"Filter transactions\"\n          onKeyUp={e => this.updateSearchValue(e)}\n        />\n        <select\n          style={{ marginLeft: '20px' }}\n          onChange={e => this.selectSearchField(e)}\n          value={this.state.filterOptions.searchField}\n        >\n          <option key={shortid.generate()} value=\"none\" />\n          {searchOptionsArr.map((val, i) => (\n            <option key={shortid.generate()} value={val.txKey}>\n              {val.displayName}\n            </option>\n          ))}\n        </select>\n      </React.Fragment>\n    );\n  }\n\n  renderSortOptions() {\n    return (\n      <React.Fragment>\n        <select\n          style={{ marginLeft: '20px' }}\n          onChange={e => this.selectSortOption(e)}\n          value={this.state.filterOptions.sortOption}\n        >\n          <option key={shortid.generate()} value=\"none\" />\n          {sortOptionsArr.map((val, i) => (\n            <option key={shortid.generate()} value={val.txKey}>\n              {val.displayName}\n            </option>\n          ))}\n        </select>\n      </React.Fragment>\n    );\n  }\n\n  renderDirectionalIcon() {\n    const icon = this.state.filterOptions.ascending ? 'up' : 'down';\n    return (\n      <i\n        className={`icon-arrow-${icon}`}\n        style={{ marginLeft: '20px' }}\n        onClick={e => this.toggleSortDirection(e)}\n      />\n    );\n  }\n\n  renderTransactions() {\n    // console.log(this.state)\n    // let transactions = this.state.transactions;\n    let transactions;\n    if (this.state.filteredTransactions.length !== 0) {\n      transactions = this.state.filteredTransactions;\n    } else {\n      transactions = Object.keys(this.props.transactions).map(hash => {\n        return this.props.transactions[hash];\n      });\n    }\n\n    // let transactions = this.state.filteredTransactions;\n    // let txArr = Object.keys(transactions).map(hash => {\n    //   return transactions[hash];\n    // });\n    return (\n      <table className=\"dapp-zebra transactions\">\n        <tbody>\n          {transactions.map(tx => (\n            <TransactionItem key={shortid.generate()} transaction={tx} />\n          ))}\n        </tbody>\n      </table>\n    );\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        {this.renderSearchField()}\n        {this.renderSortOptions()}\n        {this.renderDirectionalIcon()}\n        {this.renderTransactions()}\n      </React.Fragment>\n    );\n  }\n}\nconst mapStateToProps = state => ({\n  ...state,\n});\n\nexport default connect(\n  mapStateToProps,\n  null\n)(LatestTransactions);\n","import React from 'react';\n\nexport const NoMatchingTransaction = () => {\n  return (\n    <table className=\"dapp-zebra transactions\">\n      <tbody>\n        <tr className=\"full-width\">\n          <td colSpan=\"3\">No matching transactions found.</td>\n        </tr>\n      </tbody>\n    </table>\n  );\n};\n\nexport default NoMatchingTransaction;\n","// \"0x11485c5f164d6a67a72eee9093b2581d1c304094\"\n\n// Token Interface\n\nexport const tokenInterface = [\n  {\n    type: 'function',\n    name: 'name',\n    constant: true,\n    inputs: [],\n    outputs: [\n      {\n        name: '',\n        type: 'string',\n      },\n    ],\n  },\n  {\n    type: 'function',\n    name: 'decimals',\n    constant: true,\n    inputs: [],\n    outputs: [\n      {\n        name: '',\n        type: 'uint8',\n      },\n    ],\n  },\n  {\n    type: 'function',\n    name: 'balanceOf',\n    constant: true,\n    inputs: [\n      {\n        name: '',\n        type: 'address',\n      },\n    ],\n    outputs: [\n      {\n        name: '',\n        type: 'uint256',\n      },\n    ],\n  },\n  {\n    type: 'function',\n    name: 'symbol',\n    constant: true,\n    inputs: [],\n    outputs: [\n      {\n        name: '',\n        type: 'string',\n      },\n    ],\n  },\n  {\n    type: 'function',\n    name: 'transfer',\n    constant: false,\n    inputs: [\n      {\n        name: '_to',\n        type: 'address',\n      },\n      {\n        name: '_value',\n        type: 'uint256',\n      },\n    ],\n    outputs: [],\n  },\n  {\n    type: 'constructor',\n    inputs: [\n      {\n        name: '_supply',\n        type: 'uint256',\n      },\n      {\n        name: '_name',\n        type: 'string',\n      },\n      {\n        name: '_decimals',\n        type: 'uint8',\n      },\n      {\n        name: '_symbol',\n        type: 'string',\n      },\n    ],\n  },\n  {\n    name: 'Transfer',\n    type: 'event',\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        name: 'from',\n        type: 'address',\n      },\n      {\n        indexed: true,\n        name: 'to',\n        type: 'address',\n      },\n      {\n        indexed: false,\n        name: 'value',\n        type: 'uint256',\n      },\n    ],\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: '_spender',\n        type: 'address',\n      },\n      {\n        name: '_value',\n        type: 'uint256',\n      },\n    ],\n    name: 'approve',\n    outputs: [\n      {\n        name: 'success',\n        type: 'bool',\n      },\n    ],\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        name: '',\n        type: 'address',\n      },\n      {\n        name: '',\n        type: 'address',\n      },\n    ],\n    name: 'allowance',\n    outputs: [\n      {\n        name: '',\n        type: 'uint256',\n      },\n    ],\n    type: 'function',\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: 'totalSupply',\n    outputs: [{ name: '', type: 'uint256' }],\n    payable: false,\n    type: 'function',\n  },\n];\n\n// TokenContract = new web3.eth.Contract(tokenInterface);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport shortid from 'shortid';\n\nimport NumberFormat from 'react-number-format';\nimport { Identicon } from 'ethereum-react-components';\nimport { selectedWallet } from '../../actions/actions';\nimport * as Utils from '../../utils/utils';\nimport * as Actions from '../../actions/actions';\n\nimport { tokenInterface } from '../../constants/TokenInterfaceConstant';\n\nexport class TokenListForItems extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  getTokenBalanceForAddress(untrackedTokens) {\n    const walletAddress = this.props.address;\n    const ObservedTokens = this.props.ObservedTokens;\n\n    // if observedTokens Empty\n    // or if no tokens in walletaddress\n    // then return\n    if (ObservedTokens) {\n      untrackedTokens.map(tokenAddress => {\n        const web3 = this.props.web3.web3Instance;\n        const TokenContract = new web3.eth.Contract(tokenInterface);\n        TokenContract.options.address = tokenAddress;\n\n        try {\n          TokenContract.methods\n            .balanceOf(walletAddress)\n            .call()\n            .then(result => {\n              if (result == 0) {\n                return;\n              }\n\n              const tokenResult = ObservedTokens[tokenAddress];\n              tokenResult.balance = result;\n\n              if (this.props.addressType === 'Wallets') {\n                this.props.updateAccountTokenBalance({\n                  account: walletAddress,\n                  value: tokenResult,\n                  tokenAddress,\n                });\n                return;\n              }\n              if (this.props.addressType === 'WalletContracts') {\n                this.props.updateContractTokenBalance({\n                  account: walletAddress,\n                  value: tokenResult,\n                  tokenAddress,\n                });\n              }\n            });\n        } catch (err) {\n          console.warn('Err :', err);\n          this.props.displayGlobalNotification({\n            display: true,\n            type: 'error',\n            msg: err.message,\n          });\n        }\n      });\n    }\n  }\n\n  render() {\n    const address = this.props.address;\n\n    const currentObservedTokens = new Set(\n      Object.keys(this.props.ObservedTokens)\n    );\n    console.log(currentObservedTokens);\n\n    let tokenCheck;\n\n    // TODO: should extract this javascript into separate function\n    // returns null html\n    console.log(this.props.addressType);\n    if (this.props.addressType === 'Wallets') {\n      tokenCheck = this.props.Wallets[address].tokens;\n    } else if (this.props.addressType === 'WalletContracts') {\n      tokenCheck = this.props.WalletContracts[address].tokens;\n    } else {\n      return null;\n    }\n\n    const currentWalletsTokens = tokenCheck || [];\n\n    console.log(currentObservedTokens);\n    console.log(currentWalletsTokens);\n    console.log(tokenCheck);\n\n    if (\n      // currentObservedTokens !== undefined || currentWalletsTokens !== undefined\n      // &&\n      tokenCheck !== undefined\n    ) {\n      const trackedTokens = new Set(Object.keys(currentWalletsTokens));\n      console.log(trackedTokens);\n      const untrackedTokens = Array.from(\n        new Set([...currentObservedTokens].filter(x => !trackedTokens.has(x)))\n      );\n      console.log(untrackedTokens);\n      this.getTokenBalanceForAddress(untrackedTokens);\n    }\n\n    const tokens = tokenCheck;\n    console.log('renders countAmount / walletContracts+wallets ', tokens);\n\n    return (\n      <ul className=\"token-list\">\n        {tokens === undefined\n          ? null\n          : Object.keys(tokens).map(token => (\n              <li\n                key={shortid.generate()}\n                data-tooltip={`${tokens[token].name} (${\n                  tokens[token].balance\n                } ${tokens[token].symbol})`}\n                className=\"simptip-position-right simptip-movable\"\n              >\n                <Identicon\n                  classes=\"dapp-identicon dapp-tiny\"\n                  title\n                  size=\"tiny\"\n                  address={tokens[token].address}\n                />\n              </li>\n            ))}\n      </ul>\n    );\n  }\n}\n\n// const mapStateToProps = state => {\n//   return state;\n// };\n\nconst mapStateToProps = state => ({\n  ObservedTokens: state.reducers.ObservedTokens,\n  Wallets: state.reducers.Wallets,\n  WalletContracts: state.reducers.WalletContracts,\n});\n\nexport default connect(\n  mapStateToProps,\n  { ...Actions }\n)(TokenListForItems);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport NumberFormat from 'react-number-format';\nimport { EthAddress, Identicon } from 'ethereum-react-components';\nimport { selectedWallet } from '../../actions/actions';\nimport { displayPriceFormatter } from '../../utils/utils';\nimport TokenListForItems from './TokenListForItems';\n\nexport class AccountItem extends Component {\n  constructor(props) {\n    super(props);\n    this.openAccountPage = this.openAccountPage.bind(this);\n  }\n\n  shouldComponentUpdate(prevProps, prevState) {\n    if (this.props.wallet !== prevProps.wallet) {\n      return true;\n    }\n    if (this.props.currency !== prevProps.currency) {\n      return true;\n    }\n    if (\n      this.props.reducers.exchangeRates !== prevProps.reducers.exchangeRates\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  openAccountPage(w) {\n    this.props.selectedWallet({\n      address: this.props.address,\n      number: this.props.number,\n      wallet: this.props.wallet,\n      currency: this.props.currency,\n      addressType: 'account',\n    });\n  }\n\n  renderBalance() {\n    const wallet = this.props.wallet;\n    return (\n      <React.Fragment>\n        <NumberFormat\n          className=\"account-balance\"\n          value={displayPriceFormatter(this.props, wallet.balance)}\n          displayType=\"text\"\n          thousandSeparator\n        />\n        <span> {this.props.currency} </span>\n      </React.Fragment>\n    );\n  }\n\n  renderTokens() {\n    const ot = this.props.ObservedTokens;\n    const tokenList = this.props.wallet.tokens;\n    const displayTokens =\n      (Object.keys(ot).length !== 0 && ot.constructor === Object) ||\n      tokenList !== undefined;\n    return (\n      <React.Fragment>\n        {displayTokens ? (\n          <TokenListForItems\n            addressType={this.props.addressType}\n            address={this.props.address}\n          />\n        ) : null}\n      </React.Fragment>\n    );\n  }\n\n  renderName() {\n    const number = this.props.number;\n    const name = this.props.wallet.name;\n    return (\n      <h3 className=\"not-ens-name\">\n        <i className={this.props.icon} title=\"Account\" />\n        &nbsp;\n        {!name ? `Account ${number}` : name}\n      </h3>\n    );\n  }\n\n  render() {\n    const address = this.props.address;\n    const AccountURL = `/account/${address}`;\n\n    return (\n      <React.Fragment>\n        <Link\n          to={{ pathname: AccountURL }}\n          onClick={this.openAccountPage}\n          className=\"wallet-box\"\n        >\n          <Identicon\n            classes=\"dapp-identicon dapp-small\"\n            title\n            size=\"small\"\n            address={this.props.address}\n          />\n          {this.renderTokens()}\n          {this.renderName()}\n          {this.renderBalance()}\n          <EthAddress short classes=\"account-id\" address={address} />\n        </Link>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  { selectedWallet }\n)(AccountItem);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport shortid from 'shortid';\nimport AccountItem from './elements/AccountItem';\n\nexport class Addresses extends Component {\n  render() {\n    if (this.props.reducers.Wallets !== undefined) {\n      const wallets = this.props.reducers.Wallets;\n      const icon = 'icon-key';\n      return (\n        <div className=\"wallet-box-list\">\n          {Object.keys(wallets).map((address, i) => (\n            <AccountItem\n              key={shortid.generate()}\n              number={i + 1}\n              icon={icon}\n              address={address}\n              wallet={wallets[address]}\n              currency={this.props.reducers.currency}\n              web3={this.props.web3}\n              reducers={this.props.reducers}\n              ObservedTokens={this.props.reducers.ObservedTokens}\n              addressType=\"Wallets\"\n              index={i}\n            />\n          ))}\n        </div>\n      );\n    }\n  }\n}\n\nconst mapStateToProps = state => {\n  return state;\n};\n\nexport default connect(mapStateToProps)(Addresses);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport makeBlockie from 'ethereum-blockies-base64';\nimport { updateTransactionToSend } from '../../actions/actions';\n\nconst ToolTip = props => {\n  return (\n    <span\n      className={props.classes}\n      title=\"This is a security icon.  If there were any change to the address,\n    the resulting icon would be a completely different one\"\n      src={props.icon}\n      style={props.divStyle}\n    >\n      <img\n        src={props.icon}\n        style={props.divStyle}\n        className=\"identicon-pixel\"\n        alt=\"\"\n      />\n    </span>\n  );\n};\n\nexport const SecurityIcon = props => {\n  const icon = makeBlockie(props.hash);\n  const divStyle = {\n    backgroundImage: `url(${icon})`,\n  };\n  function updateToTransaction(e) {\n    e.stopPropagation();\n    updateTransactionToSend({\n      name: 'to',\n      value: props.hash,\n    });\n  }\n  const { classes } = props;\n  return (\n    <React.Fragment>\n      <ToolTip classes={classes} icon={icon} divStyle={divStyle} />\n      {props.type === 'transactionHref' ? (\n        <Link\n          to={{ pathname: `/send-from/${props.hash}` }}\n          title={props.hash}\n          onClick={e => updateToTransaction(e)}\n        >\n          {props.hash}\n        </Link>\n      ) : (\n        ''\n      )}\n      {props.type === 'accountRoute' ? (\n        <Link\n          to={{ pathname: `/account/${props.hash}` }}\n          title={props.hash}\n          // onClick={e => updateToTransaction(e)}\n        >\n          {props.hash}\n        </Link>\n      ) : (\n        ''\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default connect(\n  null,\n  { updateTransactionToSend }\n)(SecurityIcon);\n","/**\nHelper functions\n* */\n\n/**\nThe Helpers class containing helper functions\n* */\n// TODO\n// Helpers = {};\n\n/**\nGet the default contract example\n@method getDefaultContractExample\n* */\n// TODO\n// Helpers.getDefaultContractExample = function(withoutPragma) {\n//   var source =\n//     'contract MyContract {\\n    /* Constructor */\\n    function MyContract() public {\\n\\n    }\\n}';\n\n//   if (withoutPragma) {\n//     return source;\n//   } else {\n//     var solcVersion;\n\n//     // Keep this for now as the Mist-API object will only be availabe from Mist version >= 0.8.9\n//     // so that older versions that will query code from wallet.ethereum.org won't use broken example code.\n//     if (typeof mist !== 'undefined' && mist.solidity && mist.solidity.version) {\n//       solcVersion = mist.solidity.version;\n//     } else {\n//       solcVersion = '0.4.6';\n//     }\n//     return 'pragma solidity ^' + solcVersion + ';\\n\\n' + source;\n//   }\n// };\n\n/**\nReruns functions reactively, based on an interval. Use it like so:\n\n    Helpers.rerun['10s'].tick();\n\n\n@method rerun\n* */\n\n// Helpers.rerun = {\n//   '10s': new ReactiveTimer(10),\n//   '1s': new ReactiveTimer(1)\n// };\n\n/**\nSort method for accounts and wallets to sort by balance\n\n@method sortByBalance\n* */\n// TODO\n\n// Helpers.sortByBalance = function(a, b) {\n//   return !b.disabled &&\n//     new BigNumber(b.balance, 10).gt(new BigNumber(a.balance, 10))\n//     ? 1\n//     : -1;\n// };\n\nexport function returnAddressName(address, props) {\n  const wallets = props.reducers.Wallets;\n  const walletArray = Object.keys(wallets).map(key => key);\n  const walletContracts = props.reducers.WalletContracts;\n  const walletContractArray = Object.keys(walletContracts).map(key => key);\n  const observedContracts = props.reducers.ObservedContracts;\n  const observedContractsArray = Object.keys(observedContracts).map(key => key);\n  const observedTokens = props.reducers.ObservedTokens;\n  const observedTokensArray = Object.keys(observedTokens).map(key => key);\n  let name;\n  if (walletArray.includes(address)) {\n    name = wallets[address].name;\n    // name || `Account ${wallets[address]}`;\n  } else if (walletContractArray.includes(address)) {\n    name = walletContracts[address]['contract-name'];\n  } else if (observedContractsArray.includes(address)) {\n    name = observedContracts[address]['contract-name'];\n  } else if (observedTokensArray.includes(address)) {\n    name = observedTokens[address].name;\n  }\n  return name;\n}\n\n/**\nSort method for accounts and wallets to sort by balance and remove empty addresses;\n\n@method sortByBalance\n* */\nexport function sortByBalance(wallets) {\n  return wallets\n    .filter(wallet => wallet.balance != 0)\n    .sort((a, b) => b.balance - a.balance);\n}\n\nexport function combineWallets(addresses, walletContracts) {\n  return sortByBalance(\n    Object.keys(addresses)\n      .map(address => {\n        return {\n          ...addresses[address],\n          address,\n          addressType: 'walletAddress',\n        };\n      })\n      .concat(\n        Object.keys(walletContracts).map(address => {\n          const contract = walletContracts[address];\n          return {\n            ...walletContracts,\n            address,\n            addressType: 'contractAddress',\n          };\n        })\n      )\n  );\n}\n\n/**\nReturn an account you own, from a list of accounts\n\n@method getOwnedAccountFrom\n@param {Array} accountList array of account addresses\n@return {Mixed} the account address of an account owned\n* */\n\n// TODO\n// Helpers.getOwnedAccountFrom = function(accountList) {\n//   // Load the accounts owned by user and sort by balance\n//   var accounts = EthAccounts.find({}, { sort: { balance: 1 } }).fetch();\n//   accounts.sort(Helpers.sortByBalance);\n\n//   // Looks for them among the wallet account owner\n//   var fromAccount = _.find(accounts, function(acc) {\n//     return accountList.indexOf(acc.address.toLowerCase()) >= 0;\n//   });\n\n//   return fromAccount ? fromAccount.address : '';\n// };\n\n/**\nClear localStorage\n\n@method getLocalStorageSize\n* */\nexport function getLocalStorageSize(localStorage) {\n  let size = 0;\n  if (localStorage) {\n    size += Object.keys(localStorage).map(key => {\n      return (localStorage[key].length * 2) / 1024 / 1024;\n    });\n  }\n\n  return size;\n}\n\n/**\nMake a ID out of a given hash and prefix.\n\n@method makeId\n@param {String} prefix\n@param {String} hash\n*/\nexport function makeId(prefix, hash) {\n  return typeof hash === 'string' || hash instanceof String\n    ? `${prefix}_${hash.replace('0x', '').substr(0, 10)}`\n    : null;\n}\n\n// https://stackoverflow.com/questions/1349404/generate-random-string-characters-in-javascript\nexport function makeID() {\n  let text = '';\n  const possible =\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  for (let i = 0; i < 5; i++)\n    text += possible.charAt(Math.floor(Math.random() * possible.length));\n  return text;\n}\n\n/**\nFormat a number based on decimal numbers\n\n@method formatNumberByDecimals\n@param {Number} number\n@param {Number} decimals\n*/\n\n// TODO\n// export function formatNumberByDecimals(number, decimals) {\n//   var numberFormat = '0,0.';\n\n//   for (var i = 0; i < Number(decimals); i++) {\n//     numberFormat += '0';\n//   }\n\n//   return EthTools.formatNumber(\n//     new BigNumber(number, 10).dividedBy(Math.pow(10, decimals)),\n//     numberFormat,\n//   );\n// }\n\n/**\nDisplay logs in the console for events.\n\n@method eventLogs\n*/\nexport function eventLogs(args) {\n  console.log('EVENT LOG: ', args);\n}\n\n/**\nCheck if we are on the correct chain and display an error.\n\n@method checkChain\n@param {Function} callback provide a callback, to get notified if successfull or error (will contain an error object as first parameter, if error)\n*/\n// TODO\n// export async function checkChain(callback) {\n//   // TODO deactivated for now!!! because we are using full contracts\n//   return callback(null);\n\n//   web3.eth.getCode(originalContractAddress, function(e, code) {\n//     if (code && code.length <= 2) {\n//       if (_.isFunction(callback)) callback('Wrong chain!');\n//     } else if (_.isFunction(callback)) callback(null);\n//   });\n// };\n\n/**\nCheck if the given wallet is a watch only wallet, by checking if we are one of owners in the wallet.\n\n@method isWatchOnly\n@param {String} id the id of the wallet to check\n*/\n// TODO\n// Helpers.isWatchOnly = function(id) {\n//   return !Wallets.findOne({\n//     _id: id,\n//     owners: { $in: _.pluck(EthAccounts.find({}).fetch(), 'address') }\n//   });\n// };\n\n/**\nShows a notification and plays a sound\n\n@method showNotification\n@param {String} i18nText\n@param {Object} the i18n values passed to the i18n text\n*/\n// . TODO\n// Helpers.showNotification = function(i18nText, values, callback) {\n//   if (Notification.permission === 'granted') {\n//     var notification = new Notification(\n//       TAPi18n.__(i18nText + '.title', values),\n//       {\n//         // icon: 'http://cdn.sstatic.net/stackexchange/img/logos/so/so-icon.png',\n//         body: TAPi18n.__(i18nText + '.text', values),\n//       },\n//     );\n\n//     if (_.isFunction(callback)) notification.onclick = callback;\n//   }\n//   if (typeof mist !== 'undefined') mist.sounds.bip();\n// };\n\n/**\nGets the docuement matching the given addess from the EthAccounts or Wallets collection.\n\n@method getAccountByAddress\n@param {String} address\n@param {Boolean} reactive\n*/\n// TODO\n// export function getAccountByAddress(address, reactive) {\n//   var options = reactive === false ? { reactive: false } : {};\n//   // if(_.isString(address))\n//   //     address = address.toLowerCase();\n//   return (\n//     EthAccounts.findOne({ address: address }, options) ||\n//     Wallets.findOne({ address: address }, options) ||\n//     CustomContracts.findOne({ address: address }, options)\n//   );\n// }\n\n/**\nGets the docuement matching the given query from the EthAccounts or Wallets collection.\n\n@method getAccounts\n@param {String} query\n@param {Boolean} reactive\n*/\n// TODO\n// export function getAccounts(query, reactive) {\n//   var options = reactive === false ? { reactive: false } : {};\n//   if (_.isString(query.address)) query.address = query.address.toLowerCase();\n//   return EthAccounts.find(query, options)\n//     .fetch()\n//     .concat(Wallets.find(query, options).fetch());\n// }\n\n/**\nGets the docuement matching the given addess from the EthAccounts or Wallets collection and returns its name or address.\n\n@method getAccountNameByAddress\n@param {String} name or address\n*/\n\n// TODO\n// Helpers.getAccountNameByAddress = function(address) {\n//   if (typeof address != 'undefined')\n//     var doc = Helpers.getAccountByAddress(address.toLowerCase());\n\n//   return doc ? doc.name : address;\n// };\n\n/**\nReactive wrapper for the moment package.\n\n@method moment\n@param {String} time    a date object passed to moment function.\n@return {Object} the moment js package\n* */\n\n// TODO\n// export function moment(time) {\n//   // react to language changes as well\n//   TAPi18n.getLanguage();\n\n//   if (_.isFinite(time) && moment.unix(time).isValid()) return moment.unix(time);\n//   else return moment(time);\n// }\n\n/**\nFormats a timestamp to any format given.\n\n    Helpers.formatTime(myTime, \"YYYY-MM-DD\")\n\n@method formatTime\n@param {String} time         The timestamp, can be string or unix format\n@param {String} format       the format string, can also be \"iso\", to format to ISO string, or \"fromnow\"\n@return {String} The formated time\n* */\n\n// TODO\n// Helpers.formatTime = function(time, format) {\n//   //parameters\n\n//   // make sure not existing values are not Spacebars.kw\n//   if (format instanceof Spacebars.kw) format = null;\n\n//   if (time) {\n//     if (_.isString(format) && !_.isEmpty(format)) {\n//       if (format.toLowerCase() === 'iso')\n//         time = Helpers.moment(time).toISOString();\n//       else if (format.toLowerCase() === 'fromnow') {\n//         // make reactive updating\n//         Helpers.rerun['10s'].tick();\n//         time = Helpers.moment(time).fromNow();\n//       } else time = Helpers.moment(time).format(format);\n//     }\n\n//     return time;\n//   } else return '';\n// };\n\n/**\nFormats a given transactions balance\n\n    Helpers.formatTransactionBalance(tx)\n\n@method formatTransactionBalance\n@param {String} value  the value to format\n@param {Object} exchangeRates  the exchange rates to use\n@param {String} unit  the unit to format to\n@return {String} The formated value\n* */\n\n// TODO\n// Helpers.formatTransactionBalance = function(value, exchangeRates, unit) {\n//   // make sure not existing values are not Spacebars.kw\n//   if (unit instanceof Spacebars.kw) unit = null;\n\n//   var unit = unit || EthTools.getUnit(),\n//     format = '0,0.00';\n\n//   if (\n//     (unit === 'usd' || unit === 'eur' || unit === 'btc') &&\n//     exchangeRates &&\n//     exchangeRates[unit]\n//   ) {\n//     if (unit === 'btc') format += '[000000]';\n//     else format += '[0]';\n\n//     var price = new BigNumber(String(web3.fromWei(value, 'ether')), 10).times(\n//       exchangeRates[unit].price\n//     );\n//     return EthTools.formatNumber(price, format) + ' ' + unit.toUpperCase();\n//   } else {\n//     return EthTools.formatBalance(value, format + '[0000000000000000] UNIT');\n//   }\n// };\n\n/**\nFormats an input and prepares it to be a template\n\n    Helpers.createTemplateDataFromInput(abiFunctionInput);\n\n@method createTemplateDataFromInput\n@param {object} input           The input object, out of an ABI\n@return {object} input          The input object with added variables to make it into a template\n* */\n\n// TODO\n// Helpers.createTemplateDataFromInput = function(input, key) {\n//   input = _.clone(input);\n\n//   input.index = key;\n//   input.typeShort = input.type.match(/[a-z]+/i);\n//   input.typeShort = input.typeShort[0];\n//   input.bits = input.type.replace(input.typeShort, '');\n//   input.displayName = input.name\n//     .replace(/([A-Z])/g, ' $1')\n//     .replace(\n//       /([\\-\\_])/g,\n//       '&thinsp;<span class=\"punctuation\">$1</span>&thinsp;'\n//     );\n\n//   if (\n//     input.type.indexOf('[') === -1 &&\n//     (input.typeShort === 'string' ||\n//       input.typeShort === 'uint' ||\n//       input.typeShort == 'int' ||\n//       input.typeShort == 'address' ||\n//       input.typeShort == 'bool' ||\n//       input.typeShort == 'bytes')\n//   ) {\n//     input.template = 'elements_input_' + input.typeShort;\n//   } else {\n//     input.template = 'elements_input_json';\n//   }\n\n//   return input;\n// };\n\n/**\nAdds the input value from a form field to the inputs array\n\n@method addInputValue\n@param {object} inputs          The current inputs\n@param {object} currentInput   The current input\n@return {Array} array of parameter values\n* */\n// TODO\n// Helpers.addInputValue = function(inputs, currentInput, formField) {\n//   return (\n//     _.map(inputs, function(input) {\n//       var value = _.isUndefined(input.value) ? '' : input.value;\n\n//       if (input.typeShort === 'bytes' && value === '') {\n//         value = '0x0000000000000000000000000000000000000000';\n//       }\n\n//       if (\n//         currentInput.name === input.name &&\n//         currentInput.type === input.type &&\n//         currentInput.index === input.index\n//       ) {\n//         if (input.type.indexOf('[') !== -1) {\n//           try {\n//             value = JSON.parse(formField.value);\n//           } catch (e) {\n//             value = [];\n//           }\n//         } else if (\n//           !_.isEmpty(formField.value) &&\n//           (input.typeShort === 'bytes' || input.typeShort === 'address')\n//         ) {\n//           // If it looks like hex, then add 0x before\n//           value = /^[0-9a-f]+$/i.test(formField.value.replace('0x', ''))\n//             ? '0x' + formField.value.replace('0x', '')\n//             : null;\n//         } else if (input.typeShort === 'bool') {\n//           value = !!formField.checked;\n//         } else if (input.typeShort === 'bytes') {\n//           value =\n//             formField.value || '0x0000000000000000000000000000000000000000';\n//         } else {\n//           value = formField.value || '';\n//         }\n\n//         if (\n//           input.typeShort === 'bytes' &&\n//           value === '0x0000000000000000000000000000000000000000'\n//         ) {\n//           input.value = '';\n//         } else {\n//           input.value = value;\n//         }\n//       }\n\n//       return value;\n//     }) || []\n//   );\n// };\n\n/**\n * Add space between camelCase text\n */\nexport function unCamelCaseToSentence(str) {\n  console.log(str);\n  str = str.replace(/([a-z\\xE0-\\xFF])([A-Z\\xC0\\xDF])(([^a-z0-9_]))/gi, '$1 $2');\n  console.log(str);\n  str = str.toLowerCase().replace(/^\\w|\\s\\w/g, upperCase);\n  console.log(str);\n  return str;\n}\n\n/**\n * \"Safer\" String.toUpperCase()\n */\nfunction upperCase(str) {\n  return str.toUpperCase();\n}\n\n/**\nTakes a camelcase and shows it with spaces\n\n@method toSentence\n@param {string} camelCase    A name in CamelCase or snake_case format\n@return {string} sentence    The same name, sanitized, with spaces\n* */\n// export function toSentence(inputString, noHTML) {\n//   console.log(inputString)\n//   if (typeof inputString === undefined) {\n//     return false;\n//   } else {\n//     inputString = inputString.replace(/[^a-z0-9_]/gi, '');\n//     console.log(inputString)\n//     noHTML === true\n//       ? inputString.replace(/([A-Z]+|[0-9]+)/g, ' $1').trim()\n//       : inputString\n//           .replace(/([A-Z]+|[0-9]+)/g, ' $1')\n//           .trim()\n//           // eslint-disable-next-line\n//           .replace(/([\\_])/g, '<span class=\"dapp-punctuation\">$1</span>');\n//     console.log(inputString)\n//     return inputString;\n//   }\n// }\n\n/**\n@method toSentence\n@param {string} camelCase    A name in CamelCase or snake_case format\n@return {string} sentence    The same name, sanitized, with spaces\n* */\nexport function toSentence(str) {\n  str = str\n    .replace(/[^a-z0-9_]/gi, '')\n    .replace(/_+/g, ' ')\n    .replace(/([A-Z]+|[0-9]+)/g, ' $1')\n    .trim()\n    .toLowerCase();\n\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\nexport function formatTokenCount(value, decimals) {\n  return Number((value /= Math.pow(10, decimals))).toString();\n}\n\n/**\nReturns true if Main is the current network.\n\n@method isOnMainNetwork\n@return {Bool}\n* */\n// TODO\n// isOnMainNetwork() {\n//   return Session.get('network') == 'main';\n// };\n\n/**\nENS Functions\n* */\nexport function sha3(web3, str, opt) {\n  return `0x${web3.utils.sha3(str, opt).replace('0x', '')}`;\n}\n\n// TODO\nexport function namehash(name) {\n  let node =\n    '0x0000000000000000000000000000000000000000000000000000000000000000';\n  if (name !== '') {\n    const labels = name.split('.');\n    for (let i = labels.length - 1; i >= 0; i--) {\n      node = sha3(node + sha3(labels[i]).slice(2), { encoding: 'hex' });\n    }\n  }\n  return node.toString();\n}\n\n// eslint-disable-next-line\n// var ensContractAbi = [\n//   {\n//     constant: true,\n//     inputs: [{ name: 'node', type: 'bytes32' }],\n//     name: 'resolver',\n//     outputs: [{ name: '', type: 'address' }],\n//     payable: false,\n//     type: 'function',\n//   },\n//   {\n//     constant: true,\n//     inputs: [{ name: 'node', type: 'bytes32' }],\n//     name: 'owner',\n//     outputs: [{ name: '', type: 'address' }],\n//     payable: false,\n//     type: 'function',\n//   },\n//   {\n//     constant: false,\n//     inputs: [\n//       { name: 'node', type: 'bytes32' },\n//       { name: 'label', type: 'bytes32' },\n//       { name: 'owner', type: 'address' },\n//     ],\n//     name: 'setSubnodeOwner',\n//     outputs: [],\n//     payable: false,\n//     type: 'function',\n//   },\n//   {\n//     constant: false,\n//     inputs: [\n//       { name: 'node', type: 'bytes32' },\n//       { name: 'ttl', type: 'uint64' },\n//     ],\n//     name: 'setTTL',\n//     outputs: [],\n//     payable: false,\n//     type: 'function',\n//   },\n//   {\n//     constant: true,\n//     inputs: [{ name: 'node', type: 'bytes32' }],\n//     name: 'ttl',\n//     outputs: [{ name: '', type: 'uint64' }],\n//     payable: false,\n//     type: 'function',\n//   },\n//   {\n//     constant: false,\n//     inputs: [\n//       { name: 'node', type: 'bytes32' },\n//       { name: 'resolver', type: 'address' },\n//     ],\n//     name: 'setResolver',\n//     outputs: [],\n//     payable: false,\n//     type: 'function',\n//   },\n//   {\n//     constant: false,\n//     inputs: [\n//       { name: 'node', type: 'bytes32' },\n//       { name: 'owner', type: 'address' },\n//     ],\n//     name: 'setOwner',\n//     outputs: [],\n//     payable: false,\n//     type: 'function',\n//   },\n//   {\n//     anonymous: false,\n//     inputs: [\n//       { indexed: true, name: 'node', type: 'bytes32' },\n//       { indexed: false, name: 'owner', type: 'address' },\n//     ],\n//     name: 'Transfer',\n//     type: 'event',\n//   },\n//   {\n//     anonymous: false,\n//     inputs: [\n//       { indexed: true, name: 'node', type: 'bytes32' },\n//       { indexed: true, name: 'label', type: 'bytes32' },\n//       { indexed: false, name: 'owner', type: 'address' },\n//     ],\n//     name: 'NewOwner',\n//     type: 'event',\n//   },\n//   {\n//     anonymous: false,\n//     inputs: [\n//       { indexed: true, name: 'node', type: 'bytes32' },\n//       { indexed: false, name: 'resolver', type: 'address' },\n//     ],\n//     name: 'NewResolver',\n//     type: 'event',\n//   },\n//   {\n//     anonymous: false,\n//     inputs: [\n//       { indexed: true, name: 'node', type: 'bytes32' },\n//       { indexed: false, name: 'ttl', type: 'uint64' },\n//     ],\n//     name: 'NewTTL',\n//     type: 'event',\n//   },\n// ];\n\n// // eslint-disable-next-line\n// var resolverContractAbi = [\n//   {\n//     constant: true,\n//     inputs: [{ name: 'interfaceID', type: 'bytes4' }],\n//     name: 'supportsInterface',\n//     outputs: [{ name: '', type: 'bool' }],\n//     payable: false,\n//     type: 'function',\n//   },\n//   {\n//     constant: true,\n//     inputs: [\n//       { name: 'node', type: 'bytes32' },\n//       { name: 'contentTypes', type: 'uint256' },\n//     ],\n//     name: 'ABI',\n//     outputs: [\n//       { name: 'contentType', type: 'uint256' },\n//       { name: 'data', type: 'bytes' },\n//     ],\n//     payable: false,\n//     type: 'function',\n//   },\n//   {\n//     constant: false,\n//     inputs: [\n//       { name: 'node', type: 'bytes32' },\n//       { name: 'x', type: 'bytes32' },\n//       { name: 'y', type: 'bytes32' },\n//     ],\n//     name: 'setPubkey',\n//     outputs: [],\n//     payable: false,\n//     type: 'function',\n//   },\n//   {\n//     constant: true,\n//     inputs: [{ name: 'node', type: 'bytes32' }],\n//     name: 'content',\n//     outputs: [{ name: 'ret', type: 'bytes32' }],\n//     payable: false,\n//     type: 'function',\n//   },\n//   {\n//     constant: true,\n//     inputs: [{ name: 'node', type: 'bytes32' }],\n//     name: 'addr',\n//     outputs: [{ name: 'ret', type: 'address' }],\n//     payable: false,\n//     type: 'function',\n//   },\n//   {\n//     constant: false,\n//     inputs: [\n//       { name: 'node', type: 'bytes32' },\n//       { name: 'contentType', type: 'uint256' },\n//       { name: 'data', type: 'bytes' },\n//     ],\n//     name: 'setABI',\n//     outputs: [],\n//     payable: false,\n//     type: 'function',\n//   },\n//   {\n//     constant: true,\n//     inputs: [{ name: 'node', type: 'bytes32' }],\n//     name: 'name',\n//     outputs: [{ name: 'ret', type: 'string' }],\n//     payable: false,\n//     type: 'function',\n//   },\n//   {\n//     constant: false,\n//     inputs: [\n//       { name: 'node', type: 'bytes32' },\n//       { name: 'name', type: 'string' },\n//     ],\n//     name: 'setName',\n//     outputs: [],\n//     payable: false,\n//     type: 'function',\n//   },\n//   {\n//     constant: false,\n//     inputs: [\n//       { name: 'node', type: 'bytes32' },\n//       { name: 'hash', type: 'bytes32' },\n//     ],\n//     name: 'setContent',\n//     outputs: [],\n//     payable: false,\n//     type: 'function',\n//   },\n//   {\n//     constant: true,\n//     inputs: [{ name: 'node', type: 'bytes32' }],\n//     name: 'pubkey',\n//     outputs: [{ name: 'x', type: 'bytes32' }, { name: 'y', type: 'bytes32' }],\n//     payable: false,\n//     type: 'function',\n//   },\n//   {\n//     constant: false,\n//     inputs: [\n//       { name: 'node', type: 'bytes32' },\n//       { name: 'addr', type: 'address' },\n//     ],\n//     name: 'setAddr',\n//     outputs: [],\n//     payable: false,\n//     type: 'function',\n//   },\n//   {\n//     inputs: [{ name: 'ensAddr', type: 'address' }],\n//     payable: false,\n//     type: 'constructor',\n//   },\n//   {\n//     anonymous: false,\n//     inputs: [\n//       { indexed: true, name: 'node', type: 'bytes32' },\n//       { indexed: false, name: 'a', type: 'address' },\n//     ],\n//     name: 'AddrChanged',\n//     type: 'event',\n//   },\n//   {\n//     anonymous: false,\n//     inputs: [\n//       { indexed: true, name: 'node', type: 'bytes32' },\n//       { indexed: false, name: 'hash', type: 'bytes32' },\n//     ],\n//     name: 'ContentChanged',\n//     type: 'event',\n//   },\n//   {\n//     anonymous: false,\n//     inputs: [\n//       { indexed: true, name: 'node', type: 'bytes32' },\n//       { indexed: false, name: 'name', type: 'string' },\n//     ],\n//     name: 'NameChanged',\n//     type: 'event',\n//   },\n//   {\n//     anonymous: false,\n//     inputs: [\n//       { indexed: true, name: 'node', type: 'bytes32' },\n//       { indexed: true, name: 'contentType', type: 'uint256' },\n//     ],\n//     name: 'ABIChanged',\n//     type: 'event',\n//   },\n//   {\n//     anonymous: false,\n//     inputs: [\n//       { indexed: true, name: 'node', type: 'bytes32' },\n//       { indexed: false, name: 'x', type: 'bytes32' },\n//       { indexed: false, name: 'y', type: 'bytes32' },\n//     ],\n//     name: 'PubkeyChanged',\n//     type: 'event',\n//   },\n// ];\n\n// eslint-disable-next-line\n// var ensAddress = '0x314159265dd8dbb310642f98f50c066173c1259b';\n\n/**\nReturns a string, given an address\n\n@method getENSName\n* */\n\n// TODO\n// export function getENSName(address, network, callback) {\n//   if (!address) {\n//     return;\n//   }\n\n//   if (network !== 'main') {\n//     callback(\n//       'Cannot retrieve ENS addresses unless fully synced on main chain',\n//       null,\n//       null,\n//     );\n//     return;\n//   }\n\n//   var node = namehash(\n//     address.toLowerCase().replace('0x', '') + '.addr.reverse',\n//   );\n//   var ensContract = new web3.eth.Contract(ensContractAbi, ensAddress);\n//   var resolverContract = new web3.eth.Contract(resolverContractAbi);\n\n//   // get a resolver address for that name\n//   ensContract.methods.resolver(node).call(function(err, resolverAddress) {\n//     if (err) callback(err, null, null);\n//     else if (resolverAddress == 0) callback('no resolver address', null, null);\n//     else {\n//       // if you find one, find the name on that resolver\n//       resolverContract.options.address = resolverAddress;\n//       resolverContract.methods.name(node).call(function(error, name) {\n//         if (err) callback(err, null, null);\n//         else if (name == 0) callback('Found resolver but no name', null, null);\n//         else {\n//           // any address can claim any name, we need to check the name now\n//           var node = namehash(name);\n//           // get a resolver address for that name\n//           ensContract.methods\n//             .resolver(node)\n//             .call(function(err, resolverAddress) {\n//               if (err) callback(err, null, null);\n//               else if (resolverAddress == 0)\n//                 callback('Name has no resolver', null, null);\n//               else {\n//                 // if you find one, find the addr of that resolver\n//                 resolverContract.options.address = resolverAddress;\n//                 resolverContract.methods\n//                   .addr(node)\n//                   .call(function(error, returnAddr) {\n//                     if (err) callback(err, null, null);\n//                     else if (returnAddr == 0)\n//                       callback('No address returned', null, null);\n//                     else {\n//                       callback(error, name, returnAddr);\n//                     }\n//                   });\n//               }\n//             });\n//         }\n//       });\n//     }\n//   });\n// };\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport NumberFormat from 'react-number-format';\nimport { EthAddress, Identicon } from 'ethereum-react-components';\nimport { selectedContract } from '../../actions/actions';\nimport SecurityIcon from './SecurityIcon';\nimport { displayPriceFormatter } from '../../utils/utils';\nimport { makeID } from '../../utils/helperFunctions';\nimport * as Actions from '../../actions/actions';\n\nimport TokenListForItems from './TokenListForItems';\n\nclass ContractItem extends Component {\n  constructor(props) {\n    super(props);\n    this.openAccountPage = this.openAccountPage.bind(this);\n\n    this.state = {\n      fakeAddress: makeID(),\n    };\n    this.fakeAddressInterval = setInterval(() => {\n      this.setState({\n        fakeAddress: makeID(),\n      });\n    }, 50);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.fakeAddressInterval);\n  }\n\n  openAccountPage(e) {\n    const obj = {\n      contract: this.props.contract,\n      currency: this.props.reducers.currency,\n      exchangeRates: this.props.reducers.exchangeRates,\n      addressType: 'contract',\n    };\n\n    this.props.selectedContract({\n      contract: this.props.contract,\n      currency: this.props.reducers.currency,\n      exchangeRates: this.props.reducers.exchangeRates,\n      addressType: 'contract',\n    });\n  }\n\n  // snapshotted\n  renderBalance() {\n    const contract = this.props.contract;\n    return (\n      <React.Fragment>\n        <NumberFormat\n          className=\"account-balance\"\n          value={displayPriceFormatter(this.props, contract.balance)}\n          displayType=\"text\"\n          thousandSeparator\n        />\n        <span> {this.props.reducers.currency} </span>\n      </React.Fragment>\n    );\n  }\n\n  // snapshotted\n  renderPendingProgress() {\n    const percent = this.props.contract.confirmationNumber / 12;\n    return (\n      <div className=\"dapp-progress\">\n        <div className=\"dapp-bar\" style={{ width: `${{ percent }}%` }} />\n      </div>\n    );\n  }\n\n  renderPendingSecurityIcon() {\n    return (\n      <React.Fragment>\n        <SecurityIcon\n          type=\"contractItem\"\n          classes=\"dapp-identicon dapp-small dapp-icon-loading\"\n          hash={this.state.fakeAddress}\n        />\n      </React.Fragment>\n    );\n  }\n\n  renderPending() {\n    return (\n      <React.Fragment>\n        {this.renderPendingProgress()}\n        {this.renderPendingSecurityIcon()}\n      </React.Fragment>\n    );\n  }\n\n  renderName() {\n    const contract = this.props.contract;\n    let pending = this.props.pending;\n    pending ? (pending = true) : (pending = false);\n    return (\n      <React.Fragment>\n        {!pending ? (\n          <TokenListForItems\n            addressType={this.props.addressType}\n            address={contract.contractAddress}\n          />\n        ) : null}\n        <h3 className=\"not-ens-name\">\n          <i className=\"icon-eye\" />\n          &nbsp;\n          {!pending\n            ? contract['contract-name'] === undefined\n              ? 'UNNAMED'\n              : contract['contract-name']\n            : 'UNNAMED'}\n        </h3>\n      </React.Fragment>\n    );\n  }\n\n  renderCreating() {\n    return (\n      <React.Fragment>\n        <span className=\"account-balance\">\n          Creating\n          <span>...</span>\n        </span>\n        {/* <span className=\"account-id creating\" /> */}\n        <EthAddress\n          short\n          classes=\"account-id creating\"\n          address={this.state.fakeAddress}\n        />\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    const contract = this.props.contract;\n    let pending = this.props.pending;\n\n    pending ? (pending = true) : (pending = false);\n\n    // eslint-disable-next-line\n    Object.keys(contract).length === 0 && contract.constructor === Object\n      ? (pending = true)\n      : null;\n\n    let address;\n    // eslint-disable-next-line\n    !pending ? (address = contract.contractAddress) : null;\n\n    let ContractUrl = '/contract/';\n    // eslint-disable-next-line\n    !pending ? (ContractUrl += address) : null;\n\n    // eslint-disable-next-line\n    !pending ? clearInterval(this.fakeAddressInterval) : null;\n\n    return (\n      <React.Fragment>\n        <Link\n          to={{ pathname: ContractUrl }}\n          onClick={e => this.openAccountPage(e)}\n          className={!pending ? 'wallet-box' : 'wallet-box creating wallets'}\n        >\n          {!pending ? (\n            <React.Fragment>\n              <SecurityIcon\n                type=\"contractItem\"\n                classes=\"dapp-identicon dapp-small\"\n                hash={address}\n              />\n            </React.Fragment>\n          ) : (\n            this.renderPending()\n          )}\n          {this.renderName()}\n          {!pending ? this.renderBalance() : this.renderCreating()}\n          <EthAddress short classes=\"account-id\" address={address} />\n        </Link>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return state;\n};\n\nexport default connect(\n  mapStateToProps,\n  { selectedContract, ...Actions }\n)(ContractItem);\n","import React from 'react';\n\nexport const ButtonDescription = props => {\n  return (\n    <React.Fragment>\n      <h2>{props.title}</h2>\n      <p>{props.description}</p>\n      <div className=\"dapp-clear-fix\" />\n    </React.Fragment>\n  );\n};\n\nexport default ButtonDescription;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { Link } from 'react-router-dom';\nimport ContractItem from './elements/ContractItem';\nimport ButtonDescription from './ButtonDescription';\n\nconst buttonTitle = 'Wallet Contracts';\nconst buttonDescription =\n  'These contracts are stored on the blockchain and can hold and secure Ether. They can have multiple accounts as owners and keep a full log of all transactions.';\n\n// snapshooted\nconst WalletLink = () => {\n  return (\n    <React.Fragment>\n      <Link\n        to={{ pathname: '/wallet/new' }}\n        className=\"wallet-box create add-contract\"\n      >\n        <div className=\"account-pattern\">+</div>\n        <h3>ADD WALLET CONTRACT</h3>\n      </Link>\n      <div className=\"dapp-clear-fix\" />\n    </React.Fragment>\n  );\n};\n\nexport class DeployedWallets extends Component {\n  renderWalletBoxList() {\n    const icon = 'icon-eye';\n    const {\n      ContractsPendingConfirmations,\n      WalletContracts,\n    } = this.props.reducers;\n    const contracts = Object.assign(\n      {},\n      ContractsPendingConfirmations,\n      WalletContracts\n    );\n    return (\n      <React.Fragment>\n        <div className=\"wallet-box-list\">\n          {Object.keys(contracts).map((address, i) => (\n            <ContractItem\n              key={address}\n              number={i + 1}\n              icon={icon}\n              pending={\n                !!(\n                  Object.keys(contracts[address]).length === 0 &&\n                  contracts[address].constructor === Object\n                )\n              }\n              contract={contracts[address]}\n              address={address}\n              wallet={contracts[address].length === 0 ? contracts[address] : ''}\n              props={this.props}\n              addressType=\"WalletContracts\"\n            />\n          ))}\n        </div>\n        <div className=\"dapp-clear-fix\" />\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <ButtonDescription\n          title={buttonTitle}\n          description={buttonDescription}\n        />\n        {this.renderWalletBoxList()}\n        <WalletLink />\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return state;\n};\n\nexport default connect(mapStateToProps)(DeployedWallets);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport LatestTransactions from '../components/elements/LatestTransactions';\nimport NoMatchingTransaction from '../components/elements/NoMatchingTransaction';\n\nimport Addresses from '../components/Addresses';\nimport DeployedWallets from '../components/DeployedWallets';\n\n// snapshotted\nconst Title = () => {\n  return (\n    <h1>\n      <strong>Accounts</strong> Overview\n    </h1>\n  );\n};\n\nconst StatelessPageContent = () => {\n  return (\n    <React.Fragment>\n      <Title />\n      <Addresses />\n      <DeployedWallets />\n    </React.Fragment>\n  );\n};\n\nexport class AccountView extends Component {\n  render() {\n    const txs = this.props.Transactions;\n    return (\n      <div className=\"dapp-container account-page\">\n        <StatelessPageContent />\n        {Object.keys(txs).length && txs.constructor === Object ? (\n          <LatestTransactions transactions={txs} />\n        ) : (\n          <NoMatchingTransaction />\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  Transactions: state.reducers.Transactions,\n});\n\nexport default connect(mapStateToProps)(AccountView);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n// import onClickOutside from \"react-onclickoutside\";\nimport shortid from 'shortid';\n\nimport { updateCurrency } from '../../actions/actions';\n\nimport '../../stylesheets/mergedstyles.css';\n\nconst selectableUnits = ['ether', 'finney', 'btc', 'usd', 'eur', 'gbp', 'brl'];\n\nclass SelectableUnit extends Component {\n  constructor(props) {\n    super(props);\n    this.unitSelected = this.unitSelected.bind(this);\n  }\n\n  UNSAFE_componentWillMount() {\n    this.setState({ displaySU: false });\n    document.addEventListener('mousedown', this.unitSelected, false);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('mousedown', this.unitSelected, false);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.displaySU !== prevState.displaySU) {\n      this.setState({ displaySU: !this.props.displaySU });\n    }\n  }\n\n  unitSelected(e) {\n    if (this.node.contains(e.target)) {\n      const newUnit = {\n        CurrencyUnit: e.target.getAttribute('data-value').toUpperCase(),\n      };\n      this.props.updateCurrency(newUnit);\n    }\n  }\n\n  renderList() {\n    return (\n      <React.Fragment>\n        {selectableUnits.map(item => (\n          <li key={shortid.generate()}>\n            <button data-value={item} onClick={this.unitSelected}>\n              {item.toUpperCase()}\n            </button>\n          </li>\n        ))}\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    const cn = require('classnames');\n    const newClasses = cn({\n      'simple-modal': true,\n      animate: this.state.displaySU,\n    });\n    return (\n      <div\n        id=\"selectableUnitDrawer\"\n        className={newClasses}\n        ref={node => (this.node = node)}\n      >\n        <ul>{this.renderList()}</ul>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  { updateCurrency }\n)(SelectableUnit);\n","import React from 'react';\n\nexport const ActionBarItem = props => {\n  return (\n    <li>\n      <a\n        href={props.href}\n        title={props.title}\n        target=\"noopener noreferrer _blank\"\n      >\n        <i className={props.icon} />\n        {props.text}\n      </a>\n    </li>\n  );\n};\n\nexport default ActionBarItem;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport * as Actions from '../../actions/actions';\n\nimport ActionBarItem from './ActionBarItem';\n\nexport class AccountActionBar extends Component {\n  shouldComponentUpdate(prevProps, prevState) {\n    if (this.props !== prevProps) {\n      return true;\n    }\n    return false;\n  }\n\n  displayCopiedNotification(e) {\n    e.preventDefault();\n    this.props.displayGlobalNotification({\n      display: true,\n      type: 'info',\n      msg: 'Copied to clipboad',\n    });\n  }\n\n  displayAndSetQRCode(e) {\n    this.props.updateQRCode(this.props.wallet.address);\n    this.props.displayModal('displayQRCode');\n  }\n\n  render() {\n    const address = this.props.wallet.address;\n    const etherScanAddress = `https://etherscan.io/address/${address}`;\n    const transferEtherAddress = `/send/${address}`;\n    const changellyAddress = `https://changelly.com/widget/v1?auth=email&amp;from=USD&amp;to=ETH&amp;merchant_id=47f87f7cddda&amp;address=${address}&amp;amount=1&amp;ref_id=e25c5a2e8719&amp;color=02a8f3`;\n\n    return (\n      <aside className=\"dapp-actionbar\">\n        <nav>\n          <ul>\n            <ActionBarItem\n              href={transferEtherAddress}\n              title={address}\n              icon=\"icon-arrow-down\"\n              text=\" Transfer Ether &amp; Tokens\"\n            />\n            <ActionBarItem\n              href={changellyAddress}\n              title=\"\"\n              icon=\"icon-ethereum\"\n              text=\"Buy ether\"\n            />\n            <ActionBarItem\n              href={etherScanAddress}\n              icon=\"icon-info\"\n              text=\"View on Etherscan\"\n            />\n            <CopyToClipboard text={address}>\n              <li>\n                <button\n                  className=\"copy-to-clipboard-button\"\n                  onClick={e => this.displayCopiedNotification(e)}\n                >\n                  <i className=\"icon-docs\" />\n                  Copy address\n                </button>\n              </li>\n            </CopyToClipboard>\n            <li>\n              <button\n                className=\"qrcode-button\"\n                onClick={e => this.displayAndSetQRCode(e)}\n              >\n                <i className=\"icon-camera\" />\n                Show QR-Code\n              </button>\n            </li>\n          </ul>\n        </nav>\n      </aside>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return state;\n};\n\nexport default connect(\n  mapStateToProps,\n  { ...Actions }\n)(AccountActionBar);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport { Identicon } from 'ethereum-react-components';\n\nimport shortid from 'shortid';\n\nexport class TokenList extends Component {\n  // TODO: turn these renders into stateless\n  renderIdentity(token) {\n    const tokens = this.props.reducers.selectedWallet.wallet.tokens;\n    return (\n      <td>\n        <Identicon\n          classes=\"dapp-identicon dapp-tiny\"\n          title\n          size=\"tiny\"\n          address={tokens[token].address}\n        />\n        <strong>{tokens[token].name}</strong>\n      </td>\n    );\n  }\n\n  renderInfo(token) {\n    const tokens = this.props.reducers.selectedWallet.wallet.tokens;\n    return (\n      <td>\n        {tokens[token].balance}\n        &nbsp;\n        {tokens[token].symbol}\n      </td>\n    );\n  }\n\n  renderLink(token) {\n    const sw = this.props.reducers.selectedWallet;\n    const sendUrl = `${sw.address}/`;\n    return (\n      <td>\n        <Link\n          to={{ pathname: `/send-token/${sendUrl}${token}` }}\n          title=\"sendUrlForToken\"\n        >\n          <i className=\"icon-arrow-up\">&nbsp;</i>\n          Send\n        </Link>\n      </td>\n    );\n  }\n\n  render() {\n    // TODO: what if selected contract\n    const tokens = this.props.reducers.selectedWallet.wallet.tokens;\n    return (\n      <table className=\"token-list dapp-zebra\">\n        <tbody>\n          {Object.keys(tokens).map(token => (\n            <tr key={shortid.generate()}>\n              {this.renderIdentity(token)}\n              {this.renderInfo(token)}\n              {this.renderLink(token)}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return state;\n};\n\nexport default connect(mapStateToProps)(TokenList);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport clickOutside from 'react-click-outside';\n\nimport ContentEditable from 'react-contenteditable';\n// utils and actions\nimport * as Utils from '../utils/utils';\n// import * as Actions from '../actions/actions';\nimport {\n  updateContractName,\n  updateWalletContractName,\n  updateAddressName,\n} from '../actions/actions.js';\n\nexport class EditableName extends Component {\n  constructor(props) {\n    super(props);\n\n    // TODO: logic for contracts\n    const wallet = this.props.reducers.selectedWallet;\n    const walletName = wallet.wallet.name;\n    console.log(walletName);\n    this.state = {\n      // <<<<<<< Updated upstream\n      contentEditable: false,\n      newName: '',\n      html: `\n            ${walletName || `Account ${wallet.number}`} \n          `,\n    };\n    this.toggleEditability = this.toggleEditability.bind(this);\n    this.contentEditable = React.createRef();\n    this.handleClickOutside = this.handleClickOutside.bind(this);\n  }\n\n  componentDidMount() {\n    document.addEventListener('click', this.handleClickOutside);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('click', this.handleClickOutside);\n  }\n\n  shouldComponentUpdate(prevProps, prevState) {\n    if (this.state.contentEditable !== prevState.contentEditable) {\n      return true;\n    }\n    return false;\n  }\n\n  handleChange = e => {\n    const wallet = this.props.reducers.selectedWallet;\n    this.setState({\n      newName: e.target.value,\n    });\n    this.props.updateAddressName({\n      name: e.target.value,\n      address: wallet.address,\n    });\n  };\n\n  handleClickOutside(e) {\n    const id = e.target.getAttribute('id');\n    e.target.getAttribute('id') !== 'editableName'\n      ? this.setState({ contentEditable: false })\n      : this.toggleEditability(e);\n  }\n\n  toggleEditability = e => {\n    if (e.target.getAttribute('contenteditable') === 'false') {\n      this.setState({\n        contentEditable: true,\n        newName: e.target.value,\n      });\n    }\n    {\n      /* }\n=======\n      // contentEditable: false,\n      contentEditable: true,\n    };\n    this.toggleEditability = this.toggleEditability.bind(this)\n    this.updateName = this.updateName.bind(this)\n  }\n\n  toggleEditability(e){\n    console.log(e);\n    console.log('prev state', this.state.contentEditable);\n    this.setState({ contentEditable: !this.state.contentEditable });\n>>>>>>> Stashed changes\n*/\n    }\n  };\n\n  // updateContractName\n  // updateWalletContractName\n\n  updateName(e, wallet) {\n    this.setState({ name: e.target.value });\n    this.props.updateAddressName({\n      address: wallet.address,\n      name: e.target.value,\n    });\n  }\n\n  render() {\n    const type = this.props.addressType;\n    const wallet =\n      type === 'address'\n        ? this.props.reducers.selectedWallet\n        : this.props.reducers.selectedContract;\n    return (\n      <h1>\n        {/* <<<<<<< Updated upstream */}\n        <ContentEditable\n          id=\"editableName\"\n          className=\"edit-name\"\n          innerRef={this.contentEditable}\n          html={this.state.html} // innerHTML of the editable div\n          disabled={!this.state.contentEditable}\n          onChange={this.handleChange} // handle innerHTML change\n          tagName=\"em\" // Use a custom HTML tag (uses a div by default)\n        />\n        {/* }\n=======\n        {wallet !== undefined && wallet !== '' ? (\n          <input className=\"edit-name\" onChange={e => this.updateName(e, wallet)} />\n          // <div onChange={e => this.updateName(e, wallet)}>\n          //   <em\n          //     className=\"edit-name\"\n          //     contentEditable={this.state.contentEditable}\n          //     // contentEditable\n          //     // onFocus={e => this.toggleEditability(e)}\n          //     // onClick={e => this.toggleEditability(e)}\n          //     // onChange={e => this.updateName(e, wallet)}\n          //   >\n          //     {wallet.name ? wallet.name : 'Account' + wallet.number}\n          //   </em>\n          // </div>\n        ) : (\n          'Unnamed'\n        )}\n>>>>>>> Stashed changes\n*/}\n        <i className=\"edit-icon icon-pencil\" />\n      </h1>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return state;\n};\n\n// const mapStateToProps = state => ({\n//   Wallets: state.reducers.Wallets,\n//   selectedWallet: state.reducers.selectedWallet,\n//   selectedContract: state.reducers.selectedContract,\n// });\n\nexport default connect(\n  mapStateToProps,\n  { updateContractName, updateWalletContractName, updateAddressName }\n)(EditableName);\n","import React from 'react';\n\nexport const NotFound = () => {\n  return <div>There doesn't seem to be anything here...</div>;\n};\n\nexport default NotFound;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\n// components\nimport { Identicon } from 'ethereum-react-components';\nimport SU from '../components/elements/SelectableUnit';\nimport AccountActionBar from '../components/elements/AccountActionBar';\nimport LatestTransactions from '../components/elements/LatestTransactions';\nimport NoMatchingTransaction from '../components/elements/NoMatchingTransaction';\nimport TokenList from '../components/TokenList';\n\nimport EditableName from '../components/EditableName';\n\n// views\nimport NotFound from './NotFound';\n\n// utils and actions\nimport { displayPriceFormatter } from '../utils/utils';\nimport * as Actions from '../actions/actions';\n\nexport const StickyHeader = ({ sw }) => {\n  return (\n    <div className=\"dapp-sticky-bar dapp-container\">\n      <Identicon classes=\"dapp-identicon\" title address={sw.address} />\n    </div>\n  );\n};\n\nexport const AccountDetails = ({ sw }) => {\n  return (\n    <React.Fragment>\n      <EditableName addressType=\"address\" sw={sw} />\n      <h2 className=\"copyable-address\">\n        <i className=\"icon-key\" title=\"Account\" />\n        <span>{sw.address}</span>\n      </h2>\n      <div className=\"clear\" />\n    </React.Fragment>\n  );\n};\n\nexport const AccountDescription = () => {\n  return (\n    <div className=\"account-info\">\n      <h3>NOTE </h3>\n      <p>\n        Accounts can't display incoming transactions, but can receive, hold and\n        send Ether. To see incoming transactions, create a wallet contract to\n        store ether.\n      </p>\n      <p>\n        <strong>\n          If your balance doesn't seem updated, make sure that you are in sync\n          with the network.\n        </strong>\n      </p>\n    </div>\n  );\n};\n\nexport class SingleAccountView extends Component {\n  constructor(props) {\n    super(props);\n    this.state = this.props;\n  }\n\n  componentDidMount() {\n    window.addEventListener('scroll', this.handleScroll);\n    this.setState({ displaySU: false });\n    // ('.dapp-sticky-bar').addClass('sticky');\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('scroll', this.handleScroll);\n    // ('.dapp-sticky-bar').addClass('sticky');\n  }\n\n  toggleSU() {\n    if (this.state.displaySU === undefined) this.setState({ displaySU: false });\n    else {\n      this.state.displaySU\n        ? this.setState({ displaySU: false })\n        : this.setState({ displaySU: true });\n    }\n  }\n\n  renderAccountTransactions() {\n    const address = this.props.reducers.selectedWallet.address;\n    const transactions = this.props.reducers.Transactions;\n    const accountTxns = {};\n    Object.keys(transactions).map(hash => {\n      if (\n        transactions[hash].from === address.toLowerCase() ||\n        transactions[hash].to === address.toLowerCase()\n      ) {\n        accountTxns[hash] = transactions[hash];\n      }\n      return null;\n    });\n    return (\n      <div className=\"accounts-transactions\">\n        {Object.keys(accountTxns).length &&\n        accountTxns.constructor === Object ? (\n          <LatestTransactions transactions={accountTxns} />\n        ) : (\n          <NoMatchingTransaction />\n        )}\n      </div>\n    );\n  }\n\n  renderBalance() {\n    const sw = this.props.reducers.selectedWallet;\n    return (\n      <span className=\"account-balance\">\n        {displayPriceFormatter(this.props, sw.wallet.balance)}\n        <span className=\"inline-form\" name=\"unit\">\n          <button\n            type=\"button\"\n            data-name=\"unit\"\n            data-value={this.props.reducers.currency}\n            onClick={() => this.toggleSU()}\n          >\n            &nbsp;{this.props.reducers.currency}\n          </button>\n          <SU displaySU={this.state.displaySU} />\n        </span>\n      </span>\n    );\n  }\n\n  renderSingleAccount() {\n    const sw = this.props.reducers.selectedWallet;\n    return (\n      <div className=\"dapp-container accounts-page\">\n        <StickyHeader sw={sw} />\n        {/*\n        <EditableName addressType=\"address\" />\n        <EditableName addressType=\"address\" />\n        */}\n        <div className=\"accounts-page-summary\">\n          <Identicon classes=\"dapp-identicon\" title address={sw.address} />\n          <header>\n            <AccountDetails sw={sw} />\n            {this.renderBalance()}\n            {sw.wallet.tokens ? <TokenList /> : null}\n            <AccountDescription />\n          </header>\n        </div>\n        <AccountActionBar wallet={sw} />\n        {this.renderAccountTransactions()}\n      </div>\n    );\n  }\n\n  render() {\n    const w = this.props.reducers.selectedWallet;\n    return w === undefined || w === '' ? (\n      <NotFound />\n    ) : (\n      this.renderSingleAccount()\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return state;\n};\n\nexport default connect(\n  mapStateToProps,\n  { ...Actions }\n)(SingleAccountView);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\n\nimport ActionBarItem from './ActionBarItem';\n\nimport {\n  displayGlobalNotification,\n  updateQRCode,\n  displayModal,\n  updateJSON,\n} from '../../actions/actions';\n\nexport class ContractActionBar extends Component {\n  displayCopiedNotification(e) {\n    e.preventDefault();\n    this.props.displayGlobalNotification({\n      display: true,\n      type: 'info',\n      msg: 'Copied to clipboad',\n    });\n  }\n\n  displayAndSetQRCode(e) {\n    this.props.updateQRCode(this.props.contract.address);\n    this.props.displayModal('displayQRCode');\n  }\n\n  displayAndSetJSON(e) {\n    this.props.updateJSON(this.props.contract.jsonInterface);\n    this.props.displayModal('displayJSONInterface');\n  }\n\n  render() {\n    const address = this.props.contract.address;\n    const transferEtherAddress = `/send/${address}`;\n    const etherScanAddress = `https://etherscan.io/address/${address}`;\n    return (\n      <aside className=\"dapp-actionbar\">\n        <nav>\n          <ul>\n            <ActionBarItem\n              href={transferEtherAddress}\n              title={address}\n              icon=\"icon-arrow-down\"\n              text=\" Transfer Ether &amp; Tokens\"\n            />\n            <ActionBarItem\n              href={etherScanAddress}\n              icon=\"icon-info\"\n              text=\"View on Etherscan\"\n            />\n            <CopyToClipboard text={address}>\n              <li>\n                <button\n                  className=\"copy-to-clipboard-button\"\n                  onClick={e => this.displayCopiedNotification(e)}\n                >\n                  <i className=\"icon-docs\" />\n                  Copy address\n                </button>\n              </li>\n            </CopyToClipboard>\n            <li>\n              <button\n                className=\"qrcode-button\"\n                onClick={e => this.displayAndSetQRCode(e)}\n              >\n                <i className=\"icon-camera\" />\n                Show QR-Code\n              </button>\n            </li>\n            <li>\n              <button\n                className=\"interface-button\"\n                onClick={e => this.displayAndSetJSON('displayJSONInterface')}\n              >\n                <i className=\"icon-settings\" />\n                Show Interface\n              </button>\n            </li>\n          </ul>\n        </nav>\n      </aside>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return state;\n};\n\nexport default connect(\n  mapStateToProps,\n  {\n    displayGlobalNotification,\n    updateQRCode,\n    displayModal,\n    updateJSON,\n  }\n)(ContractActionBar);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as Actions from '../../../actions/actions';\n\nexport class Inputs extends Component {\n  renderAddress(input) {\n    return (\n      <React.Fragment>\n        <input\n          onChange={this.props.onChange}\n          index={input.index}\n          placeholder=\"0x123456...\"\n          className=\" abi-input\"\n          name={input.name}\n          inputType={input.type}\n        />\n      </React.Fragment>\n    );\n  }\n\n  renderBool(input) {\n    return (\n      <React.Fragment>\n        <input\n          type=\"checkbox\"\n          onChange={this.props.onChange}\n          index={input.index}\n          name={input.name}\n          inputType={input.type}\n        />\n        <label>contract buttons</label>\n      </React.Fragment>\n    );\n  }\n\n  renderBytes(input) {\n    return (\n      <React.Fragment>\n        <input\n          type=\"text\"\n          pattern=\"^(0x)?[0-9a-fA-F]+$\"\n          placeholder=\"0x1234af...\"\n          onChange={this.props.onChange}\n          index={input.index}\n          name={input.name}\n          inputType={input.type}\n        />\n      </React.Fragment>\n    );\n  }\n\n  renderInt(input) {\n    return (\n      <React.Fragment>\n        <input\n          type=\"number\"\n          step=\"1\"\n          placeholder=\"-123\"\n          onChange={this.props.onChange}\n          index={input.index}\n          name={input.name}\n          inputType={input.type}\n        />\n      </React.Fragment>\n    );\n  }\n\n  renderJson(input) {\n    return (\n      <React.Fragment>\n        <textarea\n          cols=\"20\"\n          rows=\"5\"\n          placeholder=\"['my text', 12345, '0x...']\"\n          onChange={this.props.onChange}\n          index={input.index}\n          name={input.name}\n          inputType={input.type}\n        >\n          value\n        </textarea>\n      </React.Fragment>\n    );\n  }\n\n  renderString(input) {\n    return (\n      <React.Fragment>\n        <input\n          type=\"text\"\n          placeholder=\"MyString\"\n          onChange={this.props.onChange}\n          index={input.index}\n          name={input.name}\n          inputType={input.type}\n        />\n      </React.Fragment>\n    );\n  }\n\n  renderUint(input) {\n    return (\n      <React.Fragment>\n        <input\n          type=\"number\"\n          step=\"1\"\n          min=\"0\"\n          placeholder=\"1234\"\n          onChange={this.props.onChange}\n          index={input.index}\n          name={input.name}\n          inputType={input.type}\n        />\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    const input = {\n      ...this.props.data,\n      index: this.props.index,\n    };\n    const type = this.props.data.type.match(/[a-z]+/i)[0];\n    return (\n      <React.Fragment>\n        {type === 'address'\n          ? this.renderAddress(input)\n          : type === 'bool'\n          ? this.renderBool(input)\n          : type === 'bytes'\n          ? this.renderBytes(input)\n          : type === 'int'\n          ? this.renderInt(input)\n          : type === 'json'\n          ? this.renderJson(input)\n          : type === 'string'\n          ? this.renderString(input)\n          : type === 'uint'\n          ? this.renderUint(input)\n          : null}\n      </React.Fragment>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return state;\n};\n\nexport default connect(\n  mapStateToProps,\n  { ...Actions }\n)(Inputs);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport shortid from 'shortid';\nimport { Identicon } from 'ethereum-react-components';\nimport Inputs from './inputs/Inputs.js';\nimport * as Helpers from '../../utils/helperFunctions';\nimport * as Actions from '../../actions/actions';\n\nexport class ExecuteConstants extends Component {\n  constructor(props) {\n    super(props);\n    this.state = this.props;\n    this.executeInput = this.executeInput.bind(this);\n    this.updateToTransaction = this.updateToTransaction.bind(this);\n  }\n\n  executeInput(e, input, func) {\n    const web3 = this.props.web3 ? this.props.web3.web3Instance : null;\n    if (!web3) {\n      return;\n    }\n\n    const index = e.target.getAttribute('index');\n    const value = e.target.value;\n\n    const BN = web3.utils.BN;\n    const contractInfo = this.state.reducers.selectedContract.contract;\n\n    const jsonInterface = contractInfo.jsonInterface;\n    const funcName = func.name;\n\n    func.inputs[index].value = value;\n    console.log(...func.inputs);\n\n    const inputs = func.inputs.map(inp => {\n      return inp.type.includes('int')\n        ? new BN(web3.utils.toWei(inp.value.replace(',', '.')))\n        : inp.value;\n    });\n\n    const contract = new web3.eth.Contract(\n      JSON.parse(jsonInterface),\n      contractInfo.contractAddress\n    );\n\n    contract.options.address = contractInfo.contractAddress;\n\n    try {\n      contract.methods[funcName](...inputs)\n        .call()\n        .then((err, res) => {\n          err ? console.warn(err) : console.log('here is res', res);\n        });\n    } catch (err) {\n      console.error(err);\n      this.props.displayGlobalNotification({\n        display: true,\n        type: 'error',\n        msg: err,\n      });\n    }\n  }\n\n  // snapshotted\n  renderFunctionInputs(func) {\n    return (\n      <tr key={shortid.generate()}>\n        <td>\n          <h3>{Helpers.toSentence(func.name)}</h3>\n          {func.inputs.length > 0\n            ? func.inputs.map((input, index) => (\n                <React.Fragment key={shortid.generate()}>\n                  <h4>\n                    <span className=\"dapp-punctuation\">_</span>\n                    {Helpers.toSentence(input.name)}\n                    &nbsp;\n                    <em>- {input.type}</em>\n                  </h4>\n                  <Inputs\n                    data={input}\n                    index={index}\n                    onChange={e => this.executeInput(e, input, func)}\n                  />\n                </React.Fragment>\n              ))\n            : null}\n        </td>\n      </tr>\n    );\n  }\n\n  // snapshotted\n  renderOutputType(output) {\n    return (\n      <dd className=\"output\">\n        {output.type === 'address'\n          ? this.renderAddress(output)\n          : output.type === 'bool'\n          ? this.renderBool(output)\n          : output.value}\n      </dd>\n    );\n  }\n\n  updateToTransaction(e) {\n    e.stopPropagation();\n    console.warn('todo: moved from security icon and need to pudate');\n  }\n\n  // snapshotted\n  renderAddress(output) {\n    const address = output.value !== '' ? output.value : '0x';\n    return (\n      <span className=\"address dapp-shorten-text not-ens-name\">\n        <Identicon\n          classes=\"dapp-identicon dapp-tiny\"\n          title\n          size=\"tiny\"\n          address={address}\n        />\n        <Link\n          to={{ pathname: `/send-from/${address}` }}\n          title={address}\n          onClick={e => this.updateToTransaction(e)}\n        >\n          {address}\n        </Link>\n      </span>\n    );\n  }\n\n  // snapshotted\n  renderBool(output) {\n    const bool = output.value === true;\n    const text = bool ? 'YES ' : 'NO ';\n    const icon = bool ? 'icon-check' : 'icon-ban';\n    return (\n      <React.Fragment>\n        {text}\n        <em>\n          <span className={`icon ${icon}`} />\n        </em>\n      </React.Fragment>\n    );\n  }\n\n  // snapshotted\n  renderFunctionOutputs(func) {\n    return (\n      <tr key={shortid.generate()}>\n        <td>\n          <dl className={`constant-${func.name} dapp-zebra`}>\n            {func.outputs.map((output, index) => (\n              <React.Fragment>\n                {output.name !== '' ? (\n                  <dt>{Helpers.toSentence(output.name)}</dt>\n                ) : null}\n\n                {this.renderOutputType(output)}\n              </React.Fragment>\n            ))}\n          </dl>\n        </td>\n      </tr>\n    );\n  }\n\n  // TODO: snapshot\n  render() {\n    const contract = this.state.reducers.selectedContract.contract;\n    const constants = this.state.reducers.ObservedContracts[contract.address]\n      .contractConstants;\n    return (\n      <div className=\"col col-8 mobile-full contract-info\">\n        <h2>Read from contract</h2>\n        <table className=\"contract-constants dapp-zebra\">\n          <tbody>\n            {constants\n              ? constants.map(func => (\n                  <React.Fragment>\n                    {this.renderFunctionInputs(func)}\n                    {this.renderFunctionOutputs(func)}\n                  </React.Fragment>\n                ))\n              : ''}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  ...state,\n  contract: state.reducers.contract,\n  ObservedContracts: state.reducers.ObservedContracts,\n  selectedContract: state.reducers.selectedContract,\n  showContractFunctions: state.reducers.showContractFunctions,\n});\n\nexport default connect(\n  mapStateToProps,\n  { ...Actions }\n)(ExecuteConstants);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport shortid from 'shortid';\n\nimport compose from 'recompose/compose';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport { Identicon } from 'ethereum-react-components';\nimport * as Actions from '../../actions/actions';\nimport { displayPriceFormatter } from '../../utils/utils';\nimport { combineWallets, sortByBalance } from '../../utils/helperFunctions';\n\nconst styles = theme => ({\n  keyIcon: {\n    width: '3%',\n    display: 'inline-block',\n    WebkitTransform: 'rotate(45deg)',\n    MozTransform: 'rotate(45deg)',\n    MsTransform: 'rotate(45deg)',\n    OTransform: 'rotate(45deg)',\n    transform: 'rotate(45deg)',\n  },\n});\n\nexport class WalletDropdown extends Component {\n  constructor(props) {\n    super(props);\n\n    const { Wallets, WalletContracts } = this.props.reducers;\n    const WalletsCombined = combineWallets(Wallets, WalletContracts);\n\n    this.state = {\n      Wallets: WalletsCombined,\n      fromWallet: WalletsCombined[0].address,\n      dropdownConfig: this.props.dropdownConfig,\n    };\n    this.props.updateMainDCF({\n      name: 'MainOwnerAddress',\n      value: this.state.fromWallet,\n    });\n    // let msc = this.props.reducers.DeployContractForm.multiSigContract;\n    const owners = this.props.reducers.DeployContractForm.multiSigContract\n      .owners;\n    owners[0] = this.state.fromWallet;\n    const obj = {\n      ...this.props.reducers.DeployContractForm.multiSigContract,\n      MainOwnerAddress: this.state.fromWallet,\n      owners,\n    };\n    this.props.updateDeployContractForm(obj);\n    this.chooseWallet = this.chooseWallet.bind(this);\n  }\n\n  // shouldComponentUpdate(prevProps, prevState) {\n  //   if(this.props.disabled !== prevProps.disabled) {\n  //     return true;\n  //   }\n  //   if(this.props.fromWallet !== prevProps.fromWallet) {\n  //     return true;\n  //   }\n  //   return false;\n  // }\n\n  chooseWallet(e) {\n    this.setState({ fromWallet: e.target.value });\n\n    if (this.state.dropdownConfig.component === 'deployToken') {\n      this.props.returnDeployTokenAddress(e);\n    }\n\n    if (this.state.dropdownConfig.component === 'Send') {\n      this.props.updateTransactionToSend({\n        name: e.target.getAttribute('name'),\n        value: e.target.value,\n      });\n      return;\n    }\n\n    if (this.state.dropdownConfig.component === 'DeployContractForm') {\n      this.props.updateMainDCF({\n        name: 'MainOwnerAddress',\n        value: e.target.value,\n      });\n\n      // let msc = this.props.reducers.DeployContractForm.multiSigContract;\n      const owners = this.props.reducers.DeployContractForm.multiSigContract\n        .owners;\n      owners[0] = e.target.value;\n      const obj = {\n        ...this.props.reducers.DeployContractForm.multiSigContract,\n        MainOwnerAddress: e.target.value,\n        owners,\n      };\n      this.props.updateDeployContractForm(obj);\n      return;\n    }\n\n    if (this.state.dropdownConfig.component === 'ExecuteFunctions') {\n      this.props.updateExecutingWallet({\n        name: 'executingWallet',\n        value: e.target.value,\n      });\n    }\n  }\n\n  render() {\n    const wallets = this.state.Wallets;\n    const config = this.state.dropdownConfig;\n    return (\n      <React.Fragment>\n        <select\n          className={config.selectClassName}\n          name={config.selectName}\n          onChange={e => this.chooseWallet(e)}\n          value={this.state.fromWallet}\n          disabled={this.props.disabled}\n        >\n          {wallets.map(w => {\n            return (\n              <option key={shortid.generate()} value={w.address}>\n                {w.addressType === 'walletAddress' ? '🔑 ' : null}\n                {Number(\n                  displayPriceFormatter(this.props, w.balance, 'ETHER')\n                ).toFixed(2)}\n                &nbsp; - &nbsp; ETHER\n              </option>\n            );\n          })}\n        </select>\n        <Identicon\n          classes=\"dapp-identicon dapp-small\"\n          title\n          size=\"small\"\n          address={this.state.fromWallet}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  ...state,\n});\n\nexport default compose(\n  withStyles(styles, { name: 'WalletDropdown' }),\n  connect(\n    mapStateToProps,\n    { ...Actions }\n  )\n)(WalletDropdown);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport shortid from 'shortid';\nimport Inputs from './inputs/Inputs';\nimport WalletDropdown from './WalletDropdown';\nimport * as Helpers from '../../utils/helperFunctions';\nimport * as Actions from '../../actions/actions';\n\nexport class ExecuteFunctions extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ...this.props,\n      executingWallet: this.props.reducers.Wallets[0],\n      // chosenFunction: 'Pick A Function'\n    };\n    this.chooseFunction = this.chooseFunction.bind(this);\n    this.chooseWallet = this.chooseWallet.bind(this);\n    this.executeContractFunction = this.executeContractFunction.bind(this);\n  }\n\n  chooseFunction(e) {\n    const contract = this.state.reducers.selectedContract.contract;\n    const functions = this.state.reducers.ObservedContracts[contract.address];\n    if (e.target.value === 'pickFunctionDefault') {\n      this.setState({ chosenFunction: 'Pick A Function' });\n      this.props.emptySelectedFunction({});\n      return;\n    }\n    const func = functions.contractFunctions[e.target.selectedIndex - 1];\n    if (func.name === e.target.value) {\n      func.contractAddress = contract.address;\n      this.setState({ chosenFunction: e.target.value });\n      this.props.updateSelectedFunction(func);\n    } else {\n      // TODO: global\n      /*\n      Transaction sent in green\n      Returned error: authentication needed: password or unlock\n      */\n    }\n  }\n\n  chooseWallet(e) {\n    this.setState({ executingWallet: e.target.value });\n    this.props.updateExecutingWallet({\n      name: 'executingWallet',\n      value: e.target.value,\n    });\n  }\n\n  executeContractFunction(e) {\n    const web3 = this.props.web3 ? this.props.web3.web3Instance : null;\n    if (!web3) {\n      return;\n    }\n    const BN = web3.utils.BN;\n    const contractInfo = this.props.reducers.selectedContract.contract;\n    const jsonInterface = contractInfo.jsonInterface;\n    const funcName = this.props.selectedFunction.name;\n\n    const inputs = this.props.selectedFunction.inputs.map(inp => {\n      return inp.type.includes('int')\n        ? new BN(web3.utils.toWei(inp.value.replace(',', '.')))\n        : inp.value;\n    });\n\n    const execWallet = this.props.selectedFunction.executingWallet;\n    const contract = new web3.eth.Contract(JSON.parse(jsonInterface));\n    contract.options.address = contractInfo.contractAddress;\n\n    try {\n      contract.methods[funcName](...inputs)\n        .send({\n          from: execWallet,\n        })\n        .on('transactionHash', hash => {\n          console.log('transactionHash', hash);\n        })\n        .on('confirmation', (confirmationNumber, receipt) => {\n          console.log('confirmationNumber', confirmationNumber);\n        })\n        .on('receipt', receipt => {\n          console.log('receipt', receipt);\n        });\n    } catch (err) {\n      console.warn(err);\n      this.props.displayGlobalNotification({\n        display: true,\n        type: 'error',\n        msg: err,\n      });\n    }\n  }\n\n  renderAccountDropdown() {\n    const dropdownConfig = {\n      component: 'ExecuteFunctions',\n      selectClassName: '',\n      selectName: 'dapp-select-account',\n    };\n    return (\n      <div className=\"dapp-select-account\">\n        <WalletDropdown dropdownConfig={dropdownConfig} />\n      </div>\n    );\n  }\n\n  // snapshotted\n  renderSelectFunction() {\n    const contract = this.state.reducers.selectedContract.contract;\n    const functions = this.state.reducers.ObservedContracts[contract.address]\n      .contractFunctions;\n    return (\n      <React.Fragment>\n        <h2>Write to contract</h2>\n        <h4>Select Function</h4>\n        <select\n          className=\"select-contract-function\"\n          name=\"select-contract-function\"\n          onChange={e => this.chooseFunction(e)}\n          defaultValue=\"Pick A Function\"\n          value={this.state.chosenFunction}\n        >\n          <option\n            key={shortid.generate()}\n            disabled=\"\"\n            name=\"pickFunctionDefault\"\n            defaultValue=\"Pick A Function\"\n            value=\"pickFunctionDefault\"\n          >\n            Pick a function\n          </option>\n          {functions\n            ? functions.map((c, i) => (\n                <option key={shortid.generate()} value={c.name}>\n                  {Helpers.toSentence(c.name, true)}\n                </option>\n              ))\n            : ''}\n        </select>\n      </React.Fragment>\n    );\n  }\n\n  // snapshotted\n  renderFunctionInputs() {\n    const contract = this.props.reducers.selectedContract.contract;\n    const selectedFunction = this.props.reducers.selectedFunction;\n    const inputs =\n      selectedFunction !== undefined ? selectedFunction.inputs : [];\n    return (\n      <React.Fragment>\n        {inputs\n          ? inputs.map((input, index) => (\n              <React.Fragment key={shortid.generate()}>\n                <h4>\n                  {Helpers.toSentence(input.name)}\n                  &nbsp;\n                  <em>- {input.type}</em>\n                </h4>\n                <Inputs data={input} index={index} />\n              </React.Fragment>\n            ))\n          : null}\n      </React.Fragment>\n    );\n  }\n\n  renderIsExecutable() {\n    const executable = this.props.reducers.selectedFunction\n      ? this.props.reducers.selectedFunction\n      : {};\n    const bool =\n      Object.keys(executable).length === 0 && executable.constructor === Object;\n    return (\n      <React.Fragment>\n        {!bool ? (\n          <React.Fragment>\n            <hr className=\"dapp-clear-fix\" />\n            <h4> Execute from </h4>\n            {this.renderAccountDropdown()}\n            <button\n              className=\"dapp-block-button execute\"\n              onClick={e => this.executeContractFunction(e)}\n            >\n              Execute\n            </button>\n          </React.Fragment>\n        ) : null}\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"col col-4 mobile-full contract-functions\">\n        {this.renderSelectFunction()}\n        {this.renderFunctionInputs()}\n        {this.renderIsExecutable()}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  ...state,\n  contract: state.reducers.contract,\n  ObservedContracts: state.reducers.ObservedContracts,\n  selectedFunction: state.reducers.selectedFunction,\n  selectedContract: state.reducers.selectedContract,\n  showContractFunctions: state.reducers.showContractFunctions,\n  Wallets: state.reducers.Wallets,\n});\n\nexport default connect(\n  mapStateToProps,\n  { ...Actions }\n)(ExecuteFunctions);\n","import React, { Component } from 'react';\nimport ExecuteConstants from './ExecuteConstants';\nimport ExecuteFunctions from './ExecuteFunctions';\n\nexport class ExecutableContract extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showContractFunctions: false,\n    };\n  }\n\n  toggleContractInfo(e) {\n    this.setState({ showContractFunctions: !this.state.showContractFunctions });\n  }\n\n  render() {\n    const show = this.state.showContractFunctions;\n    let divStyle;\n    show === undefined || show\n      ? (divStyle = { display: 'block' })\n      : (divStyle = { display: 'none' });\n    return (\n      <div className=\"execute-contract\">\n        <button\n          className=\"toggle-visibility dapp-block-button dapp-small\"\n          onClick={e => this.toggleContractInfo(e)}\n        >\n          Hide contract info\n        </button>\n        <div className=\"dapp-clear-fix\" />\n        <div className=\"row clear\" style={divStyle}>\n          <ExecuteConstants />\n          <ExecuteFunctions />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ExecutableContract;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport shortid from 'shortid';\nimport * as Utils from '../../utils/utils';\nimport * as Actions from '../../actions/actions';\n\nconst DateFormat = props => {\n  return (\n    <td\n      className=\"time simptip-position-right simptip-movable\"\n      data-tooltip=\"//TODO: get timestamp\"\n    >\n      <h2>{Utils.getMonthName(props.log.timestamp)}</h2>\n      <p>{Utils.getDate(props.log.timestamp)}</p>\n    </td>\n  );\n};\n\nconst LogValue = props => {\n  return (\n    <p key={shortid.generate()} style={{ wordBreak: 'break-word' }}>\n      {props.val} : &nbsp; <strong> {props.log.returnValues[props.val]}</strong>\n      <br />\n    </p>\n  );\n};\n\nconst Event = props => {\n  return (\n    <td className=\"account-name\">\n      <h2>{props.log.event}</h2>\n      {Object.keys(props.log.returnValues).map((val, i) =>\n        isNaN(val) ? <LogValue log={props.log} val={val} /> : null\n      )}\n    </td>\n  );\n};\n\nexport class ContractEvents extends Component {\n  constructor(props) {\n    super(props);\n    this.state = this.props;\n    this.displayEventModal = this.displayEventModal.bind(this);\n    this.setState({ showContractFunctions: true });\n  }\n\n  displayEventModal(e, log) {\n    log.originalContractName = this.props.reducers.selectedContract.contract[\n      'contract-name'\n    ];\n    log.originalContractAddress = this.props.reducers.selectedContract.contract.address;\n\n    this.props.updateSelectedEvent(log);\n    this.props.displayModal('displayEventInfo');\n  }\n\n  render() {\n    const contract = this.props.reducers.selectedContract.contract;\n    const logs = this.props.reducers.ObservedContracts[contract.address].logs;\n    return (\n      <table className=\"dapp-zebra transactions\">\n        <tbody>\n          {logs.map(log => (\n            <tr\n              key={shortid.generate()}\n              onClick={e => {\n                this.displayEventModal(e, log);\n              }}\n              data-transaction-hash={log.transactionHash}\n              data-block-hash={log.blockHash}\n            >\n              <DateFormat log={log} />\n              <Event log={log} />\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return state;\n};\n\nexport default connect(\n  mapStateToProps,\n  { ...Actions }\n)(ContractEvents);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { Identicon } from 'ethereum-react-components';\nimport SU from '../components/elements/SelectableUnit';\nimport ContractActionBar from '../components/elements/ContractActionBar';\nimport ExecutableContract from '../components/elements/ExecutableContract';\nimport ContractEvents from '../components/elements/ContractEvents';\n\nimport NoMatchingTransaction from '../components/elements/NoMatchingTransaction';\n\nimport LatestTransactions from '../components/elements/LatestTransactions';\n\nimport { displayPriceFormatter } from '../utils/utils';\nimport * as Actions from '../actions/actions';\n\nimport NotFound from './NotFound.js';\n\nconst StickyBar = props => {\n  return (\n    <div className=\"dapp-sticky-bar dapp-container\">\n      <Identicon classes=\"dapp-identicon\" title address={props.address} />\n    </div>\n  );\n};\n\nconst StatelessSummary = props => {\n  return (\n    <React.Fragment>\n      <h1>\n        <em className=\"edit-name\">{props.contract['contract-name']}</em>\n        <i className=\"edit-icon icon-pencil\" />\n      </h1>\n      <h2 className=\"copyable-address\">\n        <i className=\"icon-key\" title=\"Account\" />\n        <span>{props.contract.address}</span>\n      </h2>\n      <div className=\"clear\" />\n    </React.Fragment>\n  );\n};\n\nexport class SingleContractView extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ...this.props,\n      dailyEtherLimit: '',\n      requiredSignatures: '',\n      ownersList: '',\n      showContractFunctions: true,\n    };\n    this.redirectToOwnersSingleView = this.redirectToOwnersSingleView.bind(\n      this\n    );\n    this.watchContractEvents = this.watchContractEvents.bind(this);\n    this.toggleContractInfo = this.toggleContractInfo.bind(this);\n    this.displayEventModal = this.displayEventModal.bind(this);\n    this.executeAndWatch = this.executeAndWatch.bind(this);\n    this.executeFunctions = this.executeFunctions.bind(this);\n    this.updateContractWithMethods = this.updateContractWithMethods.bind(this);\n    this.updateContractWithMethodOutputs = this.updateContractWithMethodOutputs.bind(\n      this\n    );\n    // this.setState({ showContractFunctions: true });\n  }\n\n  componentDidMount() {\n    this.setState({ displaySU: false });\n    // this.setState({ showContractFunctions: true });\n  }\n\n  toggleSU() {\n    if (this.state.displaySU === undefined) this.setState({ displaySU: false });\n    else {\n      this.state.displaySU\n        ? this.setState({ displaySU: false })\n        : this.setState({ displaySU: true });\n    }\n  }\n\n  displayEventModal(e, log) {\n    log.originalContractName = this.props.reducers.selectedContract.contract[\n      'contract-name'\n    ];\n    log.originalContractAddress = this.props.reducers.selectedContract.contract.address;\n\n    this.props.updateSelectedEvent(log);\n    this.props.displayModal('displayEventInfo');\n  }\n\n  executeAndWatch(e, contract) {\n    this.executeFunctions(e, contract);\n    this.watchContractEvents(e, contract);\n  }\n\n  updateContractWithMethods(contract, contractFunctions, contractConstants) {\n    console.log('is deployed contract', contract.deployedWalletContract);\n    if (!contract.deployedWalletContract) {\n      this.props.addObservedContractFunctions({\n        address: contract.address,\n        value: contractFunctions,\n        name: 'contractFunctions',\n      });\n      this.props.addObservedContractConstants({\n        address: contract.address,\n        value: contractConstants,\n        name: 'contractConstants',\n      });\n    } else {\n      this.props.addDeployedContractFunctions({\n        address: contract.address,\n        value: contractFunctions,\n        name: 'contractFunctions',\n      });\n      this.props.addDeployedContractConstants({\n        address: contract.address,\n        value: contractConstants,\n        name: 'contractConstants',\n      });\n    }\n  }\n\n  updateContractWithMethodOutputs(contract, method, index) {\n    if (!contract.deployedWalletContract) {\n      this.props.updateInitialObservedContractMethodOutputs({\n        contractAddress: contract.address,\n        name: method.name,\n        index,\n        value: method.outputs,\n      });\n    } else {\n      this.props.updateInitialDeployedContractMethodOutputs({\n        contractAddress: contract.address,\n        name: method.name,\n        index,\n        value: method.outputs,\n      });\n    }\n  }\n\n  executeFunctions(e, contract) {\n    let web3;\n    if (this.props.web3 && this.props.web3.web3Instance) {\n      web3 = this.props.web3.web3Instance;\n    } else {\n      return;\n    }\n\n    const contractInstance = new web3.eth.Contract(\n      JSON.parse(contract.jsonInterface),\n      contract.address\n    );\n    // should i bag this and instead of push to array, redux it and set key to function name?\n    // START\n    const contractFunctions = [];\n    const contractConstants = [];\n    JSON.parse(contract.jsonInterface).map(func => {\n      if (func.type == 'function') {\n        func.constant\n          ? contractConstants.push(func)\n          : contractFunctions.push(func);\n      }\n    });\n\n    this.updateContractWithMethods(\n      contract,\n      contractFunctions,\n      contractConstants\n    );\n\n    // console.log(\"is it a deployed wallet contract?! \", contract.deployedWalletContract)\n\n    // // TODO: conditional to update either observed contracts,\n    // // selected wallet, or deployed wallet contracts\n    // // right now is only updating observed contracts\n    // this.props.addObservedContractFunctions({\n    //   address: contract.address,\n    //   value: contractFunctions,\n    //   name: 'contractFunctions',\n    // });\n    // this.props.addObservedContractConstants({\n    //   address: contract.address,\n    //   value: contractConstants,\n    //   name: 'contractConstants',\n    // });\n    // END\n    contractConstants.map((method, index) => {\n      const args = method.inputs.map(input => {\n        input.typeShort = input.type.match(/[a-z]+/i)[0];\n        if (input.value === undefined || input.value === null) {\n          input.value = '';\n        }\n        if (input.typeShort === 'bytes' && input.value === '') {\n          input.value = '0x0000000000000000000000000000000000000000';\n        } else if (input.value === '' && input.typeShort !== 'address') {\n          input.value = '0x00';\n        }\n        return input.value;\n      });\n\n      console.log('method: ', method);\n      console.log('args: ', ...args);\n      console.log('name: ', method.name);\n\n      try {\n        contractInstance.methods[method.name](...args).call(res => {\n          method.outputs.map((output, i) => (method.outputs[i].value = res[i]));\n        });\n      } catch (err) {\n        console.warn('method: ', method);\n        console.warn('args: ', ...args);\n        console.warn('name: ', method.name);\n        console.warn(err);\n      }\n\n      this.updateContractWithMethodOutputs(contract, method, index);\n\n      // this.props.updateInitialContractMethodOutputs({\n      //   contractAddress: contract.address,\n      //   name: method.name,\n      //   index: index,\n      //   value: method.outputs,\n      // });\n    });\n  }\n\n  /*\n  Watches custom events\n\n  @param {Object} contract the account object with .jsonInterface\n  */\n  watchContractEvents(e, contract) {\n    let web3;\n    if (this.props.web3 && this.props.web3.web3Instance) {\n      web3 = this.props.web3.web3Instance;\n    } else {\n      return;\n    }\n\n    const contractInstance = new web3.eth.Contract(\n      JSON.parse(contract.jsonInterface),\n      contract.address\n    );\n\n    // TODO indicate block range\n    const subscription = contractInstance.events.allEvents({});\n\n    contractInstance.getPastEvents('allEvents', (error, logs) => {\n      if (!error && logs.length > 0) {\n        logs.map(log => {\n          web3.eth.getBlock(log.blockNumber, (err, res) => {\n            // convert to milliseconds\n            log.timestamp = new Date(res.timestamp * 1000);\n            this.props.addPastContractLogs(log);\n          });\n        });\n      } else {\n        console.warn('error', error);\n        // TODO: global notification\n      }\n    });\n\n    subscription.on('data', log => {\n      web3.eth.getBlock(log.blockNumber, (err, res) => {\n        if (err) console.warn(err);\n        if (res) {\n          // convert to milliseconds\n          log.timestamp = new Date(res.timestamp * 1000);\n          this.props.updateContractLog(log);\n        }\n      });\n    });\n  }\n\n  toggleContractInfo(e) {\n    console.log('here intoggleContractInfo', e);\n    this.setState({ showContractFunctions: !this.state.showContractFunctions });\n  }\n\n  redirectToOwnersSingleView(e) {\n    console.log(e);\n    // determine if address if for account or contract\n    // gather info from wallet or contract redux state objects\n    // aciont for updateSelectedContract or updateSelectedWallet\n  }\n\n  renderWalletDetails() {\n    return (\n      <React.Fragment>\n        <div className=\"row clear wallet-info\">\n          <div className=\"col col-4 mobile-full\">\n            <h3>\n              Daily limit\n              <span style={{ fontWeight: 200 > 10.0 }}> ether</span>\n            </h3>\n            10.00 ether remaining today\n          </div>\n          <div className=\"col col-4 mobile-full\">\n            <h3>Required signatures</h3> 2\n          </div>\n          <div className=\"col col-4 mobile-full\">\n            <h3>Owners</h3>\n          </div>\n          security icons\n        </div>\n        <div className=\"account-info\">\n          <h3>Note</h3>\n          <p>\n            Most exchanges don't support receiving ether from a contract wallet\n            yet. Be sure to move your balance to an account address first!\n          </p>\n        </div>\n      </React.Fragment>\n    );\n  }\n\n  renderSummary() {\n    const contract = this.props.reducers.selectedContract.contract;\n    return (\n      <div className=\"accounts-page-summary\">\n        <Identicon classes=\"dapp-identicon\" title address={contract.address} />\n        <header>\n          <StatelessSummary contract={contract} />\n          <span className=\"account-balance\">\n            {displayPriceFormatter(this.props, contract.balance)}\n            {contract.balance}\n          </span>\n        </header>\n        <table className=\"token-list dapp-zebra\">\n          <tbody />\n        </table>\n        {contract.deployedWalletContract ? this.renderWalletDetails() : null}\n      </div>\n    );\n  }\n\n  renderEvents() {\n    const contract = this.props.reducers.selectedContract.contract;\n    const logs = contract.logs ? contract.logs : undefined;\n    return (\n      <React.Fragment>\n        <h2>Latest events</h2>\n        <br />\n        <div>\n          <input\n            type=\"checkbox\"\n            id=\"watch-events-checkbox\"\n            className=\"toggle-watch-events\"\n            onClick={e => this.executeAndWatch(e, contract)}\n          />\n          <label htmlFor=\"watch-events-checkbox\">Watch contract events</label>\n        </div>\n        <br />\n        <input\n          type=\"text\"\n          className=\"filter-transactions\"\n          placeholder=\"Filter events\"\n        />\n        {logs && logs.length ? <ContractEvents /> : null}\n      </React.Fragment>\n    );\n  }\n\n  renderAccountTransactions() {\n    const address = this.props.reducers.selectedContract.contract.address;\n    const transactions = this.props.reducers.Transactions;\n    const accountTxns = {};\n    Object.keys(transactions).map(hash => {\n      if (\n        transactions[hash].from === address.toLowerCase() ||\n        transactions[hash].to === address.toLowerCase()\n      ) {\n        accountTxns[hash] = transactions[hash];\n      }\n      return null;\n    });\n    return (\n      <React.Fragment>\n        {Object.keys(accountTxns).length &&\n        accountTxns.constructor === Object ? (\n          <LatestTransactions transactions={accountTxns} />\n        ) : (\n          <NoMatchingTransaction />\n        )}\n      </React.Fragment>\n    );\n  }\n\n  renderSingleContract() {\n    const contract = this.props.reducers.selectedContract.contract;\n\n    const logs = contract.logs ? contract.logs : undefined;\n    const contractFunctions = contract.contractFunctions\n      ? contract.contractFunctions\n      : undefined;\n    const contractConstants = contract.contractConstants\n      ? contract.contractConstants\n      : undefined;\n\n    return (\n      <div className=\"dapp-container accounts-page\">\n        <StickyBar address={contract.address} />\n        {this.renderSummary()}\n        <ContractActionBar contract={contract} />\n        {contractConstants &&\n        contractFunctions &&\n        (contractConstants.length || contractFunctions.length) ? (\n          <ExecutableContract />\n        ) : null}\n        <div className=\"accounts-transactions\">\n          {this.renderEvents()}\n          {this.renderAccountTransactions()}\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    const c = this.props.reducers.selectedContract;\n    return c === undefined || c === '' ? (\n      <NotFound />\n    ) : (\n      this.renderSingleContract()\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return state;\n};\n\nexport default connect(\n  mapStateToProps,\n  { ...Actions }\n)(SingleContractView);\n","import React, { Component } from 'react';\nimport isEqual from 'lodash/isEqual';\nimport { connect } from 'react-redux';\nimport shortid from 'shortid';\nimport ContractItem from './elements/ContractItem';\nimport ButtonDescription from './ButtonDescription';\nimport { displayModal } from '../actions/actions';\n\nconst buttonTitle = 'Custom Contracts';\nconst buttonDescription =\n  'To watch and interact with a contract already deployed on the blockchain, you need to know its address and the description of its interface in JSON format.';\n\nexport class CustomContracts extends Component {\n  shouldComponentUpdate(prevProps, prevState) {\n    if (!isEqual(prevProps.ObservedContracts, this.props.ObservedContracts)) {\n      return true;\n    }\n    return false;\n  }\n\n  renderWatchContractButton() {\n    return (\n      <React.Fragment>\n        <button\n          className=\"wallet-box create add-contract\"\n          onClick={() => this.props.displayModal('displayWatchContract')}\n        >\n          <div className=\"account-pattern\">+</div>\n          <h3>WATCH CONTRACT</h3>\n        </button>\n        <div className=\"dapp-clear-fix\" />\n      </React.Fragment>\n    );\n  }\n\n  renderObservedContracts() {\n    const oc = this.props.ObservedContracts;\n    if (oc !== undefined && Object.keys(oc).length !== 0) {\n      return (\n        <React.Fragment>\n          <div className=\"wallet-box-list\">\n            {Object.keys(oc).map(contract => (\n              <ContractItem\n                key={shortid.generate()}\n                contract={oc[contract]}\n                addressType=\"ObservedContracts\"\n              />\n            ))}\n          </div>\n        </React.Fragment>\n      );\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"contracts-view-custom-contracts\">\n        <ButtonDescription\n          title={buttonTitle}\n          description={buttonDescription}\n        />\n        {this.renderObservedContracts()}\n        {this.renderWatchContractButton()}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  ObservedContracts: state.reducers.ObservedContracts,\n});\n\nexport default connect(\n  mapStateToProps,\n  { displayModal }\n)(CustomContracts);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { EthAddress, Identicon } from 'ethereum-react-components';\nimport { displayModal, tokenToDelete } from '../../actions/actions';\n\nimport { tokenInterface } from '../../constants/TokenInterfaceConstant';\n\nimport { makeID } from '../../utils/helperFunctions';\n\nexport class TokenBox extends Component {\n  constructor(props) {\n    super(props);\n    this.deleteTokenModal = this.deleteTokenModal.bind(this);\n  }\n\n  deleteTokenModal(e) {\n    this.props.tokenToDelete(this.props.token);\n    this.props.displayModal('displayDeleteToken');\n  }\n\n  renderBalance() {\n    const token = this.props.token;\n    return (\n      <span className=\"account-balance\">\n        {token.totalSupply}\n        <span>{token.symbol}</span>\n      </span>\n    );\n  }\n\n  render() {\n    const GeoPattern = require('geopattern');\n    const pattern = GeoPattern.generate('0x000', { color: '#CCC6C6' });\n    const iconStyle = { backgroundImage: pattern.toDataUrl() };\n    const token = this.props.token;\n\n    const address =\n      token === {} || token.address === '' ? makeID() : token.address;\n\n    return (\n      <div className=\"wallet-box tokens\" style={iconStyle}>\n        <Identicon\n          classes=\"dapp-identicon dapp-small\"\n          title\n          size=\"small\"\n          address={address}\n        />\n        <h3>{token.name}</h3>\n        <button\n          className=\"delete-token\"\n          onClick={e => this.deleteTokenModal(e)}\n        >\n          <i className=\"icon-trash\" />\n        </button>\n        {this.renderBalance()}\n        <EthAddress short classes=\"account-id\" address={address} />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return state;\n};\n\nexport default connect(\n  mapStateToProps,\n  { displayModal, tokenToDelete }\n)(TokenBox);\n","import React, { Component } from 'react';\nimport isEqual from 'lodash/isEqual';\nimport { connect } from 'react-redux';\nimport TokenBox from './elements/TokenBox';\nimport ButtonDescription from './ButtonDescription';\nimport { displayModal, fetchTokensForAutoScan } from '../actions/actions';\n\nconst buttonTitle = 'Custom Tokens';\nconst buttonDescription =\n  'Tokens are currencies and other fungibles built on the Ethereum platform. In order for accounts to watch for tokens and send them, you have to add their address to this list. You can create your own token by simply modifying this example of a custom token contract or learning more about Ethereum Tokens.';\n\nexport class CustomTokens extends Component {\n  shouldComponentUpdate(prevProps, prevState) {\n    if (!isEqual(prevProps.ObservedTokens, this.props.ObservedTokens)) {\n      return true;\n    }\n    return false;\n  }\n\n  // snapshotted\n  renderObservedTokens() {\n    const ot = this.props.ObservedTokens;\n    if (ot !== undefined && Object.keys(ot).length !== 0) {\n      return (\n        <React.Fragment>\n          <button className=\"wallet-box-list\">\n            {Object.keys(ot).map(token => (\n              <TokenBox key={ot[token].address} token={ot[token]} />\n            ))}\n          </button>\n        </React.Fragment>\n      );\n    }\n  }\n\n  // snapshotted\n  renderAddTokenButton() {\n    return (\n      <React.Fragment>\n        <button\n          className=\"wallet-box create add-token\"\n          onClick={() => this.props.displayModal('displayWatchToken')}\n          style={{ float: 'left' }}\n        >\n          <div className=\"account-pattern\">+</div>\n          <h3>WATCH CUSTOM TOKEN</h3>\n        </button>\n      </React.Fragment>\n    );\n  }\n\n  // TODO: use utility combineWallets\n  autoScanTokens(e) {\n    const wallets = this.props.Wallets;\n    const oc = this.props.ObservedContracts;\n    const addresses = [\n      ...Object.keys(wallets),\n      ...Object.keys(oc).map(key => {\n        return oc[key].address;\n      }),\n      ...Object.keys(oc).map(key => {\n        return oc[key].address;\n      }),\n    ];\n    this.props.fetchTokensForAutoScan(addresses);\n  }\n\n  // snapshotted\n  renderAutoScan() {\n    return (\n      <React.Fragment>\n        {this.props.network === 'main' ? (\n          <button\n            className=\"wallet-box create token-auto-scan\"\n            title=\"Automatically scan for balances of popular tokens on your accounts.\"\n            onClick={this.autoScanTokens()}\n          >\n            <div className=\"account-pattern\">\n              <div className=\"icon icon-target\" />\n            </div>\n            <h3>Auto-Scan</h3>\n          </button>\n        ) : null}\n        <div className=\"dapp-clear-fix\" />\n      </React.Fragment>\n    );\n  }\n\n  // not snapshotted\n  render() {\n    return (\n      <div className=\"contracts-view-custom-tokens\">\n        <ButtonDescription\n          title={buttonTitle}\n          description={buttonDescription}\n        />\n        {this.renderObservedTokens()}\n        {this.renderAddTokenButton()}\n        {this.renderAutoScan()}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  network: state.reducers.network,\n  ObservedTokens: state.reducers.ObservedTokens,\n  Wallets: state.reducers.Wallets,\n  ObservedContracts: state.reducers.ObservedContracts,\n});\n\nexport default connect(\n  mapStateToProps,\n  { displayModal, fetchTokensForAutoScan }\n)(CustomTokens);\n","export const vulnerableWallets = {\n  full: [\n    '0x6000357c010000000000000000000000000000000000000000000000000000000090048063173825d9146100f75780632f54bf6e146101085780635c52c2f51461011d5780637065cb481461012b578063797af6271461013c578063b20d30a914610151578063b61d27f614610162578063ba51a6df1461017f578063cbf0b0c014610190578063f00d4b5d146101a1576100f15b600034116100a1576100ee565b7fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c60403373ffffffffffffffffffffffffffffffffffffffff168152602001348152602001604090036040a15b5b565b60006000f35b61010260043561049f565b60006000f35b610113600435610636565b8060005260206000f35b6101256106b0565b60006000f35b61013660043561034e565b60006000f35b610147600435610a19565b8060005260206000f35b61015c600435610678565b60006000f35b610175600435602435606460443561072d565b8060005260206000f35b61018a6004356105cf565b60006000f35b61019b6004356106e8565b60006000f35b6101af6004356024356101b5565b60006000f35b60006040600036808284378201915050604090036040206101d581610d2a565b6101de57610347565b61010260005060008573ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000505491506000821461021e57610224565b50610349565b61022d83610636565b6102365761023c565b50610349565b82600260005083610100811061024e57005b90900160006101000a81548173ffffffffffffffffffffffffffffffffffffffff02191690830217905550600061010260005060008673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050819055508161010260005060008573ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050819055507fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c60408573ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff168152602001604090036040a15b505b505050565b60406000368082843782019150506040900360402061036c81610d2a565b6103755761049a565b61037e82610636565b6103875761038d565b5061049c565b60fa60016000505410156103a0576103aa565b6103a8610ec4565b505b60fa60016000505410156103bd576103c3565b5061049c565b600160008181505480929190600101919050555081600260005060016000505461010081106103ee57005b90900160006101000a81548173ffffffffffffffffffffffffffffffffffffffff0219169083021790555060016000505461010260005060008473ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050819055507f994a936646fe87ffe4f1e469d3d6aa417d6b855598397f323de5b449f765f0c360408373ffffffffffffffffffffffffffffffffffffffff168152602001604090036040a15b505b50565b60006040600036808284378201915050604090036040206104bf81610d2a565b6104c8576105c9565b61010260005060008473ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050549150600082146105085761050e565b506105cb565b6000600260005083610100811061052157005b90900160006101000a81548173ffffffffffffffffffffffffffffffffffffffff02191690830217905550600061010260005060008573ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050819055507f58619076adf5bb0943d100ef88d52d7c3fd691b19d3a9071b555b651fbf418da60408473ffffffffffffffffffffffffffffffffffffffff168152602001604090036040a15b505b5050565b6040600036808284378201915050604090036040206105ed81610d2a565b6105f657610631565b816000600050819055507facbdb084c721332ac59f9b8e392196c9eb0e4932862da8eb9beaf0dad4f550da6040838152602001604090036040a15b505b50565b6000600061010260005060008473ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005054119050610673565b919050565b60406000368082843782019150506040900360402061069681610d2a565b61069f576106ab565b81610105600050819055505b505b50565b6040600036808284378201915050604090036040206106ce81610d2a565b6106d7576106e4565b6000610104600050819055505b505b565b60406000368082843782019150506040900360402061070681610d2a565b61070f57610728565b8173ffffffffffffffffffffffffffffffffffffffff16ff5b505b50565b60006107388461117d565b61074157610808565b7f92ca3a80853e6663fa31fa10b99225f18d4902939b4c53a9caae9043f6efd00460403373ffffffffffffffffffffffffffffffffffffffff1681526020018581526020018673ffffffffffffffffffffffffffffffffffffffff168152602001848490918181526020018282808284378201915050915050604090036040a18473ffffffffffffffffffffffffffffffffffffffff16846000600060008787808284378201915050600084866185025a03f16107fa57005b505060006001029050610a11565b6040600036808284378201915050604090036040209050805061082a81610a19565b15801561088a57506000610107600050600083815260200190815260200160002060005060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b61089357610a10565b84610107600050600083815260200190815260200160002060005060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908302179055508361010760005060008381526020019081526020016000206000506001016000508190555082826101076000506000848152602001908152602001600020600050600201600050919082805482825590600052602060002090601f01602090048101928215610965579182015b82811115610964578235826000505591602001919060010190610946565b5b5090505b808211156109835760008181506000905550600101610969565b5050600050507f1733cbb53659d713b79580f79f3f9ff215f78a7c7aa45890f3b89fc5cddfbf3260408281526020013373ffffffffffffffffffffffffffffffffffffffff1681526020018581526020018673ffffffffffffffffffffffffffffffffffffffff168152602001848490918181526020018282808284378201915050915050604090036040a15b5b949350505050565b600081610a2581610d2a565b610a2e57610d23565b6000610107600050600085815260200190815260200160002060005060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610a8f57610d22565b610107600050600084815260200190815260200160002060005060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610107600050600085815260200190815260200160002060005060010160005054600060006000610107600050600089815260200190815260200160002060005060020160005080548015610b5457820191906000526020600020905b815481529060010190602001808311610b40575b5050600084866185025a03f1610b6657005b50507fe7c957c06e9a662c1a6c77366179f5b702b97651dc28eee7d5bf1dff6e40bb4a60403373ffffffffffffffffffffffffffffffffffffffff1681526020018481526020016101076000506000868152602001908152602001600020600050600101600050548152602001610107600050600086815260200190815260200160002060005060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016101076000506000868152602001908152602001600020600050600201600090918254815260200182825080548015610c8157820191906000526020600020905b815481529060010190602001808311610c6d575b5050915050604090036040a1610107600050600084815260200190815260200160002060006000820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600182016000506000905560028201600050805460008255601f0160209004906000526020600020908101905b80821115610d145760008181506000905550600101610cfa565b505050506001915050610d25565b5b505b919050565b6000600060006000600061010260005060003373ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005054935060008414610d7457610d79565b610ebb565b610103600050600087815260200190815260200160002060009250925060008383506000016000505414610dac57610dcf565b600060005054838350600001600050819055506000838350600101600050819055505b8360020a9050600081848450600101600050541614610ded57610eba565b7fe1c52dc63b719ade82e8bea94cc41a0d5d28e4aaf536adb5e9cccc9ff8c1aeda60403373ffffffffffffffffffffffffffffffffffffffff168152602001878152602001604090036040a16001838350600001600050541115610e7f578282506000016000818150548092919060019003919050555080838350600101600082828250541792505081905550610eb9565b6101036000506000878152602001908152602001600020600060008201600050600090556001820160005060009055505060019450610ebb565b5b5b50505050919050565b60006000600190505b600160005054811015611178575b60016000505481108015610f3a575060006002600050826101008110610efd57005b90900160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b15610f4c578080600101915050610edb565b5b6001600160005054118015610fb15750600060026000506001600050546101008110610f7557005b90900160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b15610fd057600160008181505480929190600190039190505550610f4d565b600160005054811080156110345750600060026000506001600050546101008110610ff757005b90900160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614155b801561108a57506000600260005082610100811061104e57005b90900160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b61109357611173565b600260005060016000505461010081106110a957005b90900160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660026000508261010081106110de57005b90900160006101000a81548173ffffffffffffffffffffffffffffffffffffffff02191690830217905550806101026000506000600260005084610100811061112357005b90900160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050819055505b610ecd565b5b5090565b60006101066000505461118e611216565b11611198576111b7565b6000610104600050819055506111ac611216565b610106600050819055505b61010460005054826101046000505401101580156111e357506101056000505482610104600050540111155b6111ec57611208565b8161010460008282825054019250508190555060019050611211565b60009050611211565b919050565b60006201518042049050611225565b9056',\n    '0x60003560e060020a90048063173825d9146100cb5780632f54bf6e146100dc5780635c52c2f5146100f15780637065cb48146100ff5780637fe6589114610110578063b20d30a914610125578063b61d27f614610136578063ba51a6df14610153578063cbf0b0c014610164578063f00d4b5d14610175576100c560003411610087576100c3565b7fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c600033600160a060020a031681526020013481526020016000a15b565b60006000f35b6100d6600435610277565b60006000f35b6100e76004356106a2565b8060005260206000f35b6100f9610248565b60006000f35b61010a600435610189565b60006000f35b61011b6004356104b6565b8060005260206000f35b61013060043561092e565b60006000f35b61014960243560443560646004356106cb565b8060005260206000f35b61015e60043561045b565b60006000f35b61016f60043561066f565b60006000f35b610183600435602435610345565b60006000f35b60006000368082843782019150506000206101a38161095d565b6101ac57610243565b6101b5826106a2565b6101be576101c4565b50610245565b60018054908160010190555081600260006001548152602001908152602001600020819055506001546003600084600160a060020a03168152602001908152602001600020819055507f994a936646fe87ffe4f1e469d3d6aa417d6b855598397f323de5b449f765f0c3600083600160a060020a031681526020016000a15b505b50565b60006000368082843782019150506000206102628161095d565b61026b57610274565b60006005819055505b50565b600060006000368082843782019150506000206102938161095d565b61029c5761033f565b6003600084600160a060020a03168152602001908152602001600020549150816000146102c8576102ce565b50610341565b6000600260008481526020019081526020016000208190555060006003600085600160a060020a03168152602001908152602001600020819055507f58619076adf5bb0943d100ef88d52d7c3fd691b19d3a9071b555b651fbf418da600084600160a060020a031681526020016000a15b505b5050565b600060006000368082843782019150506000206103618161095d565b61036a57610454565b6003600085600160a060020a03168152602001908152602001600020549150816000146103965761039c565b50610456565b6103a5836106a2565b6103ae576103b4565b50610456565b82600260008481526020019081526020016000208190555060006003600086600160a060020a0316815260200190815260200160002081905550816003600085600160a060020a03168152602001908152602001600020819055507fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c600085600160a060020a0316815260200184600160a060020a031681526020016000a15b505b505050565b60006000368082843782019150506000206104758161095d565b61047e576104b2565b816000819055507facbdb084c721332ac59f9b8e392196c9eb0e4932862da8eb9beaf0dad4f550da60008381526020016000a15b5050565b6000816104c28161095d565b6104cb57610668565b6008600084815260200190815260200160002054600160a060020a0316600014156104f557610667565b6008600084815260200190815260200160002054600160a060020a03166008600085815260200190815260200160002060010154600060006000600860008981526020019081526020016000206002018054801561056f57820191906000526020600020905b81548152906001019060200180831161055b575b50506000848660155a03f15050507f9429218cfc8c83da55f9eaf3044e7b5103fc2bb9a01bf70078cf2496c40c4ebf600033600160a060020a03168152602001848152602001600860008681526020019081526020016000206001015481526020016008600086815260200190815260200160002054600160a060020a03168152602001600860008681526020019081526020016000206002018054801561063357820191906000526020600020905b81548152906001019060200180831161061f575b50506000a160086000848152602001908152602001600020600081556001016000815560010160009055600191505061066a565b5b505b919050565b60006000368082843782019150506000206106898161095d565b6106925761069e565b81600160a060020a0316ff5b5050565b600060006003600084600160a060020a0316815260200190815260200160002054119050919050565b60006106d683610a79565b6106df576107a9565b7f92ca3a80853e6663fa31fa10b99225f18d4902939b4c53a9caae9043f6efd004600033600160a060020a0316815260200184815260200185600160a060020a03168152602001838054801561075157820191906000526020600020905b81548152906001019060200180831161073d575b50506000a183600160a060020a031683600060006000868054801561079257820191906000526020600020905b81548152906001019060200180831161077e575b50506000848660155a03f150505060009050610927565b600060003680828437820191505060002090506107c5816104b6565b1580156107ee57506008600082815260200190815260200160002054600160a060020a03166000145b6107f757610926565b836008600083815260200190815260200160002081905550826008600083815260200190815260200160002060010181905550816008600083815260200190815260200160002060020190818054918054808355916000526020600020906000526020600020601f602080828701049185010460005b8082111561088557838101548582015560010161086d565b84019450508201935050505b808211156108a55760008155600101610891565b5050507fa2e1b6b12a6df8430c7c33911158a9e7087012ca1031dd9fa69d7a4bc449569f600082815260200133600160a060020a0316815260200184815260200185600160a060020a03168152602001838054801561092057820191906000526020600020905b81548152906001019060200180831161090c575b50506000a15b5b9392505050565b60006000368082843782019150506000206109488161095d565b61095157610959565b816006819055505b5050565b60006000600060006003600033600160a060020a031681526020019081526020016000205492508260001461099157610996565b610a71565b60046000868152602001908152602001600020915081546000146109b9576109cc565b6000548281905550600082600101819055505b8260020a9050808260010154166000146109e557610a70565b7f261c71777cbfc40a4342386d9dfc020c8b168f13b3d6f834b789f6f3083439e3600033600160a060020a031681526020018681526020016000a18154600114610a48578180549081600190039055508082600101908154179081905550610a6f565b60046000868152602001908152602001600020600081556001016000905560019350610a71565b5b5b505050919050565b6000610a84336106a2565b610a8d57610afc565b600754610a98610b02565b11610aa257610ab9565b6000600581905550610ab2610b02565b6007819055505b600554826005540110158015610ad55750600654826005540111155b610ade57610af3565b81600590815401908190555060019050610afd565b60009050610afd565b5b919050565b600062015180420490509056',\n    '0x60e060020a600035048063173825d9146100ca5780632f54bf6e146100db5780635c52c2f5146100f05780637065cb48146100fe5780637fe658911461010f578063b20d30a914610124578063b61d27f614610135578063ba51a6df1461014f578063cbf0b0c014610160578063f00d4b5d14610171576100c460003411610086576100c2565b7fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c600033600160a060020a031681526020013481526020016000a15b565b60006000f35b6100d56004356103a4565b60006000f35b6100e66004356104c3565b8060005260206000f35b6100f86101af565b60006000f35b6101096004356102ea565b60006000f35b61011a600435610778565b8060005260206000f35b61012f600435610185565b60006000f35b610145600435602435600061051a565b8060005260206000f35b61015a60043561046d565b60006000f35b61016b6004356104ec565b60006000f35b61017f6004356024356101d9565b60006000f35b60003660008237360160002061019a81610931565b6101a3576101ab565b816006819055505b5050565b6000366000823736016000206101c481610931565b6101cd576101d6565b60006005819055505b50565b60006000366000823736016000206101f081610931565b6101f9576102e3565b6003600085600160a060020a03168152602001908152602001600020549150816000146102255761022b565b506102e5565b610234836104c3565b61023d57610243565b506102e5565b82600260008481526020019081526020016000208190555060006003600086600160a060020a0316815260200190815260200160002081905550816003600085600160a060020a03168152602001908152602001600020819055507fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c600085600160a060020a0316815260200184600160a060020a031681526020016000a15b505b505050565b6000366000823736016000206102ff81610931565b6103085761039f565b610311826104c3565b61031a57610320565b506103a1565b60018054908160010190555081600260006001548152602001908152602001600020819055506001546003600084600160a060020a03168152602001908152602001600020819055507f994a936646fe87ffe4f1e469d3d6aa417d6b855598397f323de5b449f765f0c3600083600160a060020a031681526020016000a15b505b50565b60006000366000823736016000206103bb81610931565b6103c457610467565b6003600084600160a060020a03168152602001908152602001600020549150816000146103f0576103f6565b50610469565b6000600260008481526020019081526020016000208190555060006003600085600160a060020a03168152602001908152602001600020819055507f58619076adf5bb0943d100ef88d52d7c3fd691b19d3a9071b555b651fbf418da600084600160a060020a031681526020016000a15b505b5050565b60003660008237360160002061048281610931565b61048b576104bf565b816000819055507facbdb084c721332ac59f9b8e392196c9eb0e4932862da8eb9beaf0dad4f550da60008381526020016000a15b5050565b600060006003600084600160a060020a0316815260200190815260200160002054119050919050565b60003660008237360160002061050181610931565b61050a57610516565b81600160a060020a0316ff5b5050565b600061052583610a4d565b61052e576105f8565b7f92ca3a80853e6663fa31fa10b99225f18d4902939b4c53a9caae9043f6efd004600033600160a060020a0316815260200184815260200185600160a060020a0316815260200183805480156105a057820191906000526020600020905b81548152906001019060200180831161058c575b50506000a183600160a060020a03168360006000600086805480156105e157820191906000526020600020905b8154815290600101906020018083116105cd575b50506000848660155a03f150505060009050610771565b600036600082373601600020905061060f81610778565b15801561063857506008600082815260200190815260200160002054600160a060020a03166000145b61064157610770565b836008600083815260200190815260200160002081905550826008600083815260200190815260200160002060010181905550816008600083815260200190815260200160002060020190818054918054808355916000526020600020906000526020600020601f602080828701049185010460005b808211156106cf5783810154858201556001016106b7565b84019450508201935050505b808211156106ef57600081556001016106db565b5050507fa2e1b6b12a6df8430c7c33911158a9e7087012ca1031dd9fa69d7a4bc449569f600082815260200133600160a060020a0316815260200184815260200185600160a060020a03168152602001838054801561076a57820191906000526020600020905b815481529060010190602001808311610756575b50506000a15b5b9392505050565b60008161078481610931565b61078d5761092a565b6008600084815260200190815260200160002054600160a060020a0316600014156107b757610929565b6008600084815260200190815260200160002054600160a060020a03166008600085815260200190815260200160002060010154600060006000600860008981526020019081526020016000206002018054801561083157820191906000526020600020905b81548152906001019060200180831161081d575b50506000848660155a03f15050507f9429218cfc8c83da55f9eaf3044e7b5103fc2bb9a01bf70078cf2496c40c4ebf600033600160a060020a03168152602001848152602001600860008681526020019081526020016000206001015481526020016008600086815260200190815260200160002054600160a060020a0316815260200160086000868152602001908152602001600020600201805480156108f557820191906000526020600020905b8154815290600101906020018083116108e1575b50506000a160086000848152602001908152602001600020600081556001016000815560010160009055600191505061092c565b5b505b919050565b60006000600060006003600033600160a060020a03168152602001908152602001600020549250826000146109655761096a565b610a45565b600460008681526020019081526020016000209150815460001461098d576109a0565b6000548281905550600082600101819055505b8260020a9050808260010154166000146109b957610a44565b7f261c71777cbfc40a4342386d9dfc020c8b168f13b3d6f834b789f6f3083439e3600033600160a060020a031681526020018681526020016000a18154600114610a1c578180549081600190039055508082600101908154179081905550610a43565b60046000868152602001908152602001600020600081556001016000905560019350610a45565b5b5b505050919050565b6000610a58336104c3565b610a6157610ad0565b600754610a6c610ad6565b11610a7657610a8d565b6000600581905550610a86610ad6565b6007819055505b600554826005540110158015610aa95750600654826005540111155b610ab257610ac7565b81600590815401908190555060019050610ad1565b60009050610ad1565b5b919050565b600062015180420490509056',\n    '0x6000357c010000000000000000000000000000000000000000000000000000000090048063173825d9146100fe5780632f54bf6e146101155780635c52c2f5146101305780637065cb4814610141578063797af62714610158578063b20d30a914610173578063b61d27f61461018a578063b75c7dc6146101bc578063ba51a6df146101d3578063cbf0b0c0146101ea578063f00d4b5d14610201576100f85b60003411156100f5577fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c60403373ffffffffffffffffffffffffffffffffffffffff168152602001348152602001604090036040a15b5b565b60006000f35b61010f6004803590602001506105e9565b60006000f35b61012660048035906020015061079a565b8060005260206000f35b61013b600450610810565b60006000f35b6101526004803590602001506104ab565b60006000f35b610169600480359060200150610b6f565b8060005260206000f35b6101846004803590602001506107dc565b60006000f35b6101b26004803590602001803590602001803590602001906004018035906020019150610885565b8060005260206000f35b6101cd60048035906020015061021e565b60006000f35b6101e460048035906020015061071c565b60006000f35b6101fb600480359060200150610844565b60006000f35b610218600480359060200180359060200150610321565b60006000f35b600060006000600061010260005060003373ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005054935060008414156102675761031a565b8360020a925061010360005060008681526020019081526020016000206000915091506000838383506001016000505416111561031957818150600001600081815054809291906001019190505550828282506001016000828282505403925050819055507fc7fb647e59b18047309aa15aad418e5d7ca96d173ad704f1031a2c3d7591734b60403373ffffffffffffffffffffffffffffffffffffffff168152602001868152602001604090036040a15b5b5050505050565b600060406000368082843782019150506040900360402061034181610e78565b156104a45761034f8361079a565b1561035a57506104a6565b61010260005060008573ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050549150600082141561039c57506104a6565b6103a4611315565b8273ffffffffffffffffffffffffffffffffffffffff1660026000508361010081106103cc57005b90900160005081905550600061010260005060008673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050819055508161010260005060008573ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050819055507fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c60408573ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff168152602001604090036040a15b505b505050565b6040600036808284378201915050604090036040206104c981610e78565b156105e4576104d78261079a565b156104e257506105e6565b6104ea611315565b60fa600160005054101515610503576105016110db565b505b60fa60016000505410151561051857506105e6565b60016000818150548092919060010191905055508173ffffffffffffffffffffffffffffffffffffffff166002600050600160005054610100811061055957005b9090016000508190555060016000505461010260005060008473ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050819055507f994a936646fe87ffe4f1e469d3d6aa417d6b855598397f323de5b449f765f0c360408373ffffffffffffffffffffffffffffffffffffffff168152602001604090036040a15b505b50565b600060406000368082843782019150506040900360402061060981610e78565b156107165761010260005060008473ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005054915060008214156106505750610718565b600160016000505403600060005054111561066b5750610718565b6000600260005083610100811061067e57005b90900160005081905550600061010260005060008573ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050819055506106c6611315565b6106ce6110db565b507f58619076adf5bb0943d100ef88d52d7c3fd691b19d3a9071b555b651fbf418da60408473ffffffffffffffffffffffffffffffffffffffff168152602001604090036040a15b505b5050565b60406000368082843782019150506040900360402061073a81610e78565b15610795576001600050548211156107525750610797565b81600060005081905550610764611315565b7facbdb084c721332ac59f9b8e392196c9eb0e4932862da8eb9beaf0dad4f550da6040838152602001604090036040a15b505b50565b6000600061010260005060008473ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050541190506107d7565b919050565b6040600036808284378201915050604090036040206107fa81610e78565b1561080b5781610106600050819055505b505b50565b60406000368082843782019150506040900360402061082e81610e78565b15610840576000610105600050819055505b505b565b60406000368082843782019150506040900360402061086281610e78565b15610880578173ffffffffffffffffffffffffffffffffffffffff16ff5b505b50565b600061089084611275565b1561095c577f92ca3a80853e6663fa31fa10b99225f18d4902939b4c53a9caae9043f6efd00460403373ffffffffffffffffffffffffffffffffffffffff1681526020018581526020018673ffffffffffffffffffffffffffffffffffffffff168152602001848490918181526020018282808284378201915050915050604090036040a18473ffffffffffffffffffffffffffffffffffffffff16846000600060008787808284378201915050600084866185025a03f161094e57005b505060006001029050610b67565b6040600036808284378201915050438152602001604090036040209050805061098481610b6f565b1580156109e457506000610108600050600083815260200190815260200160002060005060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b15610b665784610108600050600083815260200190815260200160002060005060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908302179055508361010860005060008381526020019081526020016000206000506001016000508190555082826101086000506000848152602001908152602001600020600050600201600050919082805482825590600052602060002090601f01602090048101928215610abb579182015b82811115610aba578235826000505591602001919060010190610a9c565b5b5090505b80821115610ad95760008181506000905550600101610abf565b5050600050507f1733cbb53659d713b79580f79f3f9ff215f78a7c7aa45890f3b89fc5cddfbf3260408281526020013373ffffffffffffffffffffffffffffffffffffffff1681526020018581526020018673ffffffffffffffffffffffffffffffffffffffff168152602001848490918181526020018282808284378201915050915050604090036040a15b5b949350505050565b600081610b7b81610e78565b15610e71576000610108600050600085815260200190815260200160002060005060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515610e7057610108600050600084815260200190815260200160002060005060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610108600050600085815260200190815260200160002060005060010160005054600060006000610108600050600089815260200190815260200160002060005060020160005080548015610ca257820191906000526020600020905b815481529060010190602001808311610c8e575b5050600084866185025a03f1610cb457005b50507fe7c957c06e9a662c1a6c77366179f5b702b97651dc28eee7d5bf1dff6e40bb4a60403373ffffffffffffffffffffffffffffffffffffffff1681526020018481526020016101086000506000868152602001908152602001600020600050600101600050548152602001610108600050600086815260200190815260200160002060005060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016101086000506000868152602001908152602001600020600050600201600090918254815260200182825080548015610dcf57820191906000526020600020905b815481529060010190602001808311610dbb575b5050915050604090036040a1610108600050600084815260200190815260200160002060006000820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600182016000506000905560028201600050805460008255601f0160209004906000526020600020908101905b80821115610e625760008181506000905550600101610e48565b505050506001915050610e73565b5b505b919050565b6000600060006000600061010260005060003373ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000505493506000841415610ec3576110d2565b61010360005060008781526020019081526020016000206000925092506000838350600001600050541415610f9b576000600050548383506000016000508190555060008383506001016000508190555061010460005080548091906001019090815481835581811511610f5d578183600052602060002091820191015b80821115610f5b5760008181506000905550600101610f41565b505b50505083835060020160005081905550856101046000508484506002016000505481548110610f8857005b9060005260206000209001600050819055505b8360020a9050600081848450600101600050541614156110d1577fe1c52dc63b719ade82e8bea94cc41a0d5d28e4aaf536adb5e9cccc9ff8c1aeda60403373ffffffffffffffffffffffffffffffffffffffff168152602001878152602001604090036040a16001838350600001600050541115156110a0576101046000506101036000506000888152602001908152602001600020600050600201600050548154811061104557005b906000526020600020900160005060009055610103600050600087815260200190815260200160002060006000820160005060009055600182016000506000905560028201600050600090555050600194506110d2566110d0565b82825060000160008181505480929190600190039190505550808383506001016000828282505417925050819055505b5b5b50505050919050565b60006000600190505b600160005054811015611270575b6001600050548110801561111e57506000600260005082610100811061111457005b9090016000505414155b156111305780806001019150506110f2565b5b6001600160005054118015611162575060006002600050600160005054610100811061115957005b90900160005054145b1561118157600160008181505480929190600190039190505550611131565b600160005054811080156111b257506000600260005060016000505461010081106111a857005b9090016000505414155b80156111d55750600060026000508261010081106111cc57005b90900160005054145b1561126b57600260005060016000505461010081106111f057005b90900160005054600260005082610100811061120857005b90900160005081905550806101026000506000600260005084610100811061122c57005b9090016000505481526020019081526020016000206000508190555060006002600050600160005054610100811061126057005b909001600050819055505b6110e4565b5b5090565b60006112803361079a565b1561130f57610107600050546112946114df565b11156112b9576000610105600050819055506112ae6114df565b610107600050819055505b61010560005054826101056000505401101580156112e557506101066000505482610105600050540111155b15611306578161010560008282825054019250508190555060019050611310565b60009050611310565b5b919050565b60006000610104600050549150600090505b818110156113e7576101086000506000610104600050838154811061134857005b906000526020600020900160005054815260200190815260200160002060006000820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600182016000506000905560028201600050805460008255601f0160209004906000526020600020908101905b808211156113d557600081815060009055506001016113bb565b505050505b8060010190508050611327565b6113ef6113f4565b5b5050565b60006000610104600050549150600090505b818110156114a4576000600102610104600050828154811061142457005b906000526020600020900160005054141515611496576101036000506000610104600050838154811061145357005b9060005260206000209001600050548152602001908152602001600020600060008201600050600090556001820160005060009055600282016000506000905550505b5b8060010190508050611406565b610104600050805460008255906000526020600020908101905b808211156114d857600081815060009055506001016114be565b50505b5050565b600062015180420490506114ee565b9056',\n    '0x6000357c010000000000000000000000000000000000000000000000000000000090048063173825d91461011f5780632f54bf6e146101365780634123cb6b146101515780635c52c2f5146101665780637065cb4814610177578063746c91711461018e578063797af627146101a3578063b20d30a9146101be578063b61d27f6146101d5578063b75c7dc614610207578063ba51a6df1461021e578063cbf0b0c014610235578063f00d4b5d1461024c578063f1736d8614610269576101195b6000341115610116577fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c60403373ffffffffffffffffffffffffffffffffffffffff168152602001348152602001604090036040a15b5b565b60006000f35b610130600480359060200150610cb5565b60006000f35b610147600480359060200150610e71565b8060005260206000f35b61015c600450610287565b8060005260206000f35b610171600450610ef7565b60006000f35b610188600480359060200150610b72565b60006000f35b61019960045061027e565b8060005260206000f35b6101b46004803590602001506105cc565b8060005260206000f35b6101cf600480359060200150610ebd565b60006000f35b6101fd60048035906020018035906020018035906020019060040180359060200191506102d7565b8060005260206000f35b6102186004803590602001506108e0565b60006000f35b61022f600480359060200150610ded565b60006000f35b610246600480359060200150610290565b60006000f35b6102636004803590602001803590602001506109e3565b60006000f35b610274600450610eb3565b8060005260206000f35b60006000505481565b60016000505481565b6040600036808284378201915050438152602001604090036040206102b4816110bb565b156102d2578173ffffffffffffffffffffffffffffffffffffffff16ff5b505b50565b60006102e284610f31565b156103ad577f92ca3a80853e6663fa31fa10b99225f18d4902939b4c53a9caae9043f6efd00460403373ffffffffffffffffffffffffffffffffffffffff1681526020018581526020018673ffffffffffffffffffffffffffffffffffffffff168152602001848490918181526020018282808284378201915050915050604090036040a18473ffffffffffffffffffffffffffffffffffffffff16846000600060008787808284378201915050600084866185025a03f115610002575050600060010290506105c4565b604060003680828437820191505043815260200160409003604020905080506103d5816105cc565b15801561043557506000610108600050600083815260200190815260200160002060005060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b156105c35784610108600050600083815260200190815260200160002060005060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908302179055508361010860005060008381526020019081526020016000206000506001016000508190555082826101086000506000848152602001908152602001600020600050600201600050919082805482825590600052602060002090601f0160209004810192821561050c579182015b8281111561050b5782358260005055916020019190600101906104ed565b5b5090506105379190610519565b808211156105335760008181506000905550600101610519565b5090565b50600050507f1733cbb53659d713b79580f79f3f9ff215f78a7c7aa45890f3b89fc5cddfbf3260408281526020013373ffffffffffffffffffffffffffffffffffffffff1681526020018581526020018673ffffffffffffffffffffffffffffffffffffffff168152602001848490918181526020018282808284378201915050915050604090036040a15b5b949350505050565b6000816105d8816110bb565b156108d9576000610108600050600085815260200190815260200160002060005060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156108d857610108600050600084815260200190815260200160002060005060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166101086000506000858152602001908152602001600020600050600101600050546000600060006101086000506000898152602001908152602001600020600050600201600050805480156106ff57820191906000526020600020905b8154815290600101906020018083116106eb575b5050600084866185025a03f1156100025750507fe7c957c06e9a662c1a6c77366179f5b702b97651dc28eee7d5bf1dff6e40bb4a60403373ffffffffffffffffffffffffffffffffffffffff1681526020018481526020016101086000506000868152602001908152602001600020600050600101600050548152602001610108600050600086815260200190815260200160002060005060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001610108600050600086815260200190815260200160002060005060020160009091825481526020018282508054801561082b57820191906000526020600020905b815481529060010190602001808311610817575b5050915050604090036040a1610108600050600084815260200190815260200160002060006000820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600182016000506000905560028201600050805460008255601f0160209004906000526020600020908101906108cb91906108ad565b808211156108c757600081815060009055506001016108ad565b5090565b50505060019150506108db565b5b505b919050565b600060006000600061010260005060003373ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000505493506000841415610929576109dc565b8360020a92506101036000506000868152602001908152602001600020600091509150600083838350600101600050541611156109db57818150600001600081815054809291906001019190505550828282506001016000828282505403925050819055507fc7fb647e59b18047309aa15aad418e5d7ca96d173ad704f1031a2c3d7591734b60403373ffffffffffffffffffffffffffffffffffffffff168152602001868152602001604090036040a15b5b5050505050565b6000604060003680828437820191505043815260200160409003604020610a09816110bb565b15610b6b57610a1783610e71565b15610a225750610b6d565b61010260005060008573ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000505491506000821415610a645750610b6d565b610a6c610fd1565b8273ffffffffffffffffffffffffffffffffffffffff166002600050836101008110156100025790900160005081905550600061010260005060008673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050819055508161010260005060008573ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050819055507fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c60408573ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff168152602001604090036040a15b505b505050565b604060003680828437820191505043815260200160409003604020610b96816110bb565b15610cb057610ba482610e71565b15610baf5750610cb2565b610bb7610fd1565b60fa600160005054101515610bd057610bce611328565b505b60fa600160005054101515610be55750610cb2565b60016000818150548092919060010191905055508173ffffffffffffffffffffffffffffffffffffffff166002600050600160005054610100811015610002579090016000508190555060016000505461010260005060008473ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050819055507f994a936646fe87ffe4f1e469d3d6aa417d6b855598397f323de5b449f765f0c360408373ffffffffffffffffffffffffffffffffffffffff168152602001604090036040a15b505b50565b6000604060003680828437820191505043815260200160409003604020610cdb816110bb565b15610de75761010260005060008473ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000505491506000821415610d225750610de9565b6001600160005054036000600050541115610d3d5750610de9565b60006002600050836101008110156100025790900160005081905550600061010260005060008573ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005081905550610d97610fd1565b610d9f611328565b507f58619076adf5bb0943d100ef88d52d7c3fd691b19d3a9071b555b651fbf418da60408473ffffffffffffffffffffffffffffffffffffffff168152602001604090036040a15b505b5050565b604060003680828437820191505043815260200160409003604020610e11816110bb565b15610e6c57600160005054821115610e295750610e6e565b81600060005081905550610e3b610fd1565b7facbdb084c721332ac59f9b8e392196c9eb0e4932862da8eb9beaf0dad4f550da6040838152602001604090036040a15b505b50565b6000600061010260005060008473ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005054119050610eae565b919050565b6101066000505481565b604060003680828437820191505043815260200160409003604020610ee1816110bb565b15610ef25781610106600050819055505b505b50565b604060003680828437820191505043815260200160409003604020610f1b816110bb565b15610f2d576000610105600050819055505b505b565b6000610f3c33610e71565b15610fcb5761010760005054610f506114ba565b1115610f7557600061010560005081905550610f6a6114ba565b610107600050819055505b6101056000505482610105600050540110158015610fa157506101066000505482610105600050540111155b15610fc2578161010560008282825054019250508190555060019050610fcc565b60009050610fcc565b5b919050565b60006000610104600050549150600090505b818110156110ae57610108600050600061010460005083815481101561000257906000526020600020900160005054815260200190815260200160002060006000820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600182016000506000905560028201600050805460008255601f01602090049060005260206000209081019061109d919061107f565b80821115611099576000818150600090555060010161107f565b5090565b5050505b8060010190508050610fe3565b6110b66114cc565b5b5050565b6000600060006000600061010260005060003373ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005054935060008414156111065761131f565b610103600050600087815260200190815260200160002060009250925060008383506000016000505414156111e95760006000505483835060000160005081905550600083835060010160005081905550610104600050805480919060010190908154818355818115116111ac578183600052602060002091820191016111ab919061118d565b808211156111a7576000818150600090555060010161118d565b5090565b5b5050508383506002016000508190555085610104600050848450600201600050548154811015610002579060005260206000209001600050819055505b8360020a90506000818484506001016000505416141561131e577fe1c52dc63b719ade82e8bea94cc41a0d5d28e4aaf536adb5e9cccc9ff8c1aeda60403373ffffffffffffffffffffffffffffffffffffffff168152602001878152602001604090036040a16001838350600001600050541115156112ed576101046000506101036000506000888152602001908152602001600020600050600201600050548154811015610002579060005260206000209001600050600090556101036000506000878152602001908152602001600020600060008201600050600090556001820160005060009055600282016000506000905550506001945061131f5661131d565b82825060000160008181505480929190600190039190505550808383506001016000828282505417925050819055505b5b5b50505050919050565b60006000600190505b6001600050548110156114b5575b6001600050548110801561136a57506000600260005082610100811015610002579090016000505414155b1561137c57808060010191505061133f565b5b60016001600050541180156113ad5750600060026000506001600050546101008110156100025790900160005054145b156113cc5760016000818150548092919060019003919050555061137d565b600160005054811080156113fc575060006002600050600160005054610100811015610002579090016000505414155b801561141e575060006002600050826101008110156100025790900160005054145b156114b05760026000506001600050546101008110156100025790900160005054600260005082610100811015610002579090016000508190555080610102600050600060026000508461010081101561000257909001600050548152602001908152602001600020600050819055506000600260005060016000505461010081101561000257909001600050819055505b611331565b5b5090565b600062015180420490506114c9565b90565b60006000610104600050549150600090505b8181101561157a5760006001026101046000508281548110156100025790600052602060002090016000505414151561156c576101036000506000610104600050838154811015610002579060005260206000209001600050548152602001908152602001600020600060008201600050600090556001820160005060009055600282016000506000905550505b5b80600101905080506114de565b610104600050805460008255906000526020600020908101906115bb919061159d565b808211156115b7576000818150600090555060010161159d565b5090565b505b505056',\n    '0x6000357c010000000000000000000000000000000000000000000000000000000090048063173825d91461011f5780632f54bf6e146101365780634123cb6b146101515780635c52c2f5146101665780637065cb4814610177578063746c91711461018e578063797af627146101a3578063b20d30a9146101be578063b61d27f6146101d5578063b75c7dc614610207578063ba51a6df1461021e578063cbf0b0c014610235578063f00d4b5d1461024c578063f1736d8614610269576101195b6000341115610116577fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c60403373ffffffffffffffffffffffffffffffffffffffff168152602001348152602001604090036040a15b5b565b60006000f35b610130600480359060200150610665565b60006000f35b610147600480359060200150610821565b8060005260206000f35b61015c600450610287565b8060005260206000f35b6101716004506108a7565b60006000f35b610188600480359060200150610522565b60006000f35b61019960045061027e565b8060005260206000f35b6101b4600480359060200150610c1d565b8060005260206000f35b6101cf60048035906020015061086d565b60006000f35b6101fd6004803590602001803590602001803590602001906004018035906020019150610928565b8060005260206000f35b610218600480359060200150610290565b60006000f35b61022f60048035906020015061079d565b60006000f35b6102466004803590602001506108e1565b60006000f35b610263600480359060200180359060200150610393565b60006000f35b610274600450610863565b8060005260206000f35b60006000505481565b60016000505481565b600060006000600061010260005060003373ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005054935060008414156102d95761038c565b8360020a925061010360005060008681526020019081526020016000206000915091506000838383506001016000505416111561038b57818150600001600081815054809291906001019190505550828282506001016000828282505403925050819055507fc7fb647e59b18047309aa15aad418e5d7ca96d173ad704f1031a2c3d7591734b60403373ffffffffffffffffffffffffffffffffffffffff168152602001868152602001604090036040a15b5b5050505050565b60006040600036808284378201915050438152602001604090036040206103b981610f31565b1561051b576103c783610821565b156103d2575061051d565b61010260005060008573ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000505491506000821415610414575061051d565b61041c6113d0565b8273ffffffffffffffffffffffffffffffffffffffff166002600050836101008110156100025790900160005081905550600061010260005060008673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050819055508161010260005060008573ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050819055507fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c60408573ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff168152602001604090036040a15b505b505050565b60406000368082843782019150504381526020016040900360402061054681610f31565b156106605761055482610821565b1561055f5750610662565b6105676113d0565b60fa6001600050541015156105805761057e61119e565b505b60fa6001600050541015156105955750610662565b60016000818150548092919060010191905055508173ffffffffffffffffffffffffffffffffffffffff166002600050600160005054610100811015610002579090016000508190555060016000505461010260005060008473ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050819055507f994a936646fe87ffe4f1e469d3d6aa417d6b855598397f323de5b449f765f0c360408373ffffffffffffffffffffffffffffffffffffffff168152602001604090036040a15b505b50565b600060406000368082843782019150504381526020016040900360402061068b81610f31565b156107975761010260005060008473ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005054915060008214156106d25750610799565b60016001600050540360006000505411156106ed5750610799565b60006002600050836101008110156100025790900160005081905550600061010260005060008573ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050819055506107476113d0565b61074f61119e565b507f58619076adf5bb0943d100ef88d52d7c3fd691b19d3a9071b555b651fbf418da60408473ffffffffffffffffffffffffffffffffffffffff168152602001604090036040a15b505b5050565b6040600036808284378201915050438152602001604090036040206107c181610f31565b1561081c576001600050548211156107d9575061081e565b816000600050819055506107eb6113d0565b7facbdb084c721332ac59f9b8e392196c9eb0e4932862da8eb9beaf0dad4f550da6040838152602001604090036040a15b505b50565b6000600061010260005060008473ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000505411905061085e565b919050565b6101066000505481565b60406000368082843782019150504381526020016040900360402061089181610f31565b156108a25781610106600050819055505b505b50565b6040600036808284378201915050438152602001604090036040206108cb81610f31565b156108dd576000610105600050819055505b505b565b60406000368082843782019150504381526020016040900360402061090581610f31565b15610923578173ffffffffffffffffffffffffffffffffffffffff16ff5b505b50565b600061093384611330565b156109fe577f92ca3a80853e6663fa31fa10b99225f18d4902939b4c53a9caae9043f6efd00460403373ffffffffffffffffffffffffffffffffffffffff1681526020018581526020018673ffffffffffffffffffffffffffffffffffffffff168152602001848490918181526020018282808284378201915050915050604090036040a18473ffffffffffffffffffffffffffffffffffffffff16846000600060008787808284378201915050600084866185025a03f11561000257505060006001029050610c15565b60406000368082843782019150504381526020016040900360402090508050610a2681610c1d565b158015610a8657506000610108600050600083815260200190815260200160002060005060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b15610c145784610108600050600083815260200190815260200160002060005060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908302179055508361010860005060008381526020019081526020016000206000506001016000508190555082826101086000506000848152602001908152602001600020600050600201600050919082805482825590600052602060002090601f01602090048101928215610b5d579182015b82811115610b5c578235826000505591602001919060010190610b3e565b5b509050610b889190610b6a565b80821115610b845760008181506000905550600101610b6a565b5090565b50600050507f1733cbb53659d713b79580f79f3f9ff215f78a7c7aa45890f3b89fc5cddfbf3260408281526020013373ffffffffffffffffffffffffffffffffffffffff1681526020018581526020018673ffffffffffffffffffffffffffffffffffffffff168152602001848490918181526020018282808284378201915050915050604090036040a15b5b949350505050565b600081610c2981610f31565b15610f2a576000610108600050600085815260200190815260200160002060005060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515610f2957610108600050600084815260200190815260200160002060005060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610108600050600085815260200190815260200160002060005060010160005054600060006000610108600050600089815260200190815260200160002060005060020160005080548015610d5057820191906000526020600020905b815481529060010190602001808311610d3c575b5050600084866185025a03f1156100025750507fe7c957c06e9a662c1a6c77366179f5b702b97651dc28eee7d5bf1dff6e40bb4a60403373ffffffffffffffffffffffffffffffffffffffff1681526020018481526020016101086000506000868152602001908152602001600020600050600101600050548152602001610108600050600086815260200190815260200160002060005060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016101086000506000868152602001908152602001600020600050600201600090918254815260200182825080548015610e7c57820191906000526020600020905b815481529060010190602001808311610e68575b5050915050604090036040a1610108600050600084815260200190815260200160002060006000820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600182016000506000905560028201600050805460008255601f016020900490600052602060002090810190610f1c9190610efe565b80821115610f185760008181506000905550600101610efe565b5090565b5050506001915050610f2c565b5b505b919050565b6000600060006000600061010260005060003373ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000505493506000841415610f7c57611195565b6101036000506000878152602001908152602001600020600092509250600083835060000160005054141561105f576000600050548383506000016000508190555060008383506001016000508190555061010460005080548091906001019090815481835581811511611022578183600052602060002091820191016110219190611003565b8082111561101d5760008181506000905550600101611003565b5090565b5b5050508383506002016000508190555085610104600050848450600201600050548154811015610002579060005260206000209001600050819055505b8360020a905060008184845060010160005054161415611194577fe1c52dc63b719ade82e8bea94cc41a0d5d28e4aaf536adb5e9cccc9ff8c1aeda60403373ffffffffffffffffffffffffffffffffffffffff168152602001878152602001604090036040a1600183835060000160005054111515611163576101046000506101036000506000888152602001908152602001600020600050600201600050548154811015610002579060005260206000209001600050600090556101036000506000878152602001908152602001600020600060008201600050600090556001820160005060009055600282016000506000905550506001945061119556611193565b82825060000160008181505480929190600190039190505550808383506001016000828282505417925050819055505b5b5b50505050919050565b60006000600190505b60016000505481101561132b575b600160005054811080156111e057506000600260005082610100811015610002579090016000505414155b156111f25780806001019150506111b5565b5b60016001600050541180156112235750600060026000506001600050546101008110156100025790900160005054145b15611242576001600081815054809291906001900391905055506111f3565b60016000505481108015611272575060006002600050600160005054610100811015610002579090016000505414155b8015611294575060006002600050826101008110156100025790900160005054145b156113265760026000506001600050546101008110156100025790900160005054600260005082610100811015610002579090016000508190555080610102600050600060026000508461010081101561000257909001600050548152602001908152602001600020600050819055506000600260005060016000505461010081101561000257909001600050819055505b6111a7565b5b5090565b600061133b33610821565b156113ca576101076000505461134f6115af565b1115611374576000610105600050819055506113696115af565b610107600050819055505b61010560005054826101056000505401101580156113a057506101066000505482610105600050540111155b156113c15781610105600082828250540192505081905550600190506113cb565b600090506113cb565b5b919050565b60006000610104600050549150600090505b818110156114ad57610108600050600061010460005083815481101561000257906000526020600020900160005054815260200190815260200160002060006000820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600182016000506000905560028201600050805460008255601f01602090049060005260206000209081019061149c919061147e565b80821115611498576000818150600090555060010161147e565b5090565b5050505b80600101905080506113e2565b6114b56114ba565b5b5050565b60006000610104600050549150600090505b818110156115685760006001026101046000508281548110156100025790600052602060002090016000505414151561155a576101036000506000610104600050838154811015610002579060005260206000209001600050548152602001908152602001600020600060008201600050600090556001820160005060009055600282016000506000905550505b5b80600101905080506114cc565b610104600050805460008255906000526020600020908101906115a9919061158b565b808211156115a5576000818150600090555060010161158b565b5090565b505b5050565b600062015180420490506115be565b9056',\n    '0x6000357c010000000000000000000000000000000000000000000000000000000090048063173825d91461012a5780632f54bf6e146101415780634123cb6b1461015c5780635c52c2f5146101715780637065cb4814610182578063746c917114610199578063797af627146101ae578063b20d30a9146101c9578063b61d27f6146101e0578063b75c7dc614610212578063ba51a6df14610229578063c2cf732614610240578063cbf0b0c014610261578063f00d4b5d14610278578063f1736d8614610295576101245b6000341115610121577fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c60403373ffffffffffffffffffffffffffffffffffffffff168152602001348152602001604090036040a15b5b565b60006000f35b61013b60048035906020015061058e565b60006000f35b61015260048035906020015061074a565b8060005260206000f35b6101676004506102b3565b8060005260206000f35b61017c600450610877565b60006000f35b61019360048035906020015061044b565b60006000f35b6101a46004506102aa565b8060005260206000f35b6101bf600480359060200150610bed565b8060005260206000f35b6101da60048035906020015061083d565b60006000f35b61020860048035906020018035906020018035906020019060040180359060200191506108f8565b8060005260206000f35b610223600480359060200150610f01565b60006000f35b61023a6004803590602001506106c6565b60006000f35b61025760048035906020018035906020015061078c565b8060005260206000f35b6102726004803590602001506108b1565b60006000f35b61028f6004803590602001803590602001506102bc565b60006000f35b6102a0600450610833565b8060005260206000f35b60006000505481565b60016000505481565b60006040600036808284378201915050438152602001604090036040206102e281611320565b15610444576102f08361074a565b156102fb5750610446565b61010260005060008573ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050549150600082141561033d5750610446565b610345611236565b8273ffffffffffffffffffffffffffffffffffffffff166002600050836101008110156100025790900160005081905550600061010260005060008673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050819055508161010260005060008573ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050819055507fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c60408573ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff168152602001604090036040a15b505b505050565b60406000368082843782019150504381526020016040900360402061046f81611320565b156105895761047d8261074a565b15610488575061058b565b610490611236565b60fa6001600050541015156104a9576104a7611004565b505b60fa6001600050541015156104be575061058b565b60016000818150548092919060010191905055508173ffffffffffffffffffffffffffffffffffffffff166002600050600160005054610100811015610002579090016000508190555060016000505461010260005060008473ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050819055507f994a936646fe87ffe4f1e469d3d6aa417d6b855598397f323de5b449f765f0c360408373ffffffffffffffffffffffffffffffffffffffff168152602001604090036040a15b505b50565b60006040600036808284378201915050438152602001604090036040206105b481611320565b156106c05761010260005060008473ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005054915060008214156105fb57506106c2565b600160016000505403600060005054111561061657506106c2565b60006002600050836101008110156100025790900160005081905550600061010260005060008573ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005081905550610670611236565b610678611004565b507f58619076adf5bb0943d100ef88d52d7c3fd691b19d3a9071b555b651fbf418da60408473ffffffffffffffffffffffffffffffffffffffff168152602001604090036040a15b505b5050565b6040600036808284378201915050438152602001604090036040206106ea81611320565b15610745576001600050548211156107025750610747565b81600060005081905550610714611236565b7facbdb084c721332ac59f9b8e392196c9eb0e4932862da8eb9beaf0dad4f550da6040838152602001604090036040a15b505b50565b6000600061010260005060008473ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005054119050610787565b919050565b60006000600060006000610103600050600088815260200190815260200160002060009350935061010260005060008773ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005054915060008214156107f85760009450610829565b8160020a90506000818585506001016000505416141561081f576000945061082956610828565b60019450610829565b5b5050505092915050565b6101066000505481565b60406000368082843782019150504381526020016040900360402061086181611320565b156108725781610106600050819055505b505b50565b60406000368082843782019150504381526020016040900360402061089b81611320565b156108ad576000610105600050819055505b505b565b6040600036808284378201915050438152602001604090036040206108d581611320565b156108f3578173ffffffffffffffffffffffffffffffffffffffff16ff5b505b50565b600061090384611196565b156109ce577f92ca3a80853e6663fa31fa10b99225f18d4902939b4c53a9caae9043f6efd00460403373ffffffffffffffffffffffffffffffffffffffff1681526020018581526020018673ffffffffffffffffffffffffffffffffffffffff168152602001848490918181526020018282808284378201915050915050604090036040a18473ffffffffffffffffffffffffffffffffffffffff16846000600060008787808284378201915050600084866185025a03f11561000257505060006001029050610be5565b604060003680828437820191505043815260200160409003604020905080506109f681610bed565b158015610a5657506000610108600050600083815260200190815260200160002060005060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b15610be45784610108600050600083815260200190815260200160002060005060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908302179055508361010860005060008381526020019081526020016000206000506001016000508190555082826101086000506000848152602001908152602001600020600050600201600050919082805482825590600052602060002090601f01602090048101928215610b2d579182015b82811115610b2c578235826000505591602001919060010190610b0e565b5b509050610b589190610b3a565b80821115610b545760008181506000905550600101610b3a565b5090565b50600050507f1733cbb53659d713b79580f79f3f9ff215f78a7c7aa45890f3b89fc5cddfbf3260408281526020013373ffffffffffffffffffffffffffffffffffffffff1681526020018581526020018673ffffffffffffffffffffffffffffffffffffffff168152602001848490918181526020018282808284378201915050915050604090036040a15b5b949350505050565b600081610bf981611320565b15610efa576000610108600050600085815260200190815260200160002060005060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515610ef957610108600050600084815260200190815260200160002060005060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610108600050600085815260200190815260200160002060005060010160005054600060006000610108600050600089815260200190815260200160002060005060020160005080548015610d2057820191906000526020600020905b815481529060010190602001808311610d0c575b5050600084866185025a03f1156100025750507fe7c957c06e9a662c1a6c77366179f5b702b97651dc28eee7d5bf1dff6e40bb4a60403373ffffffffffffffffffffffffffffffffffffffff1681526020018481526020016101086000506000868152602001908152602001600020600050600101600050548152602001610108600050600086815260200190815260200160002060005060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016101086000506000868152602001908152602001600020600050600201600090918254815260200182825080548015610e4c57820191906000526020600020905b815481529060010190602001808311610e38575b5050915050604090036040a1610108600050600084815260200190815260200160002060006000820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600182016000506000905560028201600050805460008255601f016020900490600052602060002090810190610eec9190610ece565b80821115610ee85760008181506000905550600101610ece565b5090565b5050506001915050610efc565b5b505b919050565b600060006000600061010260005060003373ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000505493506000841415610f4a57610ffd565b8360020a9250610103600050600086815260200190815260200160002060009150915060008383835060010160005054161115610ffc57818150600001600081815054809291906001019190505550828282506001016000828282505403925050819055507fc7fb647e59b18047309aa15aad418e5d7ca96d173ad704f1031a2c3d7591734b60403373ffffffffffffffffffffffffffffffffffffffff168152602001868152602001604090036040a15b5b5050505050565b60006000600190505b600160005054811015611191575b6001600050548110801561104657506000600260005082610100811015610002579090016000505414155b1561105857808060010191505061101b565b5b60016001600050541180156110895750600060026000506001600050546101008110156100025790900160005054145b156110a857600160008181505480929190600190039190505550611059565b600160005054811080156110d8575060006002600050600160005054610100811015610002579090016000505414155b80156110fa575060006002600050826101008110156100025790900160005054145b1561118c5760026000506001600050546101008110156100025790900160005054600260005082610100811015610002579090016000508190555080610102600050600060026000508461010081101561000257909001600050548152602001908152602001600020600050819055506000600260005060016000505461010081101561000257909001600050819055505b61100d565b5b5090565b60006111a13361074a565b1561123057610107600050546111b5611682565b11156111da576000610105600050819055506111cf611682565b610107600050819055505b610105600050548261010560005054011015801561120657506101066000505482610105600050540111155b15611227578161010560008282825054019250508190555060019050611231565b60009050611231565b5b919050565b60006000610104600050549150600090505b8181101561131357610108600050600061010460005083815481101561000257906000526020600020900160005054815260200190815260200160002060006000820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600182016000506000905560028201600050805460008255601f01602090049060005260206000209081019061130291906112e4565b808211156112fe57600081815060009055506001016112e4565b5090565b5050505b8060010190508050611248565b61131b61158d565b5b5050565b6000600060006000600061010260005060003373ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050549350600084141561136b57611584565b6101036000506000878152602001908152602001600020600092509250600083835060000160005054141561144e5760006000505483835060000160005081905550600083835060010160005081905550610104600050805480919060010190908154818355818115116114115781836000526020600020918201910161141091906113f2565b8082111561140c57600081815060009055506001016113f2565b5090565b5b5050508383506002016000508190555085610104600050848450600201600050548154811015610002579060005260206000209001600050819055505b8360020a905060008184845060010160005054161415611583577fe1c52dc63b719ade82e8bea94cc41a0d5d28e4aaf536adb5e9cccc9ff8c1aeda60403373ffffffffffffffffffffffffffffffffffffffff168152602001878152602001604090036040a1600183835060000160005054111515611552576101046000506101036000506000888152602001908152602001600020600050600201600050548154811015610002579060005260206000209001600050600090556101036000506000878152602001908152602001600020600060008201600050600090556001820160005060009055600282016000506000905550506001945061158456611582565b82825060000160008181505480929190600190039190505550808383506001016000828282505417925050819055505b5b5b50505050919050565b60006000610104600050549150600090505b8181101561163b5760006001026101046000508281548110156100025790600052602060002090016000505414151561162d576101036000506000610104600050838154811015610002579060005260206000209001600050548152602001908152602001600020600060008201600050600090556001820160005060009055600282016000506000905550505b5b806001019050805061159f565b6101046000508054600082559060005260206000209081019061167c919061165e565b80821115611678576000818150600090555060010161165e565b5090565b505b5050565b60006201518042049050611691565b9056',\n    '0x606060405236156100d7576000357c010000000000000000000000000000000000000000000000000000000090048063173825d91461013f5780632f54bf6e146101525780634123cb6b146101795780635c52c2f51461019a5780637065cb48146101a7578063746c9171146101ba578063797af627146101db578063b20d30a914610202578063b61d27f614610215578063b75c7dc614610253578063ba51a6df14610266578063c2cf732614610279578063cbf0b0c0146102a6578063f00d4b5d146102b9578063f1736d86146102d2576100d7565b61013d5b600034111561013a577fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c3334604051808373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a15b5b565b005b6101506004803590602001506106ed565b005b6101636004803590602001506108cd565b6040518082815260200191505060405180910390f35b6101846004506109b9565b6040518082815260200191505060405180910390f35b6101a5600450610a07565b005b6101b8600480359060200150610598565b005b6101c56004506109b0565b6040518082815260200191505060405180910390f35b6101ec600480359060200150610de9565b6040518082815260200191505060405180910390f35b6102136004803590602001506109c2565b005b61023d6004803590602001803590602001803590602001906004018035906020019150610aa8565b6040518082815260200191505060405180910390f35b6102646004803590602001506102f3565b005b610277600480359060200150610837565b005b61029060048035906020018035906020015061090f565b6040518082815260200191505060405180910390f35b6102b7600480359060200150610a56565b005b6102d06004803590602001803590602001506103f5565b005b6102dd600450610a4c565b6040518082815260200191505060405180910390f35b60006000600061010260005060003373ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050549250600083141561033a576103ef565b8260020a91506101036000506000858152602001908152602001600020600050905060008282600101600050541611156103ee578060000160008181505480929190600101919050555081816001016000828282505403925050819055507fc7fb647e59b18047309aa15aad418e5d7ca96d173ad704f1031a2c3d7591734b3385604051808373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a15b5b50505050565b600060003643604051808484808284378201915050828152602001935050505060405180910390206104268161112b565b1561059157610434836108cd565b1561043f5750610593565b61010260005060008573ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005054915060008214156104815750610593565b6104896115bd565b8273ffffffffffffffffffffffffffffffffffffffff166002600050836101008110156100025790900160005081905550600061010260005060008673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050819055508161010260005060008573ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050819055507fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c8484604051808373ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a15b505b505050565b60003643604051808484808284378201915050828152602001935050505060405180910390206105c78161112b565b156106e8576105d5826108cd565b156105e057506106ea565b6105e86115bd565b60fa600160005054101515610601576105ff61138b565b505b60fa60016000505410151561061657506106ea565b60016000818150548092919060010191905055508173ffffffffffffffffffffffffffffffffffffffff166002600050600160005054610100811015610002579090016000508190555060016000505461010260005060008473ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050819055507f994a936646fe87ffe4f1e469d3d6aa417d6b855598397f323de5b449f765f0c382604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a15b505b50565b6000600036436040518084848082843782019150508281526020019350505050604051809103902061071e8161112b565b156108315761010260005060008473ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005054915060008214156107655750610833565b60016001600050540360006000505411156107805750610833565b60006002600050836101008110156100025790900160005081905550600061010260005060008573ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050819055506107da6115bd565b6107e261138b565b507f58619076adf5bb0943d100ef88d52d7c3fd691b19d3a9071b555b651fbf418da83604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a15b505b5050565b60003643604051808484808284378201915050828152602001935050505060405180910390206108668161112b565b156108c85760016000505482111561087e57506108ca565b816000600050819055506108906115bd565b7facbdb084c721332ac59f9b8e392196c9eb0e4932862da8eb9beaf0dad4f550da826040518082815260200191505060405180910390a15b505b50565b6000600061010260005060008473ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000505411905061090a565b919050565b60006000600060006101036000506000878152602001908152602001600020600050925061010260005060008673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050549150600082141561097857600093506109a7565b8160020a9050600081846001016000505416141561099d57600093506109a7566109a6565b600193506109a7565b5b50505092915050565b60006000505481565b60016000505481565b60003643604051808484808284378201915050828152602001935050505060405180910390206109f18161112b565b15610a025781610105600050819055505b505b50565b6000364360405180848480828437820191505082815260200193505050506040518091039020610a368161112b565b15610a48576000610106600050819055505b505b565b6101056000505481565b6000364360405180848480828437820191505082815260200193505050506040518091039020610a858161112b565b15610aa3578173ffffffffffffffffffffffffffffffffffffffff16ff5b505b50565b6000610ab3336108cd565b15610de057610ac18461151d565b15610baa577f92ca3a80853e6663fa31fa10b99225f18d4902939b4c53a9caae9043f6efd0043385878686604051808673ffffffffffffffffffffffffffffffffffffffff1681526020018581526020018473ffffffffffffffffffffffffffffffffffffffff1681526020018060200182810382528484828181526020019250808284378201915050965050505050505060405180910390a18473ffffffffffffffffffffffffffffffffffffffff168484846040518083838082843782019150509250505060006040518083038185876185025a03f1925050505060006001029050610de1565b600036436040518084848082843782019150508281526020019350505050604051809103902090508050610bdd81610de9565b158015610c3d57506000610108600050600083815260200190815260200160002060005060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b15610ddf5784610108600050600083815260200190815260200160002060005060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908302179055508361010860005060008381526020019081526020016000206000506001016000508190555082826101086000506000848152602001908152602001600020600050600201600050919082805482825590600052602060002090601f01602090048101928215610d14579182015b82811115610d13578235826000505591602001919060010190610cf5565b5b509050610d3f9190610d21565b80821115610d3b5760008181506000905550600101610d21565b5090565b50507f1733cbb53659d713b79580f79f3f9ff215f78a7c7aa45890f3b89fc5cddfbf32813386888787604051808781526020018673ffffffffffffffffffffffffffffffffffffffff1681526020018581526020018473ffffffffffffffffffffffffffffffffffffffff168152602001806020018281038252848482818152602001925080828437820191505097505050505050505060405180910390a15b5b5b949350505050565b600081610df58161112b565b15611124576000610108600050600085815260200190815260200160002060005060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561112357610108600050600084815260200190815260200160002060005060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166101086000506000858152602001908152602001600020600050600101600050546101086000506000868152602001908152602001600020600050600201600050604051808280548015610f2457820191906000526020600020905b815481529060010190602001808311610f0757829003601f168201915b505091505060006040518083038185876185025a03f192505050507fe7c957c06e9a662c1a6c77366179f5b702b97651dc28eee7d5bf1dff6e40bb4a3384610108600050600087815260200190815260200160002060005060010160005054610108600050600088815260200190815260200160002060005060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166101086000506000898152602001908152602001600020600050600201600050604051808673ffffffffffffffffffffffffffffffffffffffff1681526020018581526020018481526020018373ffffffffffffffffffffffffffffffffffffffff16815260200180602001828103825283818154815260200191508054801561107057820191906000526020600020905b81548152906001019060200180831161105357829003601f168201915b5050965050505050505060405180910390a1610108600050600084815260200190815260200160002060006000820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600182016000506000905560028201600050805460008255601f01602090049060005260206000209081019061111691906110f8565b8082111561111257600081815060009055506001016110f8565b5090565b5050506001915050611126565b5b505b919050565b600060006000600061010260005060003373ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050549250600083141561117457611383565b6101036000506000868152602001908152602001600020600050915060008260000160005054141561124c57600060005054826000016000508190555060008260010160005081905550610104600050805480919060010190908154818355818115116112135781836000526020600020918201910161121291906111f4565b8082111561120e57600081815060009055506001016111f4565b5090565b5b50505082600201600050819055508461010460005083600201600050548154811015610002579060005260206000209001600050819055505b8260020a90506000818360010160005054161415611382577fe1c52dc63b719ade82e8bea94cc41a0d5d28e4aaf536adb5e9cccc9ff8c1aeda3386604051808373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a160018260000160005054111515611355576101046000506101036000506000878152602001908152602001600020600050600201600050548154811015610002579060005260206000209001600050600090556101036000506000868152602001908152602001600020600060008201600050600090556001820160005060009055600282016000506000905550506001935061138356611381565b816000016000818150548092919060019003919050555080826001016000828282505417925050819055505b5b5b505050919050565b60006000600190505b600160005054811015611518575b600160005054811080156113cd57506000600260005082610100811015610002579090016000505414155b156113df5780806001019150506113a2565b5b60016001600050541180156114105750600060026000506001600050546101008110156100025790900160005054145b1561142f576001600081815054809291906001900391905055506113e0565b6001600050548110801561145f575060006002600050600160005054610100811015610002579090016000505414155b8015611481575060006002600050826101008110156100025790900160005054145b156115135760026000506001600050546101008110156100025790900160005054600260005082610100811015610002579090016000508190555080610102600050600060026000508461010081101561000257909001600050548152602001908152602001600020600050819055506000600260005060016000505461010081101561000257909001600050819055505b611394565b5b5090565b6000611528336108cd565b156115b7576101076000505461153c61179c565b11156115615760006101066000508190555061155661179c565b610107600050819055505b610106600050548261010660005054011015801561158d57506101056000505482610106600050540111155b156115ae5781610106600082828250540192505081905550600190506115b8565b600090506115b8565b5b919050565b60006000610104600050549150600090505b8181101561169a57610108600050600061010460005083815481101561000257906000526020600020900160005054815260200190815260200160002060006000820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600182016000506000905560028201600050805460008255601f016020900490600052602060002090810190611689919061166b565b80821115611685576000818150600090555060010161166b565b5090565b5050505b80600101905080506115cf565b6116a26116a7565b5b5050565b60006000610104600050549150600090505b8181101561175557600060010261010460005082815481101561000257906000526020600020900160005054141515611747576101036000506000610104600050838154811015610002579060005260206000209001600050548152602001908152602001600020600060008201600050600090556001820160005060009055600282016000506000905550505b5b80600101905080506116b9565b610104600050805460008255906000526020600020908101906117969190611778565b808211156117925760008181506000905550600101611778565b5090565b505b5050565b600062015180420490506117ab565b9056',\n    '0x606060405236156100b95760e060020a6000350463173825d9811461010b5780632f54bf6e146101665780634123cb6b1461018e5780635c52c2f5146101975780637065cb48146101c8578063746c9171146101fc578063797af62714610205578063b20d30a914610218578063b61d27f61461024c578063b75c7dc61461026d578063ba51a6df1461029c578063c2cf7326146102d0578063cbf0b0c01461030e578063f00d4b5d14610342578063f1736d861461037b575b61038560003411156101095760408051600160a060020a033216815234602082015281517fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c929181900390910190a15b565b6103856004356000600036436040518084848082843750505090910190815260405190819003602001902090506105e9815b600160a060020a03321660009081526101026020526040812054818082811415610c0357610d5b565b6103876004355b600160a060020a03811660009081526101026020526040812054115b919050565b61038760015481565b610385600036436040518084848082843750505090910190815260405190819003602001902090506103aa8161013d565b610385600435600036436040518084848082843750505090910190815260405190819003602001902090506103c98161013d565b61038760005481565b6103876004355b6000816109738161013d565b610385600435600036436040518084848082843750505090910190815260405190819003602001902090506103998161013d565b61038760048035906024803591604435918201910135600061072f3261016d565b610385600435600160a060020a03321660009081526101026020526040812054908082811415610564576105e3565b610385600435600036436040518084848082843750505090910190815260405190819003602001902090506106a98161013d565b610387600435602435600082815261010360209081526040808320600160a060020a0385168452610102909252822054828181141561070257610726565b610385600435600036436040518084848082843750505090910190815260405190819003602001902090506103b88161013d565b610385600435602435600060003643604051808484808284375050509091019081526040519081900360200190209050610b358161013d565b6103876101055481565b005b60408051918252519081900360200190f35b156103a5576101058290555b505b50565b156103a75760006101065550565b156103a55781600160a060020a0316ff5b156103a5576103d78261016d565b156103e257506103a7565b6104605b6101045460005b81811015610ea857610104805461010891600091849081101561000257600080516020610f6383398151915201548252506020918252604081208054600160a060020a0319168155600181018290556002810180548382559083528383209193610f2d92601f929092010481019061095b565b60015460fa90106104755761047361048a565b505b60015460fa90106104c757506103a7565b6106175b600060015b60015481101561096f575b600154811080156104ba5750600281610100811015610002570154600014155b15610d635760010161049a565b60018054810190819055600160a060020a038316906002906101008110156100025790900160005081905550600160005054610102600050600084600160a060020a03168152602001908152602001600020600050819055507f994a936646fe87ffe4f1e469d3d6aa417d6b855598397f323de5b449f765f0c3826040518082600160a060020a0316815260200191505060405180910390a15050565b50506000828152610103602052604081206001810154600284900a9290831611156105e35780546001828101805492909101835590839003905560408051600160a060020a03321681526020810186905281517fc7fb647e59b18047309aa15aad418e5d7ca96d173ad704f1031a2c3d7591734b929181900390910190a15b50505050565b1561065557600160a060020a03831660009081526101026020526040812054925082141561065a57506103a5565b5060408051600160a060020a038516815290517f58619076adf5bb0943d100ef88d52d7c3fd691b19d3a9071b555b651fbf418da9181900360200190a15b505050565b600160016000505403600060005054111561067557506103a5565b600060028361010081101561000257508301819055600160a060020a038416815261010260205260408120556104866103e6565b156103a5576001548211156106be57506103a7565b60008290556106cb6103e6565b6040805183815290517facbdb084c721332ac59f9b8e392196c9eb0e4932862da8eb9beaf0dad4f550da9181900360200190a15050565b506001820154600282900a908116600014156107215760009350610726565b600193505b50505092915050565b1561094b57610743846000610e3d3261016d565b156107ff577f92ca3a80853e6663fa31fa10b99225f18d4902939b4c53a9caae9043f6efd00432858786866040518086600160a060020a0316815260200185815260200184600160a060020a031681526020018060200182810382528484828181526020019250808284378201915050965050505050505060405180910390a184600160a060020a03168484846040518083838082843750505090810191506000908083038185876185025a03f1506000935061094b92505050565b6000364360405180848480828437505050909101908152604051908190036020019020915061082f90508161020c565b158015610852575060008181526101086020526040812054600160a060020a0316145b1561094b5760008181526101086020908152604082208054600160a060020a03191688178155600181018790556002018054858255818452928290209092601f01919091048101908490868215610953579182015b828111156109535782358260005055916020019190600101906108a7565b50507f1733cbb53659d713b79580f79f3f9ff215f78a7c7aa45890f3b89fc5cddfbf328132868887876040518087815260200186600160a060020a0316815260200185815260200184600160a060020a03168152602001806020018281038252848482818152602001925080828437820191505097505050505050505060405180910390a15b949350505050565b506108c59291505b8082111561096f576000815560010161095b565b5090565b15610b225760008381526101086020526040812054600160a060020a031614610b225760408051600091909120805460018201546002929092018054600160a060020a03929092169390918190839080156109f357820191906000526020600020905b8154815290600101906020018083116109d657829003601f168201915b505091505060006040518083038185876185025a03f150505060008481526101086020908152604080519281902080546001820154600160a060020a033281811688529587018b905293860181905292166060850181905260a06080860181815260029390930180549187018290527fe7c957c06e9a662c1a6c77366179f5b702b97651dc28eee7d5bf1dff6e40bb4a975094958a959293909160c083019084908015610ac557820191906000526020600020905b815481529060010190602001808311610aa857829003601f168201915b5050965050505050505060405180910390a160008381526101086020908152604082208054600160a060020a031916815560018101839055600281018054848255908452828420919392610b2892601f929092010481019061095b565b50919050565b5050506001915050610189565b156105e357610b438361016d565b15610b4e5750610655565b600160a060020a038416600090815261010260205260408120549250821415610b775750610655565b610b7f6103e6565b600160a060020a03831660028361010081101561000257508301819055600160a060020a03851660008181526101026020908152604080832083905584835291829020869055815192835282019290925281517fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c929181900390910190a150505050565b60008581526101036020526040812080549093501415610c8b576000805483556001838101919091556101048054918201808255828015829011610c5a57818360005260206000209182019101610c5a919061095b565b50505060028301819055610104805487929081101561000257600091909152600080516020610f6383398151915201555b506001810154600283900a90811660001415610d5b5760408051600160a060020a03321681526020810187905281517fe1c52dc63b719ade82e8bea94cc41a0d5d28e4aaf536adb5e9cccc9ff8c1aeda929181900390910190a1815460019011610d48576000858152610103602052604090206002015461010480549091908110156100025760406000908120600080516020610f638339815191529290920181905580825560018083018290556002909201559450610d5b9050565b8154600019018255600182018054821790555b505050919050565b5b60018054118015610d8657506001546002906101008110156100025701546000145b15610d9a5760018054600019019055610d64565b60015481108015610dbd5750600154600290610100811015610002570154600014155b8015610dd757506002816101008110156100025701546000145b15610e3857600154600290610100811015610002578101549082610100811015610002578101919091558190610102906000908361010081101561000257810154825260209290925260408120929092556001546101008110156100025701555b61048f565b156101895761010754610e535b62015180420490565b1115610e6c57600061010655610e67610e4a565b610107555b6101065480830110801590610e8a5750610106546101055490830111155b15610ea057506101068054820190556001610189565b506000610189565b6103a56101045460005b81811015610f385761010480548290811015610002576000918252600080516020610f63833981519152015414610f2557610104805461010391600091849081101561000257600080516020610f6383398151915201548252506020919091526040812081815560018101829055600201555b600101610eb2565b5050506001016103ed565b610104805460008083559190915261065590600080516020610f638339815191529081019061095b56004c0be60200faa20559308cb7b5a1bb3255c16cb1cab91f525b5ae7a03d02fabe',\n    '0x606060405236156100c45760e060020a6000350463173825d981146101165780632f54bf6e146101715780634123cb6b1461019957806354fd4d50146101a25780635c52c2f5146101af5780637065cb48146101e0578063746c917114610214578063797af6271461021d578063b20d30a914610230578063b61d27f614610264578063b75c7dc614610285578063ba51a6df146102b4578063c2cf7326146102e8578063cbf0b0c014610326578063f00d4b5d1461035a578063f1736d8614610393575b61039d60003411156101145760408051600160a060020a033216815234602082015281517fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c929181900390910190a15b565b61039d6004356000600036436040518084848082843750505090910190815260405190819003602001902090506106b8815b600160a060020a03321660009081526101026020526040812054818082811415610c2e57610d86565b61039f6004355b600160a060020a03811660009081526101026020526040812054115b919050565b61039f60015481565b6103b16101085460ff1681565b61039d6000364360405180848480828437505050909101908152604051908190036020019020905061080981610148565b61039d6004356000364360405180848480828437505050909101908152604051908190036020019020905061063081610148565b61039f60005481565b61039f6004355b600081610a6c81610148565b61039d600435600036436040518084848082843750505090910190815260405190819003602001902090506107fd81610148565b61039f60048035906024803591604435918201910135600061082832610178565b61039d600435600160a060020a033216600090815261010260205260408120549080828114156103c757610446565b61039d6004356000364360405180848480828437505050909101908152604051908190036020019020905061077781610148565b61039f600435602435600082815261010360209081526040808320600160a060020a038516845261010290925282205482818114156107d0576107f4565b61039d6004356000364360405180848480828437505050909101908152604051908190036020019020905061081781610148565b61039d6004356024356000600036436040518084848082843750505090910190815260405190819003602001902090506104d181610148565b61039f6101055481565b005b60408051918252519081900360200190f35b6040805160ff9092168252519081900360200190f35b50506000828152610103602052604081206001810154600284900a9290831611156104465780546001828101805492909101835590839003905560408051600160a060020a03321681526020810186905281517fc7fb647e59b18047309aa15aad418e5d7ca96d173ad704f1031a2c3d7591734b929181900390910190a15b50505050565b600160a060020a03831660028361010081101561000257508301819055600160a060020a03851660008181526101026020908152604080832083905584835291829020869055815192835282019290925281517fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c929181900390910190a1505b505050565b15610446576104df83610178565b156104ea57506104cc565b600160a060020a03841660009081526101026020526040812054925082141561051357506104cc565b61044c5b6101045460005b81811015610ed357610104805461010991600091849081101561000257600080516020610f8e83398151915201548252506020918252604081208054600160a060020a0319168155600181018290556002810180548382559083528383209193610f5892601f9290920104810190610a54565b60018054810190819055600160a060020a038316906002906101008110156100025790900160005081905550600160005054610102600050600084600160a060020a03168152602001908152602001600020600050819055507f994a936646fe87ffe4f1e469d3d6aa417d6b855598397f323de5b449f765f0c3826040518082600160a060020a0316815260200191505060405180910390a15b505b50565b1561062b5761063e82610178565b15610649575061062d565b610651610517565b60015460fa90106106665761066461067b565b505b60015460fa9010610591575061062d565b6107355b600060015b600154811015610a68575b600154811080156106ab5750600281610100811015610002570154600014155b15610d8e5760010161068b565b156104cc57600160a060020a0383166000908152610102602052604081205492508214156106e6575061062b565b6001600160005054036000600050541115610701575061062b565b600060028361010081101561000257508301819055600160a060020a03841681526101026020526040812055610677610517565b5060408051600160a060020a038516815290517f58619076adf5bb0943d100ef88d52d7c3fd691b19d3a9071b555b651fbf418da9181900360200190a1505050565b1561062b5760015482111561078c575061062d565b6000829055610799610517565b6040805183815290517facbdb084c721332ac59f9b8e392196c9eb0e4932862da8eb9beaf0dad4f550da9181900360200190a15050565b506001820154600282900a908116600014156107ef57600093506107f4565b600193505b50505092915050565b1561062b575061010555565b1561062d5760006101065550565b1561062b5781600160a060020a0316ff5b15610a445761083c846000610e6832610178565b156108f8577f92ca3a80853e6663fa31fa10b99225f18d4902939b4c53a9caae9043f6efd00432858786866040518086600160a060020a0316815260200185815260200184600160a060020a031681526020018060200182810382528484828181526020019250808284378201915050965050505050505060405180910390a184600160a060020a03168484846040518083838082843750505090810191506000908083038185876185025a03f15060009350610a4492505050565b60003643604051808484808284375050509091019081526040519081900360200190209150610928905081610224565b15801561094b575060008181526101096020526040812054600160a060020a0316145b15610a445760008181526101096020908152604082208054600160a060020a03191688178155600181018790556002018054858255818452928290209092601f01919091048101908490868215610a4c579182015b82811115610a4c5782358260005055916020019190600101906109a0565b50507f1733cbb53659d713b79580f79f3f9ff215f78a7c7aa45890f3b89fc5cddfbf328132868887876040518087815260200186600160a060020a0316815260200185815260200184600160a060020a03168152602001806020018281038252848482818152602001925080828437820191505097505050505050505060405180910390a15b949350505050565b506109be9291505b80821115610a685760008155600101610a54565b5090565b15610c1b5760008381526101096020526040812054600160a060020a031614610c1b5760408051600091909120805460018201546002929092018054600160a060020a0392909216939091819083908015610aec57820191906000526020600020905b815481529060010190602001808311610acf57829003601f168201915b505091505060006040518083038185876185025a03f150505060008481526101096020908152604080519281902080546001820154600160a060020a033281811688529587018b905293860181905292166060850181905260a06080860181815260029390930180549187018290527fe7c957c06e9a662c1a6c77366179f5b702b97651dc28eee7d5bf1dff6e40bb4a975094958a959293909160c083019084908015610bbe57820191906000526020600020905b815481529060010190602001808311610ba157829003601f168201915b5050965050505050505060405180910390a160008381526101096020908152604082208054600160a060020a031916815560018101839055600281018054848255908452828420919392610c2192601f9290920104810190610a54565b50919050565b5050506001915050610194565b60008581526101036020526040812080549093501415610cb6576000805483556001838101919091556101048054918201808255828015829011610c8557818360005260206000209182019101610c859190610a54565b50505060028301819055610104805487929081101561000257600091909152600080516020610f8e83398151915201555b506001810154600283900a90811660001415610d865760408051600160a060020a03321681526020810187905281517fe1c52dc63b719ade82e8bea94cc41a0d5d28e4aaf536adb5e9cccc9ff8c1aeda929181900390910190a1815460019011610d73576000858152610103602052604090206002015461010480549091908110156100025760406000908120600080516020610f8e8339815191529290920181905580825560018083018290556002909201559450610d869050565b8154600019018255600182018054821790555b505050919050565b5b60018054118015610db157506001546002906101008110156100025701546000145b15610dc55760018054600019019055610d8f565b60015481108015610de85750600154600290610100811015610002570154600014155b8015610e0257506002816101008110156100025701546000145b15610e6357600154600290610100811015610002578101549082610100811015610002578101919091558190610102906000908361010081101561000257810154825260209290925260408120929092556001546101008110156100025701555b610680565b156101945761010754610e7e5b62015180420490565b1115610e9757600061010655610e92610e75565b610107555b6101065480830110801590610eb55750610106546101055490830111155b15610ecb57506101068054820190556001610194565b506000610194565b61062b6101045460005b81811015610f635761010480548290811015610002576000918252600080516020610f8e833981519152015414610f5057610104805461010391600091849081101561000257600080516020610f8e83398151915201548252506020919091526040812081815560018101829055600201555b600101610edd565b50505060010161051e565b61010480546000808355919091526104cc90600080516020610f8e83398151915290810190610a5456004c0be60200faa20559308cb7b5a1bb3255c16cb1cab91f525b5ae7a03d02fabe',\n    '0x606060405236156100da5760e060020a6000350463173825d9811461012c5780632f54bf6e146101875780634123cb6b146101af57806352375093146101b857806354fd4d50146101c25780635c52c2f5146101cc578063659010e7146101fd5780637065cb4814610207578063746c91711461023b578063797af62714610244578063b20d30a914610257578063b61d27f61461028b578063b75c7dc6146102ac578063ba51a6df146102db578063c2cf73261461030f578063cbf0b0c01461034d578063f00d4b5d14610381578063f1736d86146103ba575b6103c4600034111561012a5760408051600160a060020a033216815234602082015281517fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c929181900390910190a15b565b6103c46004356000600036436040518084848082843750505090910190815260405190819003602001902090506106c9815b600160a060020a03321660009081526101026020526040812054818082811415610c3f57610d97565b6103c66004355b600160a060020a03811660009081526101026020526040812054115b919050565b6103c660015481565b6103c66101075481565b6103c66101085481565b6103c46000364360405180848480828437505050909101908152604051908190036020019020905061081a8161015e565b6103c66101065481565b6103c4600435600036436040518084848082843750505090910190815260405190819003602001902090506106418161015e565b6103c660005481565b6103c66004355b600081610a7d8161015e565b6103c46004356000364360405180848480828437505050909101908152604051908190036020019020905061080e8161015e565b6103c66004803590602480359160443591820191013560006108393261018e565b6103c4600435600160a060020a033216600090815261010260205260408120549080828114156103d857610457565b6103c4600435600036436040518084848082843750505090910190815260405190819003602001902090506107888161015e565b6103c6600435602435600082815261010360209081526040808320600160a060020a038516845261010290925282205482818114156107e157610805565b6103c4600435600036436040518084848082843750505090910190815260405190819003602001902090506108288161015e565b6103c46004356024356000600036436040518084848082843750505090910190815260405190819003602001902090506104e28161015e565b6103c66101055481565b005b60408051918252519081900360200190f35b50506000828152610103602052604081206001810154600284900a9290831611156104575780546001828101805492909101835590839003905560408051600160a060020a03321681526020810186905281517fc7fb647e59b18047309aa15aad418e5d7ca96d173ad704f1031a2c3d7591734b929181900390910190a15b50505050565b600160a060020a03831660028361010081101561000257508301819055600160a060020a03851660008181526101026020908152604080832083905584835291829020869055815192835282019290925281517fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c929181900390910190a1505b505050565b15610457576104f08361018e565b156104fb57506104dd565b600160a060020a03841660009081526101026020526040812054925082141561052457506104dd565b61045d5b6101045460005b81811015610ee457610104805461010991600091849081101561000257600080516020610f9f83398151915201548252506020918252604081208054600160a060020a0319168155600181018290556002810180548382559083528383209193610f6992601f9290920104810190610a65565b60018054810190819055600160a060020a038316906002906101008110156100025790900160005081905550600160005054610102600050600084600160a060020a03168152602001908152602001600020600050819055507f994a936646fe87ffe4f1e469d3d6aa417d6b855598397f323de5b449f765f0c3826040518082600160a060020a0316815260200191505060405180910390a15b505b50565b1561063c5761064f8261018e565b1561065a575061063e565b610662610528565b60015460fa90106106775761067561068c565b505b60015460fa90106105a2575061063e565b6107465b600060015b600154811015610a79575b600154811080156106bc5750600281610100811015610002570154600014155b15610d9f5760010161069c565b156104dd57600160a060020a0383166000908152610102602052604081205492508214156106f7575061063c565b6001600160005054036000600050541115610712575061063c565b600060028361010081101561000257508301819055600160a060020a03841681526101026020526040812055610688610528565b5060408051600160a060020a038516815290517f58619076adf5bb0943d100ef88d52d7c3fd691b19d3a9071b555b651fbf418da9181900360200190a1505050565b1561063c5760015482111561079d575061063e565b60008290556107aa610528565b6040805183815290517facbdb084c721332ac59f9b8e392196c9eb0e4932862da8eb9beaf0dad4f550da9181900360200190a15050565b506001820154600282900a908116600014156108005760009350610805565b600193505b50505092915050565b1561063c575061010555565b1561063e5760006101065550565b1561063c5781600160a060020a0316ff5b15610a555761084d846000610e793261018e565b15610909577f92ca3a80853e6663fa31fa10b99225f18d4902939b4c53a9caae9043f6efd00432858786866040518086600160a060020a0316815260200185815260200184600160a060020a031681526020018060200182810382528484828181526020019250808284378201915050965050505050505060405180910390a184600160a060020a03168484846040518083838082843750505090810191506000908083038185876185025a03f15060009350610a5592505050565b6000364360405180848480828437505050909101908152604051908190036020019020915061093990508161024b565b15801561095c575060008181526101096020526040812054600160a060020a0316145b15610a555760008181526101096020908152604082208054600160a060020a03191688178155600181018790556002018054858255818452928290209092601f01919091048101908490868215610a5d579182015b82811115610a5d5782358260005055916020019190600101906109b1565b50507f1733cbb53659d713b79580f79f3f9ff215f78a7c7aa45890f3b89fc5cddfbf328132868887876040518087815260200186600160a060020a0316815260200185815260200184600160a060020a03168152602001806020018281038252848482818152602001925080828437820191505097505050505050505060405180910390a15b949350505050565b506109cf9291505b80821115610a795760008155600101610a65565b5090565b15610c2c5760008381526101096020526040812054600160a060020a031614610c2c5760408051600091909120805460018201546002929092018054600160a060020a0392909216939091819083908015610afd57820191906000526020600020905b815481529060010190602001808311610ae057829003601f168201915b505091505060006040518083038185876185025a03f150505060008481526101096020908152604080519281902080546001820154600160a060020a033281811688529587018b905293860181905292166060850181905260a06080860181815260029390930180549187018290527fe7c957c06e9a662c1a6c77366179f5b702b97651dc28eee7d5bf1dff6e40bb4a975094958a959293909160c083019084908015610bcf57820191906000526020600020905b815481529060010190602001808311610bb257829003601f168201915b5050965050505050505060405180910390a160008381526101096020908152604082208054600160a060020a031916815560018101839055600281018054848255908452828420919392610c3292601f9290920104810190610a65565b50919050565b50505060019150506101aa565b60008581526101036020526040812080549093501415610cc7576000805483556001838101919091556101048054918201808255828015829011610c9657818360005260206000209182019101610c969190610a65565b50505060028301819055610104805487929081101561000257600091909152600080516020610f9f83398151915201555b506001810154600283900a90811660001415610d975760408051600160a060020a03321681526020810187905281517fe1c52dc63b719ade82e8bea94cc41a0d5d28e4aaf536adb5e9cccc9ff8c1aeda929181900390910190a1815460019011610d84576000858152610103602052604090206002015461010480549091908110156100025760406000908120600080516020610f9f8339815191529290920181905580825560018083018290556002909201559450610d979050565b8154600019018255600182018054821790555b505050919050565b5b60018054118015610dc257506001546002906101008110156100025701546000145b15610dd65760018054600019019055610da0565b60015481108015610df95750600154600290610100811015610002570154600014155b8015610e1357506002816101008110156100025701546000145b15610e7457600154600290610100811015610002578101549082610100811015610002578101919091558190610102906000908361010081101561000257810154825260209290925260408120929092556001546101008110156100025701555b610691565b156101aa5761010754610e8f5b62015180420490565b1115610ea857600061010655610ea3610e86565b610107555b6101065480830110801590610ec65750610106546101055490830111155b15610edc575061010680548201905560016101aa565b5060006101aa565b61063c6101045460005b81811015610f745761010480548290811015610002576000918252600080516020610f9f833981519152015414610f6157610104805461010391600091849081101561000257600080516020610f9f83398151915201548252506020919091526040812081815560018101829055600201555b600101610eee565b50505060010161052f565b61010480546000808355919091526104dd90600080516020610f9f83398151915290810190610a6556004c0be60200faa20559308cb7b5a1bb3255c16cb1cab91f525b5ae7a03d02fabe',\n  ],\n  stub: [\n    '0x60606040523615600d57600d565b606a5b7328aa4f0b12d6b0601e45836a14caa9ab1ad28b8173ffffffffffffffffffffffffffffffffffffffff16600036604051808383808284378201915050925050506000604051808303816000866161da5a03f2915050505b565b00',\n    '0x3660008037602060003660008073bfa69ba91385206bfdd2d8b9c1a5d6c10097a85b60325a03f260206000f3',\n    '0x3660008037602060003660003473d658a4b8247c14868f3c512fa5cbb6e458e4a98961235a5a03f260206000f3',\n    '0x3660008037602060003660003473a8b566789c430c906d0eb6b2916e550a9c493d8a61235a5a03f260206000f3',\n  ],\n  stubDynamic: [\n    '0x3660008037602060003660003473cafecafecafecafecafecafecafecafecafecafe61235a5a03f260206000f3',\n    '0x3660008037602060003660003473cafecafecafecafecafecafecafecafecafecafe61235a5a03f21560015760206000f3',\n  ],\n};\n\nexport const NavFields = {\n  Wallet: {\n    type: 'link',\n    // href: '/',\n    href: '/accounts',\n    liClass: 'wallet-nav-li',\n    icon: 'icon-wallet',\n    displayText: 'Wallets',\n  },\n  Send: {\n    type: 'link',\n    href: '/send-from',\n    liClass: 'send-nav-li',\n    icon: 'icon-arrow-up',\n    displayText: 'Send',\n  },\n  PeerInfo: {\n    type: 'peerInfo',\n    liClass: 'block-info dapp-flex-item',\n    firstIcon: 'icon-feed',\n    firstText: 'peers',\n    firstClass: '',\n    secondIcon: 'icon-layers',\n    secondText: 'since last block',\n    secondClass: 'hide-on-small',\n    thirdIcon: 'icon-clock',\n  },\n  Contracts: {\n    type: 'link',\n    href: '/contracts',\n    liClass: 'contracts-nav-li',\n    icon: 'icon-docs',\n    displayText: 'Contracts',\n  },\n  BalanceInfo: {\n    type: 'balanceInfo',\n    liClass: 'balance-nav-li wallet-balance',\n    firstText: 'Balance',\n    firstClass: 'account-balance',\n    secondText: 'ETHER',\n  },\n};\n\nexport const DefaultNavFields = [\n  {\n    type: 'link',\n    // href: '/',\n    href: '/accounts',\n    liClass: 'wallet-nav-li',\n    icon: 'icon-wallet',\n    displayText: 'Wallets',\n  },\n  {\n    type: 'link',\n    href: '/send-from',\n    liClass: 'send-nav-li',\n    icon: 'icon-arrow-up',\n    displayText: 'Send',\n  },\n  {\n    type: 'peerInfo',\n    liClass: 'block-info dapp-flex-item',\n    firstIcon: 'icon-feed',\n    firstText: 'peers',\n    firstClass: '',\n    secondIcon: 'icon-layers',\n    secondText: 'since last block',\n    secondClass: 'hide-on-small',\n  },\n  {\n    type: 'link',\n    href: '/contracts',\n    liClass: 'contracts-nav-li',\n    icon: 'icon-docs',\n    displayText: 'Contracts',\n  },\n  {\n    type: 'balanceInfo',\n    liClass: 'balance-nav-li wallet-balance',\n    firstText: 'Balance',\n    firstClass: 'account-balance',\n    secondText: 'ETHER',\n  },\n];\n\nexport const AccountPageHeader = [\n  { text: 'Accounts', strong: true },\n  { text: ' ', strong: false },\n  { text: 'Overiew', strong: false },\n];\n\nexport const ContractPageHeader = [{ text: 'Contracts', strong: true }];\n\nexport const SendPageHeader = [\n  { text: 'Send', strong: true },\n  { text: ' ', strong: false },\n  { text: 'funds', strong: false },\n];\n\nexport const DefaultAccountList = [\n  {\n    title: 'Accounts',\n    redirect: false,\n    buttonClass: 'wallet-box create add-account',\n    buttonDescription: 'ADD ACCOUNT',\n    contractDescription:\n      \"Accounts are password protected keys that can hold Ether and Ethereum-based tokens. They can control contracts, but can't display incoming transactions.\",\n  },\n  {\n    title: 'Wallet Contracts',\n    redirect: true,\n    link: 'account/new',\n    buttonClass: 'wallet-box create',\n    buttonDescription: 'ADD WALLET CONTRACt',\n    contractDescription:\n      'These contracts are stored on the blockchain and can hold and secure Ether. They can have multiple accounts as owners and keep a full log of all transactions.',\n  },\n];\n\nexport const ContractSectionList = {\n  DeployContract: {\n    title: '',\n    redirect: true,\n    link: 'deploy-contract',\n    buttonClass: 'wallet-box create add-contract',\n    buttonDescription: 'DEPLOY NEW CONTRACT',\n    contractDescription: '',\n  },\n  CustomContracts: {\n    title: 'Custom Contracts',\n    redirect: false,\n    link: 'deploy-contract',\n    buttonClass: 'wallet-box create add-contract',\n    buttonDescription: 'WATCH CONTRACT',\n    contractDescription:\n      'To watch and interact with a contract already deployed on the blockchain, you need to know its address and the description of its interface in JSON format.',\n  },\n  CustomTokens: {\n    title: 'Custom Tokens',\n    redirect: false,\n    link: 'deploy-contract',\n    buttonClass: 'wallet-box create add-token',\n    buttonDescription: 'WATCH CUSTOM TOKEN',\n    contractDescription:\n      'Tokens are currencies and other fungibles built on the Ethereum platform. In order for accounts to watch for tokens and send them, you have to add their address to this list. You can create your own token by simply modifying this example of a custom token contract or learning more about Ethereum Tokens.',\n  },\n};\nexport const DefaultContractList = [\n  {\n    title: '',\n    redirect: true,\n    link: 'deploy-contract',\n    buttonClass: 'wallet-box create add-contract',\n    buttonDescription: 'DEPLOY NEW CONTRACT',\n    contractDescription: '',\n  },\n  {\n    title: 'Custom Contracts',\n    redirect: false,\n    link: 'deploy-contract',\n    buttonClass: 'wallet-box create add-contract',\n    buttonDescription: 'WATCH CONTRACT',\n    contractDescription:\n      'To watch and interact with a contract already deployed on the blockchain, you need to know its address and the description of its interface in JSON format.',\n  },\n  {\n    title: 'Custom Tokens',\n    redirect: false,\n    link: 'deploy-contract',\n    buttonClass: 'wallet-box create add-token',\n    buttonDescription: 'WATCH CUSTOM TOKEN',\n    contractDescription:\n      'Tokens are currencies and other fungibles built on the Ethereum platform. In order for accounts to watch for tokens and send them, you have to add their address to this list. You can create your own token by simply modifying this example of a custom token contract or learning more about Ethereum Tokens.',\n  },\n];\n","export const ReplicateBinanceToken = {\n  jsonInterface: [\n    {\n      constant: true,\n      inputs: [],\n      name: 'name',\n      outputs: [{ name: '', type: 'string' }],\n      payable: false,\n      type: 'function',\n    },\n    {\n      constant: false,\n      inputs: [\n        { name: '_spender', type: 'address' },\n        { name: '_value', type: 'uint256' },\n      ],\n      name: 'approve',\n      outputs: [{ name: 'success', type: 'bool' }],\n      payable: false,\n      type: 'function',\n    },\n    {\n      constant: true,\n      inputs: [],\n      name: 'totalSupply',\n      outputs: [{ name: '', type: 'uint256' }],\n      payable: false,\n      type: 'function',\n    },\n    {\n      constant: false,\n      inputs: [\n        { name: '_from', type: 'address' },\n        { name: '_to', type: 'address' },\n        { name: '_value', type: 'uint256' },\n      ],\n      name: 'transferFrom',\n      outputs: [{ name: 'success', type: 'bool' }],\n      payable: false,\n      type: 'function',\n    },\n    {\n      constant: true,\n      inputs: [],\n      name: 'decimals',\n      outputs: [{ name: '', type: 'uint8' }],\n      payable: false,\n      type: 'function',\n    },\n    {\n      constant: false,\n      inputs: [{ name: 'amount', type: 'uint256' }],\n      name: 'withdrawEther',\n      outputs: [],\n      payable: false,\n      type: 'function',\n    },\n    {\n      constant: false,\n      inputs: [{ name: '_value', type: 'uint256' }],\n      name: 'burn',\n      outputs: [{ name: 'success', type: 'bool' }],\n      payable: false,\n      type: 'function',\n    },\n    {\n      constant: false,\n      inputs: [{ name: '_value', type: 'uint256' }],\n      name: 'unfreeze',\n      outputs: [{ name: 'success', type: 'bool' }],\n      payable: false,\n      type: 'function',\n    },\n    {\n      constant: true,\n      inputs: [{ name: '', type: 'address' }],\n      name: 'balanceOf',\n      outputs: [{ name: '', type: 'uint256' }],\n      payable: false,\n      type: 'function',\n    },\n    {\n      constant: true,\n      inputs: [],\n      name: 'owner',\n      outputs: [{ name: '', type: 'address' }],\n      payable: false,\n      type: 'function',\n    },\n    {\n      constant: true,\n      inputs: [],\n      name: 'symbol',\n      outputs: [{ name: '', type: 'string' }],\n      payable: false,\n      type: 'function',\n    },\n    {\n      constant: false,\n      inputs: [\n        { name: '_to', type: 'address' },\n        { name: '_value', type: 'uint256' },\n      ],\n      name: 'transfer',\n      outputs: [],\n      payable: false,\n      type: 'function',\n    },\n    {\n      constant: true,\n      inputs: [{ name: '', type: 'address' }],\n      name: 'freezeOf',\n      outputs: [{ name: '', type: 'uint256' }],\n      payable: false,\n      type: 'function',\n    },\n    {\n      constant: false,\n      inputs: [{ name: '_value', type: 'uint256' }],\n      name: 'freeze',\n      outputs: [{ name: 'success', type: 'bool' }],\n      payable: false,\n      type: 'function',\n    },\n    {\n      constant: true,\n      inputs: [{ name: '', type: 'address' }, { name: '', type: 'address' }],\n      name: 'allowance',\n      outputs: [{ name: '', type: 'uint256' }],\n      payable: false,\n      type: 'function',\n    },\n    {\n      inputs: [\n        { name: 'initialSupply', type: 'uint256' },\n        { name: 'tokenName', type: 'string' },\n        { name: 'decimalUnits', type: 'uint8' },\n        { name: 'tokenSymbol', type: 'string' },\n      ],\n      payable: false,\n      type: 'constructor',\n    },\n    { payable: true, type: 'fallback' },\n    {\n      anonymous: false,\n      inputs: [\n        { indexed: true, name: 'from', type: 'address' },\n        { indexed: true, name: 'to', type: 'address' },\n        { indexed: false, name: 'value', type: 'uint256' },\n      ],\n      name: 'Transfer',\n      type: 'event',\n    },\n    {\n      anonymous: false,\n      inputs: [\n        { indexed: true, name: 'from', type: 'address' },\n        { indexed: false, name: 'value', type: 'uint256' },\n      ],\n      name: 'Burn',\n      type: 'event',\n    },\n    {\n      anonymous: false,\n      inputs: [\n        { indexed: true, name: 'from', type: 'address' },\n        { indexed: false, name: 'value', type: 'uint256' },\n      ],\n      name: 'Freeze',\n      type: 'event',\n    },\n    {\n      anonymous: false,\n      inputs: [\n        { indexed: true, name: 'from', type: 'address' },\n        { indexed: false, name: 'value', type: 'uint256' },\n      ],\n      name: 'Unfreeze',\n      type: 'event',\n    },\n  ],\n  ABI:\n    '0x606060405234156200001057600080fd5b604051620016d8380380620016d8833981016040528080519060200190919080518201919060200180519060200190919080518201919050505b83600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550836003819055508260009080519060200190620000ad9291906200012e565b508060019080519060200190620000c69291906200012e565b5081600260006101000a81548160ff021916908360ff16021790555033600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50505050620001dd565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200017157805160ff1916838001178555620001a2565b82800160010185558215620001a2579182015b82811115620001a157825182559160200191906001019062000184565b5b509050620001b19190620001b5565b5090565b620001da91905b80821115620001d6576000816000905550600101620001bc565b5090565b90565b6114eb80620001ed6000396000f300606060405236156100d9576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde03146100e2578063095ea7b31461017157806318160ddd146101cb57806323b872dd146101f4578063313ce5671461026d5780633bed33ce1461029c57806342966c68146102bf5780636623fc46146102fa57806370a08231146103355780638da5cb5b1461038257806395d89b41146103d7578063a9059cbb14610466578063cd4217c1146104a8578063d7a78db8146104f5578063dd62ed3e14610530575b6100e05b5b565b005b34156100ed57600080fd5b6100f561059c565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101365780820151818401525b60208101905061011a565b50505050905090810190601f1680156101635780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561017c57600080fd5b6101b1600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190505061063a565b604051808215151515815260200191505060405180910390f35b34156101d657600080fd5b6101de6106d6565b6040518082815260200191505060405180910390f35b34156101ff57600080fd5b610253600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff169060200190919080359060200190919050506106dc565b604051808215151515815260200191505060405180910390f35b341561027857600080fd5b610280610b01565b604051808260ff1660ff16815260200191505060405180910390f35b34156102a757600080fd5b6102bd6004808035906020019091905050610b14565b005b34156102ca57600080fd5b6102e06004808035906020019091905050610bd6565b604051808215151515815260200191505060405180910390f35b341561030557600080fd5b61031b6004808035906020019091905050610d29565b604051808215151515815260200191505060405180910390f35b341561034057600080fd5b61036c600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610ef6565b6040518082815260200191505060405180910390f35b341561038d57600080fd5b610395610f0e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156103e257600080fd5b6103ea610f34565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561042b5780820151818401525b60208101905061040f565b50505050905090810190601f1680156104585780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561047157600080fd5b6104a6600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610fd2565b005b34156104b357600080fd5b6104df600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611260565b6040518082815260200191505060405180910390f35b341561050057600080fd5b6105166004808035906020019091905050611278565b604051808215151515815260200191505060405180910390f35b341561053b57600080fd5b610586600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611445565b6040518082815260200191505060405180910390f35b60008054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106325780601f1061060757610100808354040283529160200191610632565b820191906000526020600020905b81548152906001019060200180831161061557829003601f168201915b505050505081565b6000808211151561064a57600080fd5b81600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600190505b92915050565b60035481565b6000808373ffffffffffffffffffffffffffffffffffffffff16141561070157600080fd5b60008211151561071057600080fd5b81600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101561075c57600080fd5b600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020540110156107e957600080fd5b600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482111561087257600080fd5b6108bb600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548361146a565b600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610947600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205483611484565b600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610a10600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548361146a565b600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a3600190505b9392505050565b600260009054906101000a900460ff1681565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610b7057600080fd5b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501515610bd257600080fd5b5b50565b600081600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610c2457600080fd5b600082111515610c3357600080fd5b610c7c600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548361146a565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610ccb6003548361146a565b6003819055503373ffffffffffffffffffffffffffffffffffffffff167fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5836040518082815260200191505060405180910390a2600190505b919050565b600081600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610d7757600080fd5b600082111515610d8657600080fd5b610dcf600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548361146a565b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610e5b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205483611484565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff167f2cfce4af01bcb9d6cf6c84ee1b7c491100b8695368264146a94d71e10a63083f836040518082815260200191505060405180910390a2600190505b919050565b60056020528060005260406000206000915090505481565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610fca5780601f10610f9f57610100808354040283529160200191610fca565b820191906000526020600020905b815481529060010190602001808311610fad57829003601f168201915b505050505081565b60008273ffffffffffffffffffffffffffffffffffffffff161415610ff657600080fd5b60008111151561100557600080fd5b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101561105157600080fd5b600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205481600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020540110156110de57600080fd5b611127600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548261146a565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506111b3600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205482611484565b600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35b5050565b60066020528060005260406000206000915090505481565b600081600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156112c657600080fd5b6000821115156112d557600080fd5b61131e600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548361146a565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506113aa600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205483611484565b600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff167ff97a274face0b5517365ad396b1fdba6f68bd3135ef603e44272adba3af5a1e0836040518082815260200191505060405180910390a2600190505b919050565b6007602052816000526040600020602052806000526040600020600091509150505481565b6000611478838311156114af565b81830390505b92915050565b60008082840190506114a484821015801561149f5750838210155b6114af565b8091505b5092915050565b8015156114bb57600080fd5b5b505600a165627a7a72305820082734e053ffbdf2a3195354a3210dff3723c239a1e76ae3be0936f6aed31bee0029000000000000000000000000000000000000000000a56fa5b99019a5c80000000000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000001200000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000003424e4200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003424e420000000000000000000000000000000000000000000000000000000000',\n};\n\nexport default ReplicateBinanceToken;\n","import React, { Component } from 'react';\nimport isEqual from 'lodash/isEqual';\nimport { connect } from 'react-redux';\nimport compose from 'recompose/compose';\nimport { withStyles } from '@material-ui/core/styles';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport TokenBox from './elements/TokenBox';\nimport { ContractSectionList } from '../constants/FieldConstants';\nimport { ReplicateBinanceToken } from '../constants/DevConstants';\nimport WalletDropdown from './elements/WalletDropdown';\nimport ButtonDescription from './ButtonDescription';\nimport * as Actions from '../actions/actions';\nimport * as Utils from '../utils/utils';\nimport { combineWallets, sortByBalance } from '../utils/helperFunctions';\n\nconst styles = theme => ({\n  fab: {\n    margin: theme.spacing.unit,\n  },\n  extendedIcon: {\n    marginRight: theme.spacing.unit,\n  },\n});\n\nconst buttonTitle = 'Deploy Token';\nconst buttonDescription = 'This feature is for testing in development';\n\nexport class DeployToken extends Component {\n  constructor(props) {\n    super(props);\n    const { Wallets, WalletContracts } = this.props;\n    const combinedWallets = combineWallets(Wallets, WalletContracts);\n    this.state = {\n      deployingAddress: combinedWallets[0].address,\n      disabledWallet: '',\n    };\n    this.deployBinanceToken = this.deployBinanceToken.bind(this);\n    this.returnDeployTokenAddress = this.returnDeployTokenAddress.bind(this);\n  }\n\n  shouldComponentUpdate() {\n    return false;\n  }\n\n  componentDidMount() {\n    this.setState({ disabledWallet: false });\n  }\n\n  deployBinanceToken() {\n    this.setState({ disabledWallet: true });\n    const web3 = this.props.web3 ? this.props.web3.web3Instance : null;\n    if (!web3) {\n      return;\n    }\n    const code = ReplicateBinanceToken.ABI;\n    const args = [18000000, 'Asdf', 18, 'bnb0'];\n    const options = {\n      data: code,\n      arguments: [...args],\n      from: this.state.deployingAddress,\n    };\n\n    const jsonInterface = ReplicateBinanceToken.jsonInterface;\n    const contract = new web3.eth.Contract(jsonInterface);\n\n    contract\n      .deploy({\n        data: code,\n        arguments: options.arguments,\n      })\n      .send({\n        from: this.state.deployingAddress,\n        gas: 3000000,\n      })\n      .on('error', err => {\n        console.warn('error deploying contract', err);\n        this.props.displayGlobalNotification({\n          display: true,\n          type: 'error',\n          msg: err.message,\n        });\n      })\n      .on('transactionHash', transactionHash => {\n        this.props.displayGlobalNotification({\n          display: true,\n          type: 'warning',\n          msg: 'Pending contract deployment',\n        });\n      })\n      .on('receipt', receipt => {\n        contract.options.address = receipt.contractAddress;\n        contract.methods\n          .totalSupply()\n          .call()\n          .then(totalSupply => {\n            console.log('totalSupply', totalSupply);\n            const token = {\n              address: receipt.contractAddress,\n              name: 'Asdf',\n              symbol: 'bnb0',\n              decimals: '18',\n            };\n            this.props.addObservedToken({\n              address: token.address,\n              value: Object.assign({}, token, {\n                totalSupply,\n              }),\n            });\n          });\n      });\n  }\n\n  returnDeployTokenAddress(e) {\n    this.setState({ deployingAddress: e.target.value });\n  }\n\n  renderButton() {\n    const { classes } = this.props;\n    return (\n      <Fab\n        color=\"primary\"\n        aria-label=\"Add\"\n        className={classes.fab}\n        onClick={this.deployBinanceToken}\n      >\n        <AddIcon />\n      </Fab>\n    );\n  }\n\n  renderWallet() {\n    const dropdownConfig = {\n      component: 'deployToken',\n      selectClassName: 'send-from',\n      selectName: 'from',\n    };\n    return (\n      <React.Fragment>\n        <h3 style={{ display: 'inline-block' }}>Deploy a ERC-20 token</h3>\n        <div\n          className=\"dapp-select-account send-from\"\n          style={{ display: 'inline-block', marginLeft: '20px' }}\n        >\n          <WalletDropdown\n            disabled={this.state.disabledWallet}\n            dropdownConfig={dropdownConfig}\n            returnDeployTokenAddress={this.returnDeployTokenAddress}\n          />\n        </div>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"contracts-view-custom-tokens\">\n        <ButtonDescription\n          title={buttonTitle}\n          description={buttonDescription}\n        />\n        <div className=\"container row\">\n          {this.renderButton()}\n          {this.renderWallet()}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  Wallets: state.reducers.Wallets,\n  WalletContracts: state.reducers.WalletContracts,\n  web3: state.web3,\n});\n\nexport default compose(\n  withStyles(styles, { name: 'CustomContracts' }),\n  connect(\n    mapStateToProps,\n    { ...Actions }\n  )\n)(DeployToken);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport CustomContracts from '../components/CustomContracts';\nimport CustomTokens from '../components/CustomTokens';\nimport DeployToken from '../components/DeployToken';\n\nconst Title = () => {\n  return (\n    <h1>\n      <strong>Contracts</strong>\n    </h1>\n  );\n};\n\nexport class ContractsView extends Component {\n  render() {\n    return (\n      <div className=\"dapp-container\">\n        <Title />\n        <CustomContracts />\n        <CustomTokens />\n        {this.props.network !== 'mainnet' ? <DeployToken /> : null}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  network: state.network,\n});\n\nexport default connect(\n  mapStateToProps,\n  null\n)(ContractsView);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport compose from 'recompose/compose';\nimport { Identicon } from 'ethereum-react-components';\nimport Web3 from 'web3';\nimport WalletDropdown from './elements/WalletDropdown';\nimport { updateTransactionToSend } from '../actions/actions';\n\nimport * as Utils from '../utils/utils';\n\nimport { combineWallets, sortByBalance } from '../utils/helperFunctions';\n\nconst web3 = new Web3();\n\nexport class Send extends Component {\n  // TODO replace fromWallet with the from field from reducer TransactionToSend\n  constructor(props) {\n    super(props);\n    const wallets = this.props.Wallets;\n\n    const { Wallets, WalletContracts } = this.props;\n    console.log(Wallets);\n    console.log(WalletContracts);\n\n    const combinedWallets = combineWallets(Wallets, WalletContracts);\n\n    this.props.updateTransactionToSend({\n      name: 'from',\n      value: combinedWallets[0].address,\n    });\n    this.state = {\n      fromWallet: combinedWallets[0].address,\n      switchChecked: true,\n      checkbox: false,\n      standardFee: false,\n    };\n\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.checkIsAddress = this.checkIsAddress.bind(this);\n  }\n\n  handleInputChange(e) {\n    // TODO:validate inputs here\n    const target = e.target.getAttribute('name');\n    let targetValue = e.target.value;\n\n    if (target === 'value' && targetValue) {\n      targetValue = web3.utils.toWei(targetValue, 'ETHER');\n    }\n\n    this.setState({ toAddress: targetValue });\n\n    this.checkIsAddress();\n\n    this.props.updateTransactionToSend({\n      name: target,\n      value: targetValue,\n    });\n  }\n\n  checkIsAddress() {\n    const isAddress =\n      this.state.toAddress !== '' && this.state.toAddress !== undefined\n        ? web3.utils.isAddress(this.state.toAddress)\n        : this.state.toAddress !== '' || this.state.toAddress !== undefined\n        ? null\n        : false;\n    this.setState({ toIsAddress: isAddress });\n  }\n\n  renderFrom() {\n    const dropdownConfig = {\n      component: 'Send',\n      selectClassName: 'send-from',\n      selectName: 'from',\n    };\n    return (\n      <div className=\"col col-6 mobile-full from\">\n        <h3>From</h3>\n        <div className=\"dapp-select-account send-from\">\n          <WalletDropdown dropdownConfig={dropdownConfig} />\n        </div>\n      </div>\n    );\n  }\n\n  renderIcon() {\n    return (\n      <React.Fragment>\n        {this.state.toIsAddress &&\n        typeof this.state.toIsAddress === typeof true ? (\n          <Identicon\n            classes=\"dapp-identicon dapp-tiny\"\n            title\n            size=\"tiny\"\n            address={this.state.toAddress}\n          />\n        ) : this.state.toIsAddress === null ||\n          this.state.toIsAddress === undefined ? null : (\n          <i className=\"icon-shield\" />\n        )}\n      </React.Fragment>\n    );\n  }\n\n  renderTo() {\n    const cn = require('classnames');\n    const newClasses = cn({\n      to: true,\n      'dapp-error': this.state.toIsAddress === false,\n    });\n    return (\n      <div className=\"col col-6 mobile-full\">\n        <h3>To</h3>\n        <div className=\"dapp-address-input\">\n          <input\n            type=\"text\"\n            name=\"to\"\n            placeholder=\"0x000000..\"\n            className={newClasses}\n            autoFocus\n            // value={tx.to}\n            onChange={e => this.handleInputChange(e)}\n            onKeyUp={e => this.handleInputChange(e)}\n          />\n          {this.renderIcon()}\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    const dropdownConfig = {\n      component: 'Send',\n      selectClassName: 'send-from',\n      selectName: 'from',\n    };\n    return (\n      <div className=\"row clear from-to\">\n        {this.renderFrom()}\n        {this.renderTo()}\n        <div className=\"dapp-clear-fix\" />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  TransactionToSend: state.reducers.TransactionToSend,\n  Wallets: state.reducers.Wallets,\n  WalletContracts: state.reducers.WalletContracts,\n});\n\nexport default connect(\n  mapStateToProps,\n  { updateTransactionToSend }\n)(Send);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport shortid from 'shortid';\nimport { Identicon } from 'ethereum-react-components';\nimport * as Actions from '../../actions/actions';\n\nexport class RadioTokenSelect extends Component {\n  constructor(props) {\n    super(props);\n    this.chooseToken = this.chooseToken.bind(this);\n  }\n\n  chooseToken(e) {\n    const tokens = this.props.tokens;\n    if (e.target.value === 'ether') {\n      this.props.updateTokenToSend({\n        sendToken: false,\n        tokenToSend: {},\n      });\n    } else {\n      this.props.updateTokenToSend({\n        sendToken: true,\n        tokenToSend: Object.assign({}, tokens[e.target.value]),\n      });\n    }\n  }\n\n  renderEtherChoice() {\n    return (\n      <li onClick={e => this.chooseToken(e)}>\n        <input\n          type=\"radio\"\n          id=\"ether\"\n          value=\"ether\"\n          name=\"choose-token\"\n          onClick={e => {\n            this.chooseToken(e);\n          }}\n        />\n        <label htmlFor=\"ether\">\n          <span className=\"ether-symbol\">Ξ</span>\n          <span className=\"token-name\">ETHER</span>\n          <span className=\"balance\">TODO</span>\n        </label>\n      </li>\n    );\n  }\n\n  renderTokensChoice() {\n    const tokens = this.props.tokens;\n    const wallet = this.props.wallet;\n    return (\n      <React.Fragment>\n        {Object.keys(tokens).map(token => (\n          <li key={shortid.generate()}>\n            <input\n              type=\"radio\"\n              id={`token-${tokens[token].address}`}\n              value={tokens[token].address}\n              name=\"choose-token\"\n              onClick={e => {\n                this.chooseToken(e);\n              }}\n            />\n            <label htmlFor={`token-${tokens[token].address}`}>\n              <Identicon\n                classes=\"dapp-identicon dapp-tiny\"\n                title\n                size=\"tiny\"\n                address={token}\n              />\n              <span className=\"token-name\">{tokens[token].name}</span>\n              <span className=\"balance\">\n                {tokens[token].balance}\n                &nbsp;\n                {tokens[token].symbol}\n              </span>\n            </label>\n          </li>\n        ))}\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    const tokens = this.props.tokens;\n    return (\n      <ul className=\"select-token\">\n        {this.renderEtherChoice()}\n        {tokens ? this.renderTokensChoice() : null}\n      </ul>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return state;\n};\n\nexport default connect(\n  mapStateToProps,\n  { ...Actions }\n)(RadioTokenSelect);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Web3 from 'web3';\nimport RadioTokenSelect from './elements/RadioTokenSelect';\nimport { updateTransactionToSend } from '../actions/actions';\nimport { displayPriceFormatter } from '../utils/utils';\n\nexport class AmountRow extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      checkbox: false,\n    };\n    this.handleOnKeyUp = this.handleOnKeyUp.bind(this);\n    this.toggleCheckbox = this.toggleCheckbox.bind(this);\n  }\n\n  handleOnKeyUp(e) {\n    // TODO:validate inputs here\n    // let web3 = this.props.web3.web3Instance;\n    const tx = this.props.TransactionToSend;\n    let target = e.target.getAttribute('name');\n    let targetValue = e.target.value;\n\n    // TODO: still not to validate, but allow single decimal\n    if (targetValue.includes('.')) {\n      const web3 = new Web3();\n      const eth = targetValue.split('.')[0];\n\n      const wei = web3.utils.toWei(eth, 'ether');\n      const subEth = targetValue.split('.')[1];\n    }\n\n    if (target === 'value' && this.props.web3 && targetValue && !tx.sendToken) {\n      const web3 = this.props.web3.web3Instance;\n      targetValue = web3.utils.toWei(targetValue, 'ETHER');\n    }\n\n    if (tx.sendToken) {\n      target = 'tokenAmount';\n    }\n\n    this.props.updateTransactionToSend({\n      name: target,\n      value: targetValue,\n    });\n  }\n\n  toggleCheckbox(e) {\n    const wallet = this.props.TransactionToSend;\n    this.props.updateTransactionToSend({\n      name: 'value',\n      value: this.state.checkbox ? this.props.Wallets[wallet.from] : 0,\n    });\n    this.setState({ checkbox: !this.state.checkbox });\n  }\n\n  renderAmount() {\n    return (\n      <React.Fragment>\n        <h3>Amount</h3>\n        <input\n          type=\"text\"\n          min=\"0\"\n          step=\"any\"\n          name=\"value\"\n          placeholder=\"0.0\"\n          className=\"dapp-large\"\n          pattern=\"[0-9\\.,]*\"\n          onKeyUp={e => this.handleOnKeyUp(e)}\n        />\n        <br />\n        <label>\n          <input\n            type=\"checkbox\"\n            className=\"send-all\"\n            onChange={e => this.toggleCheckbox(e)}\n          />\n          Send everything\n        </label>\n      </React.Fragment>\n    );\n  }\n\n  renderAmountSummary() {\n    const tx = this.props.TransactionToSend;\n    const currency = this.props.reducers.currency;\n    return (\n      <p className=\"send-info\">\n        You want to send\n        <strong>\n          {!tx.sendToken ? (\n            ` ${displayPriceFormatter(this.props, tx.value)} ${currency}`\n          ) : (\n            <React.Fragment>\n              &nbsp; {tx.tokenAmount}\n              &nbsp; {tx.tokenToSend.symbol}\n            </React.Fragment>\n          )}\n        </strong>\n        .\n      </p>\n    );\n  }\n\n  renderEtherBalance() {\n    const wallets = this.props.Wallets;\n    const wallet = this.props.TransactionToSend.from;\n    const currency = this.props.reducers.currency;\n    const balance = wallets[wallet].balance;\n    return (\n      <div className=\"token-ether\">\n        <span className=\"ether-symbol\">Ξ</span>\n        <span className=\"token-name\">ETHER</span>\n        <span className=\"balance\">\n          {` ${displayPriceFormatter(\n            this.props,\n            balance\n          )} ${currency} (${displayPriceFormatter(\n            this.props,\n            balance,\n            'ETHER'\n          )}ETHER)`}\n        </span>\n      </div>\n    );\n  }\n\n  renderEtherDropDown() {\n    const wallets = this.props.Wallets;\n    const wallet = this.props.TransactionToSend.from;\n    const tokens = wallets[wallet] ? wallets[wallet].tokens : undefined;\n    return (\n      <div className=\"col col-6 mobile-full\">\n        <br />\n        <br />\n        {tokens ? (\n          <RadioTokenSelect wallet={wallet} tokens={tokens} />\n        ) : (\n          this.renderEtherBalance()\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"row clear\">\n        <div className=\"col col-6 mobile-full amount\">\n          {this.renderAmount()}\n          {this.renderAmountSummary()}\n        </div>\n        {this.renderEtherDropDown()}\n        <div className=\"dapp-clear-fix\" />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  Wallets: state.reducers.Wallets,\n  GasStats: state.reducers.GasStats,\n  TransactionToSend: state.reducers.TransactionToSend,\n  web3: state.web3,\n  reducers: {\n    exchangeRates: state.reducers.exchangeRates,\n    currency: state.reducers.currency,\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  { updateTransactionToSend }\n)(AmountRow);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\n// import * as Actions from '../actions/actions.js';\nimport { updateTransactionToSend } from '../actions/actions';\nimport { floatToTime } from '../utils/utils';\n\nexport class GasFeeRow extends Component {\n  constructor(props) {\n    // TODO need to init gas\n    // TODO where was estimate gas being called?!\n\n    super(props);\n    this.state = {\n      standardFee: false,\n    };\n    this.changeGas = this.changeGas.bind(this);\n    this.estimateGas = this.estimateGas.bind(this);\n    this.toggleFee = this.toggleFee.bind(this);\n  }\n\n  changeGas(e) {\n    this.props.updateTransactionToSend({\n      name: 'gasPrice',\n      value: e * 1000000000,\n    });\n  }\n\n  estimateGas() {\n    const web3 = this.props.web3.web3Instance;\n    const tx = this.props.TransactionToSend;\n    web3.eth.estimateGas(\n      {\n        to: tx.to,\n        from: tx.from,\n        amount: tx.value,\n      },\n      (err, res) => {\n        err\n          ? console.warn(err)\n          : this.props.updateTransactionToSend({\n              name: 'estimatedGas',\n              value: res,\n            });\n      }\n    );\n  }\n\n  toggleFee(e) {\n    this.setState({ standardFee: !this.state.standardFee });\n    this.props.GasStats !== {} && !this.state.standardFee\n      ? this.changeGas(this.props.GasStats.safeLow)\n      : this.changeGas(this.props.GasStats.fastest);\n  }\n\n  renderFeePriority() {\n    const GasStats = this.props.GasStats;\n    return (\n      <div className=\"col col-7 mobile-full\">\n        <h3>Select Fee</h3>\n        <div className=\"dapp-select-gas-price\" onClick={e => this.toggleFee(e)}>\n          {GasStats !== {} && this.state.standardFee ? (\n            <span>STANDARD FEE: &nbsp; {GasStats.safeLow} </span>\n          ) : (\n            <span>PRIORITY FEE: &nbsp; {GasStats.fastest}</span>\n          )}\n        </div>\n      </div>\n    );\n  }\n\n  renderEstimateTime() {\n    const GasStats = this.props.GasStats;\n    return (\n      <div className=\"col col-5 mobile-full send-info\">\n        <br />\n        <br />\n        This is the most amount of money that might be used to process this\n        transaction. Your transaction will be mined &nbsp;\n        <strong>\n          probably within &nbsp;\n          {GasStats !== {} && this.state.standardFee\n            ? floatToTime(GasStats.safeLowWait)\n            : floatToTime(GasStats.fastWait)}\n        </strong>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"row clear\">\n        {this.renderFeePriority()}\n        {this.renderEstimateTime()}\n        <div className=\"dapp-clear-fix\" />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  GasStats: state.reducers.GasStats,\n  TransactionToSend: state.reducers.TransactionToSend,\n  web3: state.web3,\n});\n\nexport default connect(\n  mapStateToProps,\n  { updateTransactionToSend }\n)(GasFeeRow);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Web3 from 'web3';\nimport { displayPriceFormatter } from '../utils/utils';\n\nconst web3 = new Web3();\n\nconst TokenInfo = ({ tx }) => {\n  return (\n    <React.Fragment>\n      <span className=\"amount\">\n        &nbsp;\n        {tx.tokenAmount}\n      </span>\n      &nbsp;\n      {tx.tokenToSend.symbol}\n    </React.Fragment>\n  );\n};\n\nconst EstimatedFee = ({ total }) => {\n  return (\n    <React.Fragment>\n      Estimated Fee: &nbsp;\n      {web3.utils.fromWei(total, 'ether')}\n      &nbsp; ETHER\n    </React.Fragment>\n  );\n};\n\nexport class TotalGas extends Component {\n  renderTotal(total) {\n    const tx = this.props.TransactionToSend;\n    return (\n      <React.Fragment>\n        <h3>Total</h3>\n        {!tx.sendToken ? (\n          <span className=\"amount\">\n            {` ${displayPriceFormatter(this.props, total)} ${\n              this.props.reducers.currency\n            }`}\n          </span>\n        ) : (\n          <TokenInfo transaction={tx} />\n        )}\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    const tx = this.props.TransactionToSend;\n    const val = Number(tx.value);\n    let total = !tx.sendToken ? val + tx.gasPrice : tx.gasPrice;\n    total = !isNaN(total) ? total : 0;\n    total = web3.utils.toBN(total);\n    return (\n      <div className=\"row clear total\">\n        <div className=\"col col-12 mobile-full\">\n          {this.renderTotal(total)}\n          <br />\n          <EstimatedFee total={total} />\n        </div>\n        <div className=\"dapp-clear-fix\" />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  TransactionToSend: state.reducers.TransactionToSend,\n  web3: state.web3,\n  reducers: {\n    exchangeRates: state.reducers.exchangeRates,\n    currency: state.reducers.currency,\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  null\n)(TotalGas);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport FromToRow from '../components/FromToRow';\nimport AmountRow from '../components/AmountRow';\nimport GasFeeRow from '../components/GasFeeRow';\nimport TotalGas from '../components/TotalGas';\n\nimport {\n  updateTransactionToSend,\n  displayGlobalNotification,\n  displayModal,\n} from '../actions/actions';\n\nconst Title = () => {\n  return (\n    <h1>\n      <strong>Send</strong> Funds\n    </h1>\n  );\n};\n\nexport class Send extends Component {\n  // TODO replace fromWallet with the from field from reducer TransactionToSend\n\n  constructor(props) {\n    super(props);\n    this.handleOnKeyUp = this.handleOnKeyUp.bind(this);\n    this.validateForm = this.validateForm.bind(this);\n    this.validateSendingEther = this.validateSendingEther.bind(this);\n    this.validateSendingTokens = this.validateSendingTokens.bind(this);\n  }\n\n  validateSendingEther(tx) {\n    console.log('in validateSendingEther');\n    let msg;\n    let valid = true;\n    const totalBalance = this.props.reducers.totalBalance;\n    if (!tx.value) {\n      msg = \"Oops! You'll need  to specify an amount to send\";\n      valid = false;\n      this.props.displayGlobalNotification({\n        display: true,\n        type: 'info',\n        msg,\n      });\n    }\n    if (tx.amount > totalBalance) {\n      msg =\n        \"Oops! That's more than the wallet holds. Please select a lesser amount\";\n      valid = false;\n      this.props.displayGlobalNotification({\n        display: true,\n        type: 'warning',\n        msg,\n      });\n    }\n    if (valid) this.props.displayModal('displaySendTransaction');\n  }\n\n  validateSendingTokens(tx) {\n    console.log('in validateSendingTokens');\n    const valid = true;\n    const web3 = this.props.web3.web3Instance;\n    if (valid) this.props.displayModal('displaySendTransaction');\n  }\n\n  validateForm(tx) {\n    let msg;\n    let valid = true;\n    const web3 = this.props.web3.web3Instance;\n\n    if (!web3.utils.isAddress(tx.to)) {\n      msg =\n        'The To field has an invalid address! Please check that it has been entered correctly';\n      valid = false;\n      this.props.displayGlobalNotification({\n        display: true,\n        type: 'error',\n        msg,\n      });\n    }\n    if (!web3.utils.isAddress(tx.from)) {\n      msg =\n        'The From field has an invalid address! Please check that it has been entered correctly';\n      valid = false;\n      this.props.displayGlobalNotification({\n        display: true,\n        type: 'error',\n        msg,\n      });\n    }\n\n    !tx.sendToken\n      ? this.validateSendingEther(tx)\n      : this.validateSendingTokens(tx);\n\n    // if (valid) this.props.displayModal('displaySendTransaction');\n  }\n\n  handleOnKeyUp(e) {\n    // TODO:validate inputs here\n    // let web3 = this.props.web3.web3Instance;\n    const target = e.target.getAttribute('name');\n    let targetValue = e.target.value;\n\n    if (target === 'value' && this.props.web3 && targetValue) {\n      const web3 = this.props.web3.web3Instance;\n      targetValue = web3.utils.toWei(targetValue, 'ETHER');\n    }\n    this.props.updateTransactionToSend({\n      name: target,\n      value: targetValue,\n    });\n  }\n\n  renderSubmitButton() {\n    return (\n      <button\n        type=\"submit\"\n        className=\"dapp-block-button\"\n        onClick={e => {\n          e.preventDefault();\n          this.validateForm(this.props.reducers.TransactionToSend);\n        }}\n      >\n        Send\n      </button>\n    );\n  }\n\n  render() {\n    return (\n      <form\n        className=\"account-send-form\"\n        action=\"about:blank\"\n        target=\"dapp-form-helper-iframe\"\n        autoComplete=\"on\"\n      >\n        <Title />\n        <FromToRow />\n        <AmountRow />\n        <GasFeeRow />\n        <TotalGas />\n        {this.renderSubmitButton()}\n      </form>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return state;\n};\n\nexport default connect(\n  mapStateToProps,\n  { updateTransactionToSend, displayGlobalNotification, displayModal }\n)(Send);\n","/**\nConfig for the ethereum connector\n\n@property config\n*/\nexport const ethereumConfig = {\n  /**\n    Number of blocks to rollback, from the last checkpoint block of the wallet.\n\n    @property ethereumConfig.rollBackBy\n    */\n  rollBackBy: 0,\n  /**\n    Number of blocks to confirm a wallet\n\n    @property ethereumConfig.requiredConfirmations\n    */\n  requiredConfirmations: 12,\n  /**\n    The default daily limit used for simple accounts\n\n    @property ethereumConfig.dailyLimitDefault\n    */\n  dailyLimitDefault: '100000000000000000000000000',\n};\n\nexport const WalletInterfaceItems = {\n  mainNetAddress: '0x273930d21e01ee25e4c219b63259d214872220a2',\n  testNetAddress: '0x1d649ca03d1bcd84877482c1dd8d3f9a7398728f', // morden testnet\n  walletInterface: [\n    {\n      constant: false,\n      inputs: [{ name: '_owner', type: 'address' }],\n      name: 'removeOwner',\n      outputs: [],\n      type: 'function',\n    },\n    {\n      constant: false,\n      inputs: [{ name: '_addr', type: 'address' }],\n      name: 'isOwner',\n      outputs: [{ name: '', type: 'bool' }],\n      type: 'function',\n    },\n    {\n      constant: true,\n      inputs: [],\n      name: 'm_numOwners',\n      outputs: [{ name: '', type: 'uint256' }],\n      type: 'function',\n    },\n    {\n      constant: true,\n      inputs: [],\n      name: 'm_lastDay',\n      outputs: [{ name: '', type: 'uint256' }],\n      type: 'function',\n    },\n    {\n      constant: true,\n      inputs: [],\n      name: 'version',\n      outputs: [{ name: '', type: 'uint256' }],\n      type: 'function',\n    },\n    {\n      constant: false,\n      inputs: [],\n      name: 'resetSpentToday',\n      outputs: [],\n      type: 'function',\n    },\n    {\n      constant: true,\n      inputs: [],\n      name: 'm_spentToday',\n      outputs: [{ name: '', type: 'uint256' }],\n      type: 'function',\n    },\n    {\n      constant: false,\n      inputs: [{ name: '_owner', type: 'address' }],\n      name: 'addOwner',\n      outputs: [],\n      type: 'function',\n    },\n    {\n      constant: true,\n      inputs: [],\n      name: 'm_required',\n      outputs: [{ name: '', type: 'uint256' }],\n      type: 'function',\n    },\n    {\n      constant: false,\n      inputs: [{ name: '_h', type: 'bytes32' }],\n      name: 'confirm',\n      outputs: [{ name: '', type: 'bool' }],\n      type: 'function',\n    },\n    {\n      constant: false,\n      inputs: [{ name: '_newLimit', type: 'uint256' }],\n      name: 'setDailyLimit',\n      outputs: [],\n      type: 'function',\n    },\n    {\n      constant: false,\n      inputs: [\n        { name: '_to', type: 'address' },\n        { name: '_value', type: 'uint256' },\n        { name: '_data', type: 'bytes' },\n      ],\n      name: 'execute',\n      outputs: [{ name: '_r', type: 'bytes32' }],\n      type: 'function',\n    },\n    {\n      constant: false,\n      inputs: [{ name: '_operation', type: 'bytes32' }],\n      name: 'revoke',\n      outputs: [],\n      type: 'function',\n    },\n    {\n      constant: false,\n      inputs: [{ name: '_newRequired', type: 'uint256' }],\n      name: 'changeRequirement',\n      outputs: [],\n      type: 'function',\n    },\n    {\n      constant: true,\n      inputs: [\n        { name: '_operation', type: 'bytes32' },\n        { name: '_owner', type: 'address' },\n      ],\n      name: 'hasConfirmed',\n      outputs: [{ name: '', type: 'bool' }],\n      type: 'function',\n    },\n    {\n      constant: false,\n      inputs: [{ name: '_to', type: 'address' }],\n      name: 'kill',\n      outputs: [],\n      type: 'function',\n    },\n    {\n      constant: false,\n      inputs: [\n        { name: '_from', type: 'address' },\n        { name: '_to', type: 'address' },\n      ],\n      name: 'changeOwner',\n      outputs: [],\n      type: 'function',\n    },\n    {\n      constant: true,\n      inputs: [],\n      name: 'm_dailyLimit',\n      outputs: [{ name: '', type: 'uint256' }],\n      type: 'function',\n    },\n    {\n      inputs: [\n        { name: '_owners', type: 'address[]' },\n        { name: '_required', type: 'uint256' },\n        { name: '_daylimit', type: 'uint256' },\n      ],\n      type: 'constructor',\n    },\n    {\n      anonymous: false,\n      inputs: [\n        { indexed: false, name: 'owner', type: 'address' },\n        { indexed: false, name: 'operation', type: 'bytes32' },\n      ],\n      name: 'Confirmation',\n      type: 'event',\n    },\n    {\n      anonymous: false,\n      inputs: [\n        { indexed: false, name: 'owner', type: 'address' },\n        { indexed: false, name: 'operation', type: 'bytes32' },\n      ],\n      name: 'Revoke',\n      type: 'event',\n    },\n    {\n      anonymous: false,\n      inputs: [\n        { indexed: false, name: 'oldOwner', type: 'address' },\n        { indexed: false, name: 'newOwner', type: 'address' },\n      ],\n      name: 'OwnerChanged',\n      type: 'event',\n    },\n    {\n      anonymous: false,\n      inputs: [{ indexed: false, name: 'newOwner', type: 'address' }],\n      name: 'OwnerAdded',\n      type: 'event',\n    },\n    {\n      anonymous: false,\n      inputs: [{ indexed: false, name: 'oldOwner', type: 'address' }],\n      name: 'OwnerRemoved',\n      type: 'event',\n    },\n    {\n      anonymous: false,\n      inputs: [{ indexed: false, name: 'newRequirement', type: 'uint256' }],\n      name: 'RequirementChanged',\n      type: 'event',\n    },\n    {\n      anonymous: false,\n      inputs: [\n        { indexed: false, name: 'from', type: 'address' },\n        { indexed: false, name: 'value', type: 'uint256' },\n      ],\n      name: 'Deposit',\n      type: 'event',\n    },\n    {\n      anonymous: false,\n      inputs: [\n        { indexed: false, name: 'owner', type: 'address' },\n        { indexed: false, name: 'value', type: 'uint256' },\n        { indexed: false, name: 'to', type: 'address' },\n        { indexed: false, name: 'data', type: 'bytes' },\n      ],\n      name: 'SingleTransact',\n      type: 'event',\n    },\n    {\n      anonymous: false,\n      inputs: [\n        { indexed: false, name: 'owner', type: 'address' },\n        { indexed: false, name: 'operation', type: 'bytes32' },\n        { indexed: false, name: 'value', type: 'uint256' },\n        { indexed: false, name: 'to', type: 'address' },\n        { indexed: false, name: 'data', type: 'bytes' },\n      ],\n      name: 'MultiTransact',\n      type: 'event',\n    },\n    {\n      anonymous: false,\n      inputs: [\n        { indexed: false, name: 'operation', type: 'bytes32' },\n        { indexed: false, name: 'initiator', type: 'address' },\n        { indexed: false, name: 'value', type: 'uint256' },\n        { indexed: false, name: 'to', type: 'address' },\n        { indexed: false, name: 'data', type: 'bytes' },\n      ],\n      name: 'ConfirmationNeeded',\n      type: 'event',\n    },\n  ],\n  walletABI:\n    '',\n  walletStubABI:\n    '0x6060604052600261010860005055604051611b51380380611b51833981016040528080518201919060200180519060200190919080519060200190919050505b805b83835b600060018351016001600050819055503373ffffffffffffffffffffffffffffffffffffffff16600260005060016101008110156100025790900160005b5081905550600161010260005060003373ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005081905550600090505b825181101561016e5782818151811015610002579060200190602002015173ffffffffffffffffffffffffffffffffffffffff166002600050826002016101008110156100025790900160005b508190555080600201610102600050600085848151811015610002579060200190602002015173ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050819055505b80600101905080506100c2565b816000600050819055505b505050806101056000508190555061018f6101ad565b610107600050819055505b505b505050611992806101bf6000396000f35b600062015180420490506101bc565b9056606060405236156100f8576000357c010000000000000000000000000000000000000000000000000000000090048063173825d9146101605780632f54bf6e146101785780634123cb6b146101a457806352375093146101c757806354fd4d50146101ea5780635c52c2f51461020d578063659010e71461021c5780637065cb481461023f578063746c917114610257578063797af6271461027a578063b20d30a9146102a6578063b61d27f6146102be578063b75c7dc614610307578063ba51a6df1461031f578063c2cf732614610337578063cbf0b0c01461036c578063f00d4b5d14610384578063f1736d86146103a5576100f8565b61015e5b600034111561015b577fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c3334604051808373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a15b5b565b005b61017660048080359060200190919050506107c4565b005b61018e60048080359060200190919050506109a5565b6040518082815260200191505060405180910390f35b6101b16004805050610a91565b6040518082815260200191505060405180910390f35b6101d46004805050610b38565b6040518082815260200191505060405180910390f35b6101f76004805050610b42565b6040518082815260200191505060405180910390f35b61021a6004805050610adf565b005b6102296004805050610b2e565b6040518082815260200191505060405180910390f35b610255600480803590602001909190505061066e565b005b6102646004805050610a88565b6040518082815260200191505060405180910390f35b6102906004808035906020019091905050610f0e565b6040518082815260200191505060405180910390f35b6102bc6004808035906020019091905050610a9a565b005b6102f160048080359060200190919080359060200190919080359060200190820180359060200191909192905050610b9e565b6040518082815260200191505060405180910390f35b61031d60048080359060200190919050506103c8565b005b610335600480803590602001909190505061090f565b005b61035660048080359060200190919080359060200190919050506109e7565b6040518082815260200191505060405180910390f35b6103826004808035906020019091905050610b4c565b005b6103a360048080359060200190919080359060200190919050506104ca565b005b6103b26004805050610b24565b6040518082815260200191505060405180910390f35b60006000600061010260005060003373ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050549250600083141561040f576104c4565b8260020a91506101036000506000858152602001908152602001600020600050905060008282600101600050541611156104c3578060000160008181505480929190600101919050555081816001016000828282505403925050819055507fc7fb647e59b18047309aa15aad418e5d7ca96d173ad704f1031a2c3d7591734b3385604051808373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a15b5b50505050565b600060003643604051808484808284378201915050828152602001935050505060405180910390206104fb816112db565b1561066757610509836109a5565b156105145750610669565b61010260005060008573ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060005054915060008214156105565750610669565b61055e611777565b8273ffffffffffffffffffffffffffffffffffffffff166002600050836101008110156100025790900160005b5081905550600061010260005060008673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050819055508161010260005060008573ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050819055507fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c8484604051808373ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a15b505b505050565b600036436040518084848082843782019150508281526020019350505050604051809103902061069d816112db565b156107bf576106ab826109a5565b156106b657506107c1565b6106be611777565b60fa6001600050541015156106d7576106d561153d565b505b60fa6001600050541015156106ec57506107c1565b60016000818150548092919060010191905055508173ffffffffffffffffffffffffffffffffffffffff1660026000506001600050546101008110156100025790900160005b508190555060016000505461010260005060008473ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050819055507f994a936646fe87ffe4f1e469d3d6aa417d6b855598397f323de5b449f765f0c382604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a15b505b50565b600060003643604051808484808284378201915050828152602001935050505060405180910390206107f5816112db565b156109095761010260005060008473ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050549150600082141561083c575061090b565b6001600160005054036000600050541115610857575061090b565b60006002600050836101008110156100025790900160005b5081905550600061010260005060008573ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050819055506108b2611777565b6108ba61153d565b507f58619076adf5bb0943d100ef88d52d7c3fd691b19d3a9071b555b651fbf418da83604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a15b505b5050565b600036436040518084848082843782019150508281526020019350505050604051809103902061093e816112db565b156109a05760016000505482111561095657506109a2565b81600060005081905550610968611777565b7facbdb084c721332ac59f9b8e392196c9eb0e4932862da8eb9beaf0dad4f550da826040518082815260200191505060405180910390a15b505b50565b6000600061010260005060008473ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050541190506109e2565b919050565b60006000600060006101036000506000878152602001908152602001600020600050925061010260005060008673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000505491506000821415610a505760009350610a7f565b8160020a90506000818460010160005054161415610a755760009350610a7f56610a7e565b60019350610a7f565b5b50505092915050565b60006000505481565b60016000505481565b6000364360405180848480828437820191505082815260200193505050506040518091039020610ac9816112db565b15610ada5781610105600050819055505b505b50565b6000364360405180848480828437820191505082815260200193505050506040518091039020610b0e816112db565b15610b20576000610106600050819055505b505b565b6101056000505481565b6101066000505481565b6101076000505481565b6101086000505481565b6000364360405180848480828437820191505082815260200193505050506040518091039020610b7b816112db565b15610b99578173ffffffffffffffffffffffffffffffffffffffff16ff5b505b50565b6000610ba9336109a5565b15610f0557610bb7846116d7565b15610ca0577f92ca3a80853e6663fa31fa10b99225f18d4902939b4c53a9caae9043f6efd0043385878686604051808673ffffffffffffffffffffffffffffffffffffffff1681526020018581526020018473ffffffffffffffffffffffffffffffffffffffff1681526020018060200182810382528484828181526020019250808284378201915050965050505050505060405180910390a18473ffffffffffffffffffffffffffffffffffffffff168484846040518083838082843782019150509250505060006040518083038185876185025a03f1925050505060006001029050610f06565b600036436040518084848082843782019150508281526020019350505050604051809103902090508050610cd381610f0e565b158015610d3357506000610109600050600083815260200190815260200160002060005060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b15610f045784610109600050600083815260200190815260200160002060005060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff0219169083021790555083610109600050600083815260200190815260200160002060005060010160005081905550828261010960005060008481526020019081526020016000206000506002016000509190828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610e0857803560ff1916838001178555610e39565b82800160010185558215610e39579182015b82811115610e38578235826000505591602001919060010190610e1a565b5b509050610e649190610e46565b80821115610e605760008181506000905550600101610e46565b5090565b50507f1733cbb53659d713b79580f79f3f9ff215f78a7c7aa45890f3b89fc5cddfbf32813386888787604051808781526020018673ffffffffffffffffffffffffffffffffffffffff1681526020018581526020018473ffffffffffffffffffffffffffffffffffffffff168152602001806020018281038252848482818152602001925080828437820191505097505050505050505060405180910390a15b5b5b949350505050565b600081610f1a816112db565b156112d4576000610109600050600085815260200190815260200160002060005060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156112d357610109600050600084815260200190815260200160002060005060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610109600050600085815260200190815260200160002060005060010160005054610109600050600086815260200190815260200160002060005060020160005060405180828054600181600116156101000203166002900480156110765780601f1061104b57610100808354040283529160200191611076565b820191906000526020600020905b81548152906001019060200180831161105957829003601f168201915b505091505060006040518083038185876185025a03f192505050507fe7c957c06e9a662c1a6c77366179f5b702b97651dc28eee7d5bf1dff6e40bb4a3384610109600050600087815260200190815260200160002060005060010160005054610109600050600088815260200190815260200160002060005060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166101096000506000898152602001908152602001600020600050600201600050604051808673ffffffffffffffffffffffffffffffffffffffff1681526020018581526020018481526020018373ffffffffffffffffffffffffffffffffffffffff168152602001806020018281038252838181546001816001161561010002031660029004815260200191508054600181600116156101000203166002900480156112005780601f106111d557610100808354040283529160200191611200565b820191906000526020600020905b8154815290600101906020018083116111e357829003601f168201915b5050965050505050505060405180910390a1610109600050600084815260200190815260200160002060006000820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600182016000506000905560028201600050805460018160011615610100020316600290046000825580601f1061128957506112c6565b601f0160209004906000526020600020908101906112c591906112a7565b808211156112c157600081815060009055506001016112a7565b5090565b5b50505060019150506112d6565b5b505b919050565b600060006000600061010260005060003373ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600050549250600083141561132457611535565b610103600050600086815260200190815260200160002060005091506000826000016000505414156113fd57600060005054826000016000508190555060008260010160005081905550610104600050805480919060010190908154818355818115116113c3578183600052602060002091820191016113c291906113a4565b808211156113be57600081815060009055506001016113a4565b5090565b5b5050508260020160005081905550846101046000508360020160005054815481101561000257906000526020600020900160005b50819055505b8260020a90506000818360010160005054161415611534577fe1c52dc63b719ade82e8bea94cc41a0d5d28e4aaf536adb5e9cccc9ff8c1aeda3386604051808373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a16001826000016000505411151561150757610104600050610103600050600087815260200190815260200160002060005060020160005054815481101561000257906000526020600020900160005b50600090556101036000506000868152602001908152602001600020600060008201600050600090556001820160005060009055600282016000506000905550506001935061153556611533565b816000016000818150548092919060019003919050555080826001016000828282505417925050819055505b5b5b505050919050565b60006000600190505b6001600050548110156116d2575b60016000505481108015611580575060006002600050826101008110156100025790900160005b505414155b15611592578080600101915050611554565b5b60016001600050541180156115c45750600060026000506001600050546101008110156100025790900160005b5054145b156115e357600160008181505480929190600190039190505550611593565b600160005054811080156116145750600060026000506001600050546101008110156100025790900160005b505414155b8015611637575060006002600050826101008110156100025790900160005b5054145b156116cd5760026000506001600050546101008110156100025790900160005b50546002600050826101008110156100025790900160005b50819055508061010260005060006002600050846101008110156100025790900160005b5054815260200190815260200160002060005081905550600060026000506001600050546101008110156100025790900160005b50819055505b611546565b5b5090565b60006116e2336109a5565b1561177157610107600050546116f6611980565b111561171b57600061010660005081905550611710611980565b610107600050819055505b610106600050548261010660005054011015801561174757506101056000505482610106600050540111155b15611768578161010660008282825054019250508190555060019050611772565b60009050611772565b5b919050565b60006000610104600050805490509150600090505b8181101561187857610109600050600061010460005083815481101561000257906000526020600020900160005b5054815260200190815260200160002060006000820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600182016000506000905560028201600050805460018160011615610100020316600290046000825580601f1061182a5750611867565b601f0160209004906000526020600020908101906118669190611848565b808211156118625760008181506000905550600101611848565b5090565b5b5050505b806001019050805061178c565b611880611885565b5b5050565b60006000610104600050805490509150600090505b8181101561193857600060010261010460005082815481101561000257906000526020600020900160005b505414151561192a57610103600050600061010460005083815481101561000257906000526020600020900160005b50548152602001908152602001600020600060008201600050600090556001820160005060009055600282016000506000905550505b5b806001019050805061189a565b61010460005080546000825590600052602060002090810190611979919061195b565b80821115611975576000818150600090555060010161195b565b5090565b5b505b5050565b6000620151804204905061198f565b9056', // '0x606060405260026101086000505560405161015638038061015683398101604052805160805160a051919092019190808383815160019081018155600090600160a060020a0332169060029060038390559183525061010260205260408220555b82518110156100eb57828181518110156100025790602001906020020151600160a060020a03166002600050826002016101008110156100025790900160005081905550806002016101026000506000858481518110156100025790602001906020020151600160a060020a0316815260200190815260200160002060005081905550600101610060565b81600060005081905550505050806101056000508190555061010f62015180420490565b61010755505050506031806101256000396000f3003660008037602060003660003473cafecafecafecafecafecafecafecafecafecafe61235a5a03f21560015760206000f3'\n  // '0x606060405260026101086000505560405161015638038061015683398101604052805160805160a051919092019190808383815160019081018155600090600160a060020a0332169060029060038390559183525061010260205260408220555b82518110156100eb57828181518110156100025790602001906020020151600160a060020a03166002600050826002016101008110156100025790900160005081905550806002016101026000506000858481518110156100025790602001906020020151600160a060020a0316815260200190815260200160002060005081905550600101610060565b81600060005081905550505050806101056000508190555061010f62015180420490565b61010755505050506031806101256000396000f3003660008037602060003660003473cafecafecafecafecafecafecafecafecafecafe61235a5a03f21560015760206000f3',\n  // CONTRACT VERSIONS\n  contractVersions: [\n    // 0 foundation\n    {\n      original:\n        '971ac1efe62de02ab7497cf2cad2b93ce990a8d11c3a544943baf807e42eab7d',\n      stub: false,\n      // version 0 with tx.origin\n      address: '0x4efc6389b88569a375668b7b3bd4a9b6c8f4a942',\n    },\n    // 1 better daily limit\n    {\n      original:\n        '8207780d6fb31803373aff97360562231187ebb0da6b4678eeb68ceb16897509',\n      stub: '',\n      address: '0x273930d21e01ee25e4c219b63259d214872220a2',\n    },\n  ],\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport compose from 'recompose/compose';\nimport PropTypes from 'prop-types';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Collapse from '@material-ui/core/Collapse';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport InputAdornment from '@material-ui/core/InputAdornment';\n\nimport shortid from 'shortid';\nimport { Identicon } from 'ethereum-react-components';\nimport WalletDropdown from '../components/elements/WalletDropdown';\nimport * as Actions from '../actions/actions';\nimport { makeID } from '../utils/helperFunctions';\n\nimport {\n  WalletInterfaceItems,\n  ethereumConfig,\n} from '../constants/InitConstants.js';\n\nconst styles = theme => ({\n  radioRoot: {\n    display: 'flex',\n  },\n  formControl: {\n    margin: theme.spacing.unit * 3,\n  },\n  group: {\n    margin: `${theme.spacing.unit}px 0`,\n  },\n  fadeRoot: {\n    height: 'auto',\n    noHeight: 0,\n  },\n  paper: {\n    margin: theme.spacing.unit,\n  },\n  svg: {\n    width: 100,\n    height: 100,\n  },\n  polygon: {\n    fill: theme.palette.common.white,\n    stroke: theme.palette.divider,\n    strokeWidth: 1,\n  },\n});\n\nconst Title = () => {\n  return (\n    <h1>\n      New <strong>wallet contract</strong>\n    </h1>\n  );\n};\n\nconst SelectOwner = () => {\n  const dropdownConfig = {\n    component: 'DeployContractForm',\n    selectClassName: 'send-from',\n    selectName: 'MainOwnerAddress',\n  };\n  return (\n    <React.Fragment>\n      <h2>Select owner</h2>\n      <div className=\"col col-6 mobile-full from\">\n        <h3>From</h3>\n        <div className=\"dapp-select-account send-from\">\n          <WalletDropdown dropdownConfig={dropdownConfig} />\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nconst dcfRadio = ['simpleChecked', 'multisigChecked', 'importWalletChecked'];\n\nclass NewWalletContract extends Component {\n  constructor(props) {\n    super(props);\n    this.state = this.props;\n    this.selectWallet = this.selectWallet.bind(this);\n    this.createContract = this.createContract.bind(this);\n    this.checkIfImportableWallet = this.checkIfImportableWallet.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    let defaultWallet;\n    const wallets = this.props.reducers.Wallets;\n    for (const prop in wallets) {\n      defaultWallet = prop;\n      break;\n    }\n    this.state.reducers.DeployContractForm.MainOwnerAddress = defaultWallet;\n    this.state.reducers.DeployContractForm.multiSigContract.owners[0] = defaultWallet;\n  }\n\n  selectWallet(e) {\n    // TODO:validate inputs here\n    const obj = { ...this.props.reducers.DeployContractForm };\n    obj.MainOwnerAddress = e.target.value;\n    this.props.updateMainContractAddress({\n      name: 'MainOwnerAddress',\n      value: e.target.value,\n    });\n  }\n\n  shouldComponentUpdate(prevProps, prevState) {\n    const dcf = this.props.reducers.DeployContractForm;\n    const prevDcf = prevProps.reducers.DeployContractForm;\n    if (\n      dcf !== prevDcf ||\n      dcf.multiSigContract !== prevDcf.multiSigContract ||\n      dcf.MainOwnerAddress !== prevDcf.MainOwnerAddress\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  checkIfImportableWallet(e) {\n    const dcf = this.props.reducers.DeployContractForm;\n    const address = dcf.importWalletAddress;\n    let web3;\n    if (this.props.web3 && this.props.web3.web3Instance) {\n      web3 = this.props.web3.web3Instance;\n    } else {\n      return;\n    }\n\n    if (!web3.utils.isAddress(address)) {\n      console.log('inside not address');\n      this.props.displayGlobalNotification({\n        display: true,\n        type: 'error',\n        msg: 'Invalid address input',\n      });\n      this.props.updateMainDCF({ name: 'importWalletAddress', value: '' });\n      return false;\n    }\n\n    const pendingConf = this.props.reducers.ContractsPendingConfirmations;\n    const wc = this.props.reducers.WalletContracts;\n    const walletContracts = Object.assign({}, pendingConf, wc);\n    if (Object.keys(walletContracts).includes(address)) {\n      this.props.displayGlobalNotification({\n        display: true,\n        type: 'warning',\n        msg:\n          'You are already following this wallet, or it is pending confirmation.',\n      });\n      this.props.updateMainDCF({ name: 'importWalletAddress', value: '' });\n      return false;\n    }\n\n    const originalABI = WalletInterfaceItems.walletStubABI;\n    return web3.eth.getCode(address).then((err, res) => {\n      if (err) {\n        this.props.displayGlobalNotification({\n          display: true,\n          type: 'error',\n          msg:\n            err === '0x' || err === '0x0'\n              ? \"A contract doesn't exist at this address\"\n              : err,\n        });\n        this.props.updateMainDCF({ name: 'importWalletAddress', value: '' });\n        return false;\n      }\n      if (originalABI !== res) {\n        this.props.displayGlobalNotification({\n          display: true,\n          type: 'error',\n          msg:\n            'This address does not reference a contract identical to the wallets this form deploys, and cannot be imported',\n        });\n        this.props.updateMainDCF({ name: 'importWalletAddress', value: '' });\n        return false;\n      }\n      return true;\n    });\n  }\n\n  handleChange(e) {\n    const buttonValue = e.target.value;\n    const name = e.target.name;\n    let obj = {};\n    switch (name) {\n      case 'ContractToDeployRadio':\n        obj = { ...this.props.reducers.DeployContractForm };\n        dcfRadio.map(key => (obj[key] = false));\n        obj[buttonValue] = true;\n        this.props.updateDCFRadio(obj);\n        break;\n      case 'multisigSigneesCount':\n        obj = { ...this.props.reducers.DeployContractForm.multiSigContract };\n        obj.ownerCount = buttonValue;\n        this.props.updateDeployContractForm(obj);\n        break;\n      case 'multisigSigneesAddresses':\n        obj = { ...this.props.reducers.DeployContractForm.multiSigContract };\n        obj.owners[e.target.getAttribute('id').split('-')[0]] = buttonValue;\n        this.props.updateDeployContractForm(obj);\n        break;\n      case 'multisigSigneesRequired':\n        obj = { ...this.props.reducers.DeployContractForm.multiSigContract };\n        obj.confirmationAddressesRequired = buttonValue;\n        this.props.updateDeployContractForm(obj);\n        break;\n      case 'dailyLimitAmount':\n        obj = { ...this.props.reducers.DeployContractForm.multiSigContract };\n        obj.dailyLimitAmount = buttonValue;\n        this.props.updateDeployContractForm(obj);\n        break;\n      case 'WalletContractName':\n        this.props.updateMainDCF({ name: 'contract-name', value: buttonValue });\n        break;\n      case 'MainOwnerAddress':\n        this.props.updateMainDCF({\n          name: 'MainOwnerAddress',\n          value: buttonValue,\n        });\n        break;\n      case 'importWalletAddress':\n        this.props.updateMainDCF({\n          name: 'importWalletAddress',\n          value: buttonValue,\n        });\n        break;\n      default:\n        break;\n    }\n  }\n\n  renderMultiSigOwners() {\n    const dcf = this.props.reducers.DeployContractForm;\n    const { ownerCount, owners } = dcf.multiSigContract;\n    return (\n      <React.Fragment>\n        {[...Array(ownerCount).keys()].map((num, index) => (\n          <TextField\n            key={shortid.generate()}\n            id={`${index}-multiSigAddress`}\n            onChange={e => this.handleChange(e)}\n            data-name=\"multisigSigneesAddresses\"\n            name=\"multisigSigneesAddresses\"\n            label=\"Owner address\"\n            className=\"dapp-address-input owners\"\n            value={\n              index === 0\n                ? dcf.MainOwnerAddress\n                : typeof owners[index] === 'undefined'\n                ? ''\n                : owners[index]\n            }\n            disabled={index === 0}\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <Identicon\n                    classes=\"dapp-identicon dapp-small\"\n                    title\n                    size=\"small\"\n                    address={\n                      index === 0\n                        ? dcf.MainOwnerAddress\n                        : typeof owners[index] === 'undefined'\n                        ? makeID()\n                        : owners[index]\n                    }\n                  />\n                </InputAdornment>\n              ),\n            }}\n          />\n        ))}\n      </React.Fragment>\n    );\n  }\n\n  validateMultipleAddress(web3, addresses) {\n    const ownerSet = new Set(addresses);\n    const arr = [...ownerSet].map(address => web3.utils.isAddress(address));\n    if (arr.includes(false)) {\n      console.warn('invalid address');\n      this.props.displayGlobalNotification({\n        display: true,\n        type: 'error',\n        msg: 'Invalid address input',\n      });\n      return false;\n    }\n    if (addresses.length !== ownerSet.size) {\n      console.warn('invalid address');\n      this.props.displayGlobalNotification({\n        display: true,\n        type: 'warning',\n        msg:\n          'Invalid address input - you may have used an address more than once',\n      });\n      return false;\n    }\n    return true;\n  }\n\n  createContract(e) {\n    // this.checkIfImportableWallet(e)\n\n    console.log('e in createContract', e);\n    const dcf = this.props.reducers.DeployContractForm;\n    console.log(dcf);\n\n    // TODO: finish up import wallet\n    // if (dcf.importWalletChecked) {\n    //   let bool = this.checkIfImportableWallet(e);\n    //   console.log(bool);\n    //   return;\n    //   // if(!bool) return;\n    // }\n    // return;\n\n    const msContract = dcf.multiSigContract;\n    const web3 = this.props.web3 ? this.props.web3.web3Instance : null;\n    // hardcoded bytecode\n    // same for imported wallet - there is a web3 check to make the\n    // code at the given address is identical to the walletStubABI\n    const code = WalletInterfaceItems.walletStubABI;\n    // hardcoded JSON interface\n    const jsonInterface = WalletInterfaceItems.walletInterface;\n    const contract = new web3.eth.Contract(jsonInterface);\n    if (!web3) {\n      return;\n    }\n\n    const options = {\n      data: code,\n      arguments: '',\n      from: dcf.MainOwnerAddress.toLowerCase(),\n    };\n\n    let valid = false;\n\n    if (dcf.multisigChecked === false) {\n      options.arguments = [\n        [dcf.MainOwnerAddress.toLowerCase()], // owner\n        1, // require signature count,\n        ethereumConfig.dailyLimitDefault.toString(10), // ethereum configs daily limit\n      ];\n      valid = true;\n    } else {\n      options.arguments = [\n        msContract.owners,\n        msContract.confirmationAddressesRequired || 1,\n        msContract.dailyLimitAmount ||\n          ethereumConfig.dailyLimitDefault.toString(10), // ethereum configs daily limit\n      ];\n      valid = this.validateMultipleAddress(web3, msContract.owners);\n    }\n\n    if (!valid) {\n      return;\n    }\n    // TODO: more security checks from observewallets and account_create\n    this.props.history.push('/accounts');\n    contract\n      .deploy({\n        data: code,\n        arguments: options.arguments,\n      })\n      .send({\n        from: dcf.MainOwnerAddress.toLowerCase(),\n        gas: 3000000,\n      })\n      .on('error', err => {\n        console.warn('error deploying contract', err);\n        this.props.displayGlobalNotification({\n          display: true,\n          type: 'error',\n          msg: err.message,\n        });\n      })\n      .on('transactionHash', transactionHash => {\n        console.log('transactionHash', transactionHash);\n        this.props.updatePendingContracts({ name: transactionHash, value: {} });\n      })\n      .on('receipt', receipt => {\n        console.log('reecipt', receipt);\n      })\n      .on('confirmation', (confirmationNumber, receipt) => {\n        receipt.confirmationNumber = confirmationNumber;\n        receipt['contract-name'] = dcf['contract-name'];\n        receipt.address = receipt.contractAddress;\n        receipt.logs = [];\n        receipt.balance = 0;\n        receipt.deployedWalletContract = true;\n        receipt.jsonInterface = JSON.stringify(jsonInterface);\n\n        console.log(receipt);\n\n        this.props.updateWalletContracts({\n          name: receipt.contractAddress,\n          value: receipt,\n        });\n\n        // web3.eth.getBalance(receipt.contractAddress, (err, res) => {\n        //   if(err) {\n        //     this.props.displayGlobalNotification({\n        //       display: true,\n        //       type: 'error',\n        //       msg: 'Error retreiving balance for the added contract',\n        //     });\n        //     return;\n        //   }\n        //   contract.balance = res;\n        //   contract['logs'] = [];\n        //   con[contract['address']] = contract;\n        //   this.props.addObservedContract(con);\n        //   this.props.displayGlobalNotification({\n        //     display: true,\n        //     type: 'success',\n        //     msg: 'Added custom contract',\n        //   });\n        // });\n      })\n      .then(newContractInstance => {\n        console.log('newContractInstance', newContractInstance); // instance with the new contract address\n      });\n  }\n\n  renderSimpleButton() {\n    const { DeployContractForm } = this.props.reducers;\n    return (\n      <React.Fragment>\n        <FormControlLabel\n          value=\"simpleChecked\"\n          control={\n            <Radio checked={DeployContractForm.simpleChecked} color=\"primary\" />\n          }\n          label=\"SINGLE OWNER ACCOUNT\"\n          name=\"accountType\"\n        />\n        <Collapse in={DeployContractForm.simpleChecked}>\n          <div className=\"indented-box\">\n            <span\n              style={{\n                verticalAlign: 'middle',\n                lineHeight: '35px',\n              }}\n            >\n              Note: If your owner account is compromised, your wallet has no\n              protection.\n            </span>\n          </div>\n        </Collapse>\n      </React.Fragment>\n    );\n  }\n\n  // renderOwnerCounter(type, multiline, counter){\n  //   return (\n  //     <TextField\n  //       select\n  //       data-name={type}\n  //       className=\"inline-form\"\n  //       name={type}\n  //       multiline={multiline}\n  //       value={counter}\n  //       onChange={e => this.handleChange(e)}\n  //     >\n  //       {[...Array(10).keys()].map(num => (\n  //         <MenuItem key={num + 1} value={num + 1}>\n  //           {num + 1}\n  //         </MenuItem>\n  //       ))}\n  //     </TextField>\n  //   )\n  // }\n\n  renderMultiSigButton() {\n    const { DeployContractForm } = this.props.reducers;\n    return (\n      <React.Fragment>\n        <FormControlLabel\n          value=\"multisigChecked\"\n          control={\n            <Radio\n              checked={DeployContractForm.multisigChecked}\n              color=\"primary\"\n            />\n          }\n          label=\"MULTISIGNATURE WALLET CONTRACT\"\n          name=\"accountType\"\n        />\n        <Collapse in={DeployContractForm.multisigChecked}>\n          <div className=\"indented-box\">\n            <p\n              style={{\n                verticalAlign: 'middle',\n                lineHeight: '35px',\n              }}\n            >\n              This is a joint account controlled by &nbsp;\n              {/* {this.renderOwnerCounter(\"multisigSigneesCount\", true, DeployContractForm.multiSigContract.ownerCount)} */}\n              <TextField\n                select\n                data-name=\"multisigSigneesCount\"\n                className=\"inline-form\"\n                name=\"multisigSigneesCount\"\n                multiline\n                value={DeployContractForm.multiSigContract.ownerCount}\n                onChange={e => this.handleChange(e)}\n              >\n                {[...Array(10).keys()].map(num => (\n                  <MenuItem key={num + 1} value={num + 1}>\n                    {num + 1}\n                  </MenuItem>\n                ))}\n              </TextField>\n              owners. You can send up to &nbsp;\n              <TextField\n                value={DeployContractForm.multiSigContract.dailyLimitAmount}\n                onChange={e => this.handleChange(e)}\n                type=\"number\"\n                className=\"inline-form\"\n                name=\"dailyLimitAmount\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n              />\n              &nbsp;Ether per day.\n            </p>\n            <p\n              style={{\n                verticalAlign: 'middle',\n                lineHeight: '35px',\n              }}\n            >\n              Any transaction over that daily limit requires the confirmation of\n              &nbsp;\n              {/* {this.renderOwnerCounter(\"multisigSigneesCount\", true, DeployContractForm.multiSigContract.ownerCount)} */}\n              <TextField\n                select\n                data-name=\"multisigSigneesRequired\"\n                className=\"inline-form\"\n                name=\"multisigSigneesRequired\"\n                value={\n                  DeployContractForm.multiSigContract\n                    .confirmationAddressesRequired\n                }\n                onChange={e => this.handleChange(e)}\n              >\n                {[\n                  ...Array(\n                    DeployContractForm.multiSigContract.ownerCount\n                  ).keys(),\n                ].map(num => (\n                  <MenuItem key={num + 1} value={num + 1}>\n                    {num + 1}\n                  </MenuItem>\n                ))}\n              </TextField>\n              &nbsp; owners.\n            </p>\n            <h4>Account owners</h4>\n            {this.renderMultiSigOwners()}\n          </div>\n        </Collapse>\n      </React.Fragment>\n    );\n  }\n\n  renderImportButton() {\n    const { DeployContractForm } = this.props.reducers;\n    return (\n      <React.Fragment>\n        <FormControlLabel\n          value=\"importWalletChecked\"\n          control={\n            <Radio\n              checked={DeployContractForm.importWalletChecked}\n              color=\"primary\"\n            />\n          }\n          label=\"IMPORT WALLET\"\n          name=\"accountType\"\n        />\n        <Collapse in={DeployContractForm.importWalletChecked}>\n          <div className=\"indented-box\">\n            <br />\n            <div className=\"dapp-address-input\">\n              <input\n                type=\"text\"\n                placeholder=\"Wallet address\"\n                className=\"import\"\n                name=\"importWalletAddress\"\n                value={\n                  DeployContractForm.importWalletAddress !== ''\n                    ? DeployContractForm.importWalletAddress\n                    : ''\n                }\n                onChange={e => this.handleChange(e)}\n              />\n            </div>\n            <p className=\"invalid\" />\n          </div>\n        </Collapse>\n      </React.Fragment>\n    );\n  }\n\n  renderCreateButton() {\n    return (\n      <React.Fragment>\n        <button\n          className=\"dapp-block-button\"\n          type=\"submit\"\n          onClick={e => this.createContract(e)}\n        >\n          Create\n        </button>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    const { classes } = this.props;\n    const { DeployContractForm } = this.props.reducers;\n    const dcf = this.props.reducers.DeployContractForm;\n    return (\n      <React.Fragment>\n        <FormControl component=\"fieldset\" className={classes.formControl}>\n          <Title />\n          <input\n            type=\"text\"\n            name=\"WalletContractName\"\n            placeholder=\"Wallet contract name\"\n            onChange={e => this.handleChange(e)}\n            autoFocus\n          />\n          <SelectOwner />\n          <div className={classes.radioRoot}>\n            <FormLabel component=\"legend\">Wallet Contract Type</FormLabel>\n            <RadioGroup\n              aria-label=\"ContractToDeployRadio\"\n              name=\"ContractToDeployRadio\"\n              className={classes.group}\n              value={this.state.value}\n              onChange={e => this.handleChange(e)}\n            >\n              <FormControlLabel\n                value=\"simpleChecked\"\n                control={\n                  <Radio\n                    checked={DeployContractForm.simpleChecked}\n                    color=\"primary\"\n                  />\n                }\n                label=\"SINGLE OWNER ACCOUNT\"\n                name=\"accountType\"\n              />\n              <Collapse in={DeployContractForm.simpleChecked}>\n                <div className=\"indented-box\">\n                  <span\n                    style={{\n                      verticalAlign: 'middle',\n                      lineHeight: '35px',\n                    }}\n                  >\n                    Note: If your owner account is compromised, your wallet has\n                    no protection.\n                  </span>\n                </div>\n              </Collapse>\n              {this.renderMultiSigButton()}\n              {this.renderImportButton()}\n            </RadioGroup>\n            {this.renderCreateButton()}\n          </div>\n        </FormControl>\n      </React.Fragment>\n    );\n  }\n}\n\nNewWalletContract.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = state => {\n  return state;\n};\n\nexport default compose(\n  withStyles(styles, { name: 'NewWalletContract' }),\n  connect(\n    mapStateToProps,\n    { ...Actions }\n  )\n)(NewWalletContract);\n","import React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\n\n// views\nimport AccountView from './Account';\nimport SingleAccountView from './SingleAccountView';\nimport SingleContractView from './SingleContractView';\nimport ContractsView from './Contracts';\nimport SendContractForm from './Send';\nimport NewWalletContract from './NewWalletContract';\n\nclass ViewContainer extends Component {\n  render() {\n    return (\n      <div className=\"dapp-flex-content\">\n        <main className=\"dapp-content\">\n          <Route exact path=\"/\" component={AccountView} />\n          <Route exact path=\"/accounts\" component={AccountView} />\n          <Route path=\"/account/*\" component={SingleAccountView} />\n          <Route exact path=\"/wallet/new\" component={NewWalletContract} />\n          <Route path=\"/contract/*\" component={SingleContractView} />\n          <Route path=\"/send*\" component={SendContractForm} />\n          <Route exact path=\"/contracts\" component={ContractsView} />\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default ViewContainer;\n","import React, { Component } from 'react';\n// import { connect } from 'react-redux';\n\nclass TestInputItem extends Component {\n  renderInputType(f) {\n    return (\n      <React.Fragment>\n        <h3>{f.title}</h3>\n        <div className={f.divClass}>\n          <input\n            type={f.type}\n            name={f.name}\n            placeholder={f.placeholder}\n            className={f.className}\n            onKeyUp={e => this.props.onKeyUp(e)}\n          />\n        </div>\n      </React.Fragment>\n    );\n  }\n\n  renderTextAreaType(f) {\n    if (!f.cols) f.cols = 30;\n    if (!f.rows) f.rows = 10;\n    return (\n      <React.Fragment>\n        <h3>{f.title}</h3>\n        <div className={f.divClass}>\n          <input\n            type={f.type}\n            name={f.name}\n            placeholder={f.placeholder}\n            className={f.className}\n            onKeyUp={e => this.props.onKeyUp(e)}\n          />\n        </div>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    const field = this.props.field;\n    return (\n      <React.Fragment>\n        {field.editor === 'textarea'\n          ? this.renderTextAreaType(field)\n          : this.renderInputType(field)}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default TestInputItem;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\n// import InputItem from '../elements/InputItem.jsx';\nimport TestInputItem from '../elements/TestInputItem';\nimport * as Actions from '../../actions/actions';\nimport {\n  updateContractToWatch,\n  cancelContractToWatch,\n  closeModal,\n  addObservedContract,\n  displayGlobalNotification,\n} from '../../actions/actions.js';\n\nconst listInputs = [\n  {\n    title: 'Contract Address',\n    divClass: 'dapp-address-input',\n    editor: 'input',\n    type: 'text',\n    name: 'address',\n    placeholder: '0x000000',\n    className: 'contract-address',\n  },\n  {\n    title: 'Contract name',\n    divClass: 'dapp-contract-name-input',\n    editor: 'input',\n    type: 'string',\n    name: 'contract-name',\n    placeholder: 'Name this contract',\n    className: 'name',\n  },\n  {\n    title: 'JSON Interface',\n    divClass: 'dapp-json-interface-input',\n    editor: 'textarea',\n    type: 'text',\n    name: 'jsonInterface',\n    placeholder:\n      '[{type: &quot;constructor&quot;, name: &quot;MyContract&quot;, &quot;inputs&quot;:[{\"name&quot;:&quot;_param1&quot;, &quot;type&quot;:&quot;address&quot;}]}, {...}]',\n    className: 'jsonInterface',\n    cols: '30',\n    rows: '10',\n  },\n];\n\nclass WatchItem extends Component {\n  constructor(props) {\n    super(props);\n    this.handleOnKeyUp = this.handleOnKeyUp.bind(this);\n    this.cancelFunction = this.cancelFunction.bind(this);\n    this.submitFunction = this.submitFunction.bind(this);\n  }\n\n  shouldComponentUpdate(prevProps, prevState) {\n    if (this.props.display !== prevProps.display) {\n      return true;\n    }\n    return false;\n  }\n\n  handleOnKeyUp(e) {\n    // TODO:validate inputs here\n    this.props.updateContractToWatch({\n      name: e.target.getAttribute('name'),\n      value: e.target.value,\n    });\n  }\n\n  cancelFunction(e) {\n    this.props.cancelContractToWatch(); // TODO:reset data values in inputs\n    this.props.closeModal('displayWatchContract');\n  }\n\n  submitFunction(e) {\n    let web3;\n    const contract = this.props.reducers.ContractToWatch;\n    console.log(contract);\n    if (this.props.web3.web3Instance) {\n      web3 = this.props.web3.web3Instance;\n      const con = {};\n      try {\n        web3.eth.getBalance(contract.address, (err, res) => {\n          if (err) console.warn(err);\n          console.log('res received', res);\n          contract.balance = res;\n          contract.logs = [];\n          contract.contractAddress = contract.address;\n          con[contract.address] = contract;\n\n          const {\n            ContractsPendingConfirmations,\n            WalletContracts,\n          } = this.props.reducers;\n          const deployedWalletContracts = Object.assign(\n            {},\n            ContractsPendingConfirmations,\n            WalletContracts\n          );\n\n          console.log('here in watch COntracts', deployedWalletContracts);\n\n          contract.deployedWalletContract = Object.keys(\n            deployedWalletContracts\n          ).includes(contract.address);\n\n          this.props.addObservedContract(con);\n          this.props.displayGlobalNotification({\n            display: true,\n            type: 'success',\n            msg: 'Added custom contract',\n          });\n        });\n      } catch (err) {\n        console.warn(err);\n        this.props.displayGlobalNotification({\n          display: true,\n          type: 'error',\n          msg: 'Error retreiving balance for the added contract',\n        });\n      }\n    }\n    this.props.closeModal('displayWatchContract');\n  }\n\n  renderInputs() {\n    return (\n      <React.Fragment>\n        <h1>Watch contract</h1>\n        {listInputs.map((field, i) => (\n          <TestInputItem\n            key={`contract-field-${i}`}\n            field={field}\n            onKeyUp={e => this.handleOnKeyUp(e)}\n          />\n        ))}\n      </React.Fragment>\n    );\n  }\n\n  renderButtons() {\n    return (\n      <div className=\"dapp-modal-buttons\">\n        <button className=\"cancel\" onClick={e => this.cancelFunction(e)}>\n          Cancel\n        </button>\n        <button\n          className=\"ok dapp-primary-button\"\n          onClick={e => this.submitFunction(e)}\n        >\n          OK\n        </button>\n      </div>\n    );\n  }\n\n  render() {\n    let divStyle;\n    if (!this.props.display) divStyle = { display: 'none' };\n    return (\n      <div className={this.props.display} style={divStyle}>\n        <section className=\"dapp-modal-container modals-add-custom-contract\">\n          {this.renderInputs()}\n          {this.renderButtons()}\n        </section>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  // return {modals: state.modals}\n  return state;\n};\n\nexport default connect(\n  mapStateToProps,\n  {\n    updateContractToWatch,\n    cancelContractToWatch,\n    closeModal,\n    addObservedContract,\n    displayGlobalNotification,\n  }\n)(WatchItem);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { tokenInterface } from '../../constants/TokenInterfaceConstant';\nimport TokenBox from '../elements/TokenBox';\nimport TestInputItem from '../elements/TestInputItem';\nimport * as Actions from '../../actions/actions';\n\nclass WatchToken extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = Object.assign({}, this.props, {\n      address: '',\n      name: '',\n      symbol: '',\n      decimals: '',\n      balance: '',\n    });\n\n    this.invokeContractMethod = this.invokeContractMethod.bind(this);\n    this.getTokenContractInfo = this.getTokenContractInfo.bind(this);\n    this.handleOnKeyUp = this.handleOnKeyUp.bind(this);\n    this.cancelFunction = this.cancelFunction.bind(this);\n    this.submitFunction = this.submitFunction.bind(this);\n  }\n\n  invokeContractMethod(TokenContract, variableMethodName) {\n    try {\n      TokenContract.methods[variableMethodName]()\n        .call()\n        .then(result => {\n          console.log('result', result);\n          this.setState({ [variableMethodName]: result });\n          this.props.updateTokenToWatch({\n            name: variableMethodName,\n            value: result,\n          });\n        });\n    } catch (err) {\n      console.warn('Err :', err);\n      this.props.displayGlobalNotification({\n        display: true,\n        type: 'error',\n        msg: err.message,\n      });\n    }\n  }\n\n  getTokenContractInfo(address) {\n    const web3 = this.props.web3.web3Instance;\n    const TokenContract = new web3.eth.Contract(tokenInterface);\n    TokenContract.options.address = address;\n    this.setState({ address });\n    this.props.updateTokenToWatch({\n      name: 'address',\n      value: address,\n    });\n    this.invokeContractMethod(TokenContract, 'symbol');\n    this.invokeContractMethod(TokenContract, 'name');\n    this.invokeContractMethod(TokenContract, 'decimals');\n    this.invokeContractMethod(TokenContract, 'totalSupply');\n  }\n\n  handleOnKeyUp(e) {\n    // TODO: this is getting called twice when using copy/paste with keyboard shortcuts\n\n    // TODO:validate inputs here\n\n    const name = e.target.getAttribute('name');\n    const value = e.target.value;\n\n    const web3 = this.props.web3.web3Instance;\n    // TODO: checks coin symbol against MEW list?\n    // var l = e.currentTarget.value.length;\n    // if (!tokenAddress && l > 2 && l < 6) {\n    //   e.currentTarget.value += '.thetoken.eth';\n    //   e.currentTarget.setSelectionRange(l, l + 13);\n    // }\n\n    // if (\n    //   !tokenAddress ||\n    //   (template.data &&\n    //     template.data.address &&\n    //     template.data.address == tokenAddress)\n    // )\n    //   return;\n\n    if (name === 'address' && value.length === 42) {\n      const isAddress = web3.utils.isAddress(value);\n      const toCheckSum = web3.utils.toChecksumAddress(value);\n      const isCheckSummed = web3.utils.checkAddressChecksum(toCheckSum);\n      if (isAddress && isCheckSummed) {\n        this.getTokenContractInfo(value);\n        return;\n      }\n    }\n\n    this.setState({ [name]: value });\n    this.props.updateTokenToWatch({\n      name,\n      value: e.target.value,\n    });\n  }\n\n  cancelFunction(e) {\n    this.props.cancelTokenToWatch(); // TODO:reset data values in inputs\n    this.props.closeModal('displayWatchToken');\n  }\n\n  submitFunction(e) {\n    let web3;\n    const token = this.props.reducers.TokenToWatch;\n    const address = token.address;\n    if (this.props.web3.web3Instance) {\n      this.props.addObservedToken({\n        address: token.address,\n        value: token,\n      });\n      this.props.displayGlobalNotification({\n        display: true,\n        type: 'success',\n        msg: 'Added custom token',\n      });\n    } else {\n      // TODO:trigger global notification here\n    }\n    this.props.closeModal('displayWatchToken');\n  }\n\n  render() {\n    let divStyle;\n    if (!this.props.display) divStyle = { display: 'none' };\n    const GeoPattern = require('geopattern');\n    const pattern = GeoPattern.generate('0x000', { color: '#CCC6C6' });\n    const iconStyle = { backgroundImage: pattern.toDataUrl() };\n    const TokenToWatch = this.props.reducers.TokenToWatch;\n\n    return (\n      <div className={this.props.display} style={divStyle}>\n        <section className=\"dapp-modal-container modals-add-token\">\n          <h1>Add Token</h1>\n          <h3>Token Contract Address</h3>\n          <div className=\"dapp-address-input\">\n            <input\n              type=\"text\"\n              name=\"address\"\n              placeholder=\"0x000000\"\n              className=\"token-address\"\n              onChange={e => this.handleOnKeyUp(e)}\n              value={this.state.address}\n            />\n          </div>\n          <h3>Token name</h3>\n          <div className=\"dapp-token-name-input\">\n            <input\n              type=\"string\"\n              name=\"name\"\n              placeholder=\"Token name\"\n              className=\"name\"\n              onChange={e => this.handleOnKeyUp(e)}\n              value={this.state.name}\n            />\n          </div>\n          <h3>Token symbol</h3>\n          <div className=\"dapp-token-symbol-input\">\n            <input\n              type=\"string\"\n              name=\"symbol\"\n              placeholder=\"Token symbol\"\n              className=\"symbol\"\n              onChange={e => this.handleOnKeyUp(e)}\n              value={this.state.symbol}\n            />\n          </div>\n          <h3>Decimals places of smallest unit</h3>\n          <input\n            type=\"number\"\n            min=\"0\"\n            step=\"1\"\n            name=\"decimals\"\n            placeholder=\"2\"\n            className=\"decimals\"\n            onChange={e => this.handleOnKeyUp(e)}\n            value={this.state.decimals}\n          />\n          <br />\n          <h3>Preview</h3>\n          <TokenBox key={TokenToWatch.address} token={TokenToWatch} />\n          <div className=\"dapp-modal-buttons\">\n            <button className=\"cancel\" onClick={() => this.cancelFunction()}>\n              Cancel\n            </button>\n            <button\n              className=\"ok dapp-primary-button\"\n              onClick={() => this.submitFunction()}\n            >\n              OK\n            </button>\n          </div>\n        </section>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return state;\n};\n\nexport default connect(\n  mapStateToProps,\n  { ...Actions }\n)(WatchToken);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { closeModal, deleteToken } from '../../actions/actions';\n\nconst Name = props => {\n  return (\n    <p>\n      Do you want to remove the token &nbps;\n      <strong>{props.name}</strong> from your list?\n    </p>\n  );\n};\n\nexport class DeleteToken extends Component {\n  constructor(props) {\n    super(props);\n    this.cancelFunction = this.cancelFunction.bind(this);\n    this.deleteToken = this.deleteToken.bind(this);\n  }\n\n  shouldComponentUpdate(prevProps, prevState) {\n    if (this.props.display !== prevProps.display) {\n      return true;\n    }\n    return false;\n  }\n\n  cancelFunction(e) {\n    this.props.closeModal('displayDeleteToken');\n  }\n\n  deleteToken(e) {\n    this.props.deleteToken(this.props.token.address);\n    this.props.closeModal('displayDeleteToken');\n  }\n\n  renderButtons() {\n    return (\n      <div className=\"dapp-modal-buttons\">\n        <button className=\"cancel\" onClick={e => this.cancelFunction(e)}>\n          Cancel\n        </button>\n        <button\n          className=\"ok dapp-primary-button\"\n          onClick={e => this.deleteToken(e)}\n        >\n          OK\n        </button>\n      </div>\n    );\n  }\n\n  render() {\n    let divStyle;\n    if (!this.props.display) divStyle = { display: 'none' };\n    return (\n      <div className={this.props.display} style={divStyle}>\n        <section className=\"dapp-modal-container\" style={divStyle}>\n          <Name name={this.props.token.name} />\n          {this.renderButtons()}\n        </section>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return state;\n};\n\nexport default connect(\n  mapStateToProps,\n  { closeModal, deleteToken }\n)(DeleteToken);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { withRouter } from 'react-router';\n\nimport { Identicon } from 'ethereum-react-components';\nimport Web3 from 'web3';\nimport SecurityIcon from '../elements/SecurityIcon';\nimport * as Actions from '../../actions/actions';\n\nimport { combineWallets, sortByBalance } from '../../utils/helperFunctions';\n\nimport { tokenInterface } from '../../constants/TokenInterfaceConstant';\n\nconst newWeb3 = new Web3();\n\nexport const Title = props => {\n  let value;\n  if (props.tx.value) value = newWeb3.utils.fromWei(props.tx.value, 'ETHER');\n  return (\n    <h1>\n      Send\n      <br />\n      {value} ETHER\n    </h1>\n  );\n};\n\nexport const TransactionName = info => {\n  return (\n    <p>\n      <span className=\"address dapp-shorten-text not-ens-name\">\n        <Identicon\n          classes=\"dapp-identicon dapp-small\"\n          title\n          size=\"small\"\n          address={info.from}\n        />\n        {info.from}\n      </span>\n    </p>\n  );\n};\n\nexport const GasInfo = info => {\n  return (\n    <React.Fragment>\n      <small>+ Estimated fee</small>\n      {info.estimatedGas} Wei\n      <br />\n      <small className=\"gas-price\">\n        Gas price {info.gasPrice} gWei\n        <br />\n        Estimated required gas {info.estimatedGas}\n        <br />\n      </small>\n    </React.Fragment>\n  );\n};\n\nexport class SendTransactionModal extends Component {\n  constructor(props) {\n    super(props);\n\n    // this.state = {\n    //   userEnteredGas: '',\n    // };\n\n    this.cancelFunction = this.cancelFunction.bind(this);\n    this.submitFunction = this.submitFunction.bind(this);\n    this.sendTransaction = this.sendTransaction.bind(this);\n    this.sendEtherTransaction = this.sendEtherTransaction.bind(this);\n    this.sendTokenTransaction = this.sendTokenTransaction.bind(this);\n    this.updateTokenBalances = this.updateTokenBalances.bind(this);\n    this.returnAccountName = this.returnAccountName.bind(this);\n  }\n\n  shouldComponentUpdate(prevProps, prevState) {\n    if (this.props.display !== prevProps.display) {\n      console.log('this.props.display', this.props.display);\n      console.log('prevProps.display', prevProps.display);\n      return true;\n    }\n    if (this.props.reducers.TransactionToSend !== prevProps.TransactionToSend) {\n      // console.log(\n      //   'this.props.reducers.TransactionToSend',\n      //   this.props.reducers.TransactionToSend\n      // );\n      // console.log(\n      //   'prevProps.reducers.TransactionToSend',\n      //   prevProps.reducers.TransactionToSend\n      // );\n      return true;\n    }\n    return false;\n  }\n\n  componentWillUnmount() {\n    console.log('in will unmount');\n    this.props.clearTransactionToSend();\n  }\n\n  cancelFunction(e) {\n    this.props.closeModal('displaySendTransaction');\n  }\n\n  sendEtherTransaction(e) {\n    const web3 = this.props.web3.web3Instance;\n    const tx = this.props.reducers.TransactionToSend;\n\n    const date = new Date();\n\n    const BN = web3.utils.BN;\n    const amount = new BN(tx.value);\n    // let gasPrice = new BN(tx.gasPrice.toString());\n    const gasPrice = tx.gasPrice;\n    const maxGas = new BN('21000');\n\n    const { Wallets, WalletContracts } = this.props.reducers;\n    console.log(Wallets);\n    console.log(WalletContracts);\n    const combinedWallets = Object.keys(\n      combineWallets(Wallets, WalletContracts)\n    ).map(address => address);\n\n    console.log(combinedWallets);\n\n    let transactionType;\n    if (combinedWallets.includes(tx.to) && combinedWallets.includes(tx.from)) {\n      transactionType = 'Transfer between accounts';\n    }\n\n    web3.eth\n      .sendTransaction({\n        from: tx.from,\n        to: tx.to,\n        value: amount,\n        gasPrice,\n      })\n      .on('transactionHash', transactionHash => {\n        this.props.addTransaction({\n          hash: transactionHash,\n          value: {\n            ...tx,\n            dateSent: date,\n            confirmationNumber: 'Pending',\n            transactionHash,\n            transactionType,\n          },\n        });\n        this.props.displayGlobalNotification({\n          display: true,\n          type: 'warning',\n          msg: 'Your transaction has been submitted and is currently pending',\n        });\n        // this.props.clearTransactionToSend();\n        this.props.history.push('/accounts');\n      })\n      .on('receipt', receipt => {})\n      .on('confirmation', (confirmationNumber, receipt) => {\n        const cn = confirmationNumber;\n        let msg;\n        if (cn === 0 || cn === 12) {\n          cn === 0\n            ? (msg =\n                'Success! Your transaction has been confirmed. Please allow for 12 confirmations')\n            : (msg = 'Your transaction has been confirmed 12 times!');\n          this.props.displayGlobalNotification({\n            display: true,\n            type: 'success',\n            msg,\n          });\n        }\n      })\n      .on('error', err => {\n        this.props.displayGlobalNotification({\n          display: true,\n          type: 'error',\n          msg: err.message,\n          duration: 5,\n        });\n        console.warn(err);\n      });\n  }\n\n  updateTokenBalances(TokenContract) {\n    console.log('yes inside updateTokenBalances');\n\n    // Or should I just subscribe to Transfer Event?!\n\n    // TODO: need to use data field with the following?\n    // 0xa9059cbb00000000000000000000000065b42142606a9d46d05ea5205ad4b610a9130e92000000000000000000000000000000000000000000000001158e460913d00000\n\n    const addresses = this.props.reducers.Wallets;\n    const walletContracts = this.props.reducers.walletContracts;\n    const wallets = Object.keys(Object.assign({}, addresses, walletContracts));\n\n    // TokenContract.methods['balanceOf'](tx.to)\n    // TokenContract.methods['balanceOf'](tx.from)\n  }\n\n  sendTokenTransaction(e) {\n    const tx = this.props.reducers.TransactionToSend;\n    const token = tx.tokenToSend;\n\n    const web3 = this.props.web3.web3Instance;\n    const TokenContract = new web3.eth.Contract(tokenInterface, {\n      from: tx.from,\n    });\n\n    TokenContract.options.address = token.address;\n\n    const transactionType = 'Token sent';\n\n    // TODO: update balances on successful send\n\n    try {\n      // TODO need this?\n\n      // .encodeABI();\n\n      TokenContract.methods\n        .transfer(tx.to, tx.tokenAmount)\n        .call()\n        .then(res => {\n          // yup returns nothing\n\n          console.log('Res', res);\n\n          // TODO: add to transaction list\n          // name the category is {token name} - Token transfer\n\n          this.updateTokenBalances(TokenContract);\n          this.props.history.push('/accounts');\n        });\n    } catch (err) {\n      console.warn(err);\n      this.props.displayGlobalNotification({\n        display: true,\n        type: 'error',\n        msg: 'There was an error processing your token transaction',\n      });\n    }\n  }\n\n  sendTransaction(e) {\n    // TODO: reset data values in inputs\n    e.preventDefault();\n    // let web3 = this.props.web3.web3Instance;\n    // let date = new Date();\n    const tx = this.props.reducers.TransactionToSend;\n    !tx.sendToken ? this.sendEtherTransaction(e) : this.sendTokenTransaction(e);\n    // console.log(tx);\n  }\n\n  submitFunction(e) {\n    this.sendTransaction(e);\n    this.props.closeModal('displaySendTransaction');\n  }\n\n  returnAccountName(address) {\n    // let transaction = this.props.reducers.TransactionToSend;\n    const wallets = this.props.reducers.Wallets;\n    const walletArray = Object.keys(wallets).map(key => key);\n    const walletContracts = this.props.reducers.WalletContracts;\n    const walletContractArray = Object.keys(walletContracts).map(key => key);\n    const observedContracts = this.props.reducers.ObservedContracts;\n    const observedContractsArray = Object.keys(observedContracts).map(\n      key => key\n    );\n    const observedTokens = this.props.reducers.ObservedTokens;\n    const observedTokensArray = Object.keys(observedTokens).map(key => key);\n    let name;\n    if (walletArray.includes(address)) {\n      name = wallets[address].name;\n      // name || `Account ${wallets[address].number}`;\n      return name;\n    }\n    if (walletContractArray.includes(address)) {\n      return walletContracts[address]['contract-name'];\n    }\n    if (observedContractsArray.includes(address)) {\n      return observedContracts[address]['contract-name'];\n    }\n    if (observedTokensArray.includes(address)) {\n      return observedTokens[address].name;\n    }\n    return name;\n  }\n\n  render() {\n    let divStyle;\n    if (!this.props.display) divStyle = { display: 'none' };\n    const transaction = this.props.reducers.TransactionToSend;\n    const fromName = this.returnAccountName(transaction.from);\n    const toName = this.returnAccountName(transaction.to);\n\n    return (\n      <div className={this.props.display} style={divStyle}>\n        <section className=\"dapp-modal-container send-transaction-info\">\n          <Title tx={transaction} />\n          {/* <TransactionName info={transaction} /> */}\n          <p>\n            <span className=\"address dapp-shorten-text not-ens-name\">\n              {/*\n              <SecurityIcon\n                type=\"accountRoute\"\n                classes={'dapp-identicon dapp-tiny'}\n                hash={transaction.from || ''}\n              />\n              */}\n              <Identicon\n                classes=\"dapp-identicon dapp-tiny\"\n                title\n                size=\"tiny\"\n                address={transaction.from}\n              />\n              {/* {transaction.from} */}\n              {fromName || transaction.from}\n            </span>\n          </p>\n          <i className=\"icon-arrow-down\" />\n          {/* <TransactionName info={transaction} /> */}\n          <p>\n            <span className=\"address dapp-shorten-text not-ens-name\">\n              {/* }\n              <SecurityIcon\n                type=\"transactionHref\"\n                classes={'dapp-identicon dapp-tiny'}\n                hash={transaction.to || ''}\n              />\n              */}\n              <Identicon\n                classes=\"dapp-identicon dapp-tiny\"\n                title\n                size=\"tiny\"\n                address={transaction.to}\n              />\n              {toName || transaction.to}\n            </span>\n          </p>\n          <hr />\n          <p className=\"tx-info\">\n            <small>+ Estimated fee</small>\n            {transaction.estimatedGas} Wei\n            <br />\n            <small className=\"gas-price\">\n              Gas price {transaction.gasPrice} gWei\n              <br />\n              Estimated required gas {transaction.estimatedGas}\n              <br />\n            </small>\n            {/* <GasInfo/> */}\n            <small>\n              Provide gas:\n              <input type=\"number\" min=\"21000\" className=\"gas dapp-tiny\" />\n            </small>\n          </p>\n          <div className=\"dapp-modal-buttons\">\n            <button className=\"cancel\" onClick={() => this.cancelFunction()}>\n              Cancel\n            </button>\n            <button\n              className=\"ok dapp-primary-button\"\n              onClick={e => this.submitFunction(e)}\n            >\n              OK\n            </button>\n          </div>\n        </section>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return state;\n};\n\nexport default connect(\n  mapStateToProps,\n  { ...Actions }\n)(withRouter(SendTransactionModal));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { EthAddress, Identicon } from 'ethereum-react-components';\nimport Web3 from 'web3';\nimport * as Utils from '../../utils/utils';\nimport * as Actions from '../../actions/actions';\n\nconst web3 = new Web3();\n\nexport const Header = props => {\n  const nw = props.network;\n  const hash = props.txHash;\n  return (\n    <h1>\n      Transaction\n      <a\n        href={`http://${nw} .etherscan.io/tx/${hash}`}\n        target=\"_blank\"\n        style={{ fontSize: '0.4em' }}\n        rel=\"noopener noreferrer\"\n      >\n        {hash}\n      </a>\n    </h1>\n  );\n};\n\nexport const DateRow = props => {\n  const today = new Date();\n  const txDate = new Date(props.tx.dateSent);\n  const timeDiff = Math.abs(txDate.getTime() - today.getTime());\n  const diffDays = Math.ceil(timeDiff / (1000 * 3600 * 24));\n  return (\n    <p>\n      {Utils.getMonthName(props.tx.dateSent)}\n      {Utils.getDate(props.tx.dateSent)}\n      <br />\n      <small>{diffDays} day(s) ago</small>\n    </p>\n  );\n};\n\nexport const Fee = props => {\n  // TODO: from wei or from gWei\n  const fee = web3.utils.fromWei(props.gasUsed.toString(), 'ETHER');\n  return (\n    <tr>\n      <td>Fee paid</td>\n      <td>{fee} &nbsp; ETHER</td>\n    </tr>\n  );\n};\n\nexport const GasStat = props => {\n  // TODO: from wei or from gWei\n  let displayValue;\n  if (props.title === 'Fee paid') {\n    displayValue = web3.utils.fromWei(props.gasAmount.toString(), 'ETHER');\n  } else if (props.title === 'Gas used') {\n    displayValue = props.gasAmount;\n  } else if (props.title === 'Gas price') {\n    displayValue = props.gasAmount;\n  }\n  return (\n    <tr>\n      <td>{props.title}</td>\n      <td>\n        {displayValue} &nbsp; {props.text}\n      </td>\n    </tr>\n  );\n};\n\nexport const BlockInfo = props => {\n  return (\n    <tr>\n      <td>Block</td>\n      <td>\n        {props.blockNumber}\n        <br />\n        <EthAddress short classes=\"\" address={props.blockHash} />\n      </td>\n    </tr>\n  );\n};\n\nexport class TransactionInfo extends Component {\n  constructor(props) {\n    super(props);\n    this.updateToTransaction = this.updateToTransaction.bind(this);\n    this.handleRoute = this.handleRoute.bind(this);\n  }\n\n  shouldComponentUpdate(prevProps, prevState) {\n    if (\n      this.props.transaction !== prevProps.transaction ||\n      this.props.display !== prevProps.display\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  handleClickOutside(evt) {\n    if (!this.props.display) return;\n    this.props.closeModal('displayTransaction');\n  }\n\n  handleRoute(e) {\n    this.updateToTransaction(e);\n    this.closeModal(e);\n  }\n\n  closeModal(e) {\n    e.preventDefault();\n    if (e.target.getAttribute('id') === 'viewTransaction') {\n      this.props.closeModal('displayTransaction');\n    }\n  }\n\n  updateToTransaction(e) {\n    e.stopPropagation();\n    console.warn('todo: moved from security icon and need to pudate');\n    // this.props.updateTransactionToSend({\n    //   name: 'to',\n    //   value: props.hash,\n    // });\n  }\n\n  renderSentAmount() {\n    const tx = this.props.transaction;\n    const amount = web3.utils.fromWei(tx.value.toString(), 'ETHER');\n    return (\n      <tr>\n        <td>Amount</td>\n        <td>{amount} &nbsp; ETHER</td>\n      </tr>\n    );\n  }\n\n  renderAddress(tx, direction) {\n    // TODO: conditional update transaction inside handleRoute\n    return (\n      <tr>\n        <td>{direction}</td>\n        <td>\n          <span className=\"address dapp-shorten-text not-ens-name\">\n            <Identicon\n              classes=\"dapp-identicon dapp-tiny\"\n              title\n              size=\"tiny\"\n              address={tx[direction.toLowerCase()]}\n            />\n            <Link\n              to={{ pathname: `/send-from/${tx[direction.toLowerCase()]}` }}\n              title={tx[direction.toLowerCase()]}\n              onClick={this.handleRoute}\n            >\n              {tx[direction.toLowerCase()]}\n            </Link>\n          </span>\n        </td>\n      </tr>\n    );\n  }\n\n  render() {\n    // TODO: gas paid versus fee\n\n    let divStyle;\n    if (!this.props.display) divStyle = { display: 'none' };\n    const tx = this.props.transaction;\n    console.log(this.props);\n    console.log(this.props.transaction);\n\n    return (\n      <div\n        className={this.props.display}\n        style={divStyle}\n        onClick={e => this.closeModal(e)}\n        id=\"viewTransaction\"\n      >\n        <section className=\"dapp-modal-container transaction-info\">\n          <Header\n            network={this.props.reducers.network}\n            txHash={tx.transactionHash}\n          />\n          <DateRow tx={tx} />\n          <table className=\"dapp-zebra\">\n            <tbody>\n              {this.renderSentAmount()}\n              {this.renderAddress(tx, 'From')}\n              {this.renderAddress(tx, 'To')}\n              <GasStat title=\"Fee paid\" text=\"ETHER\" gasAmount={tx.gasUsed} />\n              <GasStat title=\"Gas used\" text=\"\" gasAmount={tx.gasUsed} />\n              <GasStat\n                title=\"Gas price\"\n                text=\"ETHER PER MILLION GAS\"\n                gasAmount={tx.gasPrice}\n              />\n              <BlockInfo\n                blockNumber={tx.blockNumber}\n                blockHash={tx.blockHash}\n              />\n            </tbody>\n          </table>\n        </section>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return state;\n};\n\nexport default connect(\n  mapStateToProps,\n  { ...Actions }\n)(TransactionInfo);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as Actions from '../../actions/actions';\n\nclass QRCode extends Component {\n  shouldComponentUpdate(prevProps, prevState) {\n    if (\n      this.props.display !== prevProps.display ||\n      this.props.hash !== prevProps.hash\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  closeModal(e) {\n    e.preventDefault();\n    if (e.target.getAttribute('id') === 'qrCode') {\n      this.props.closeModal('displayQRCode');\n    }\n  }\n\n  render() {\n    const QRCode = require('qrcode.react');\n    let divStyle;\n    if (!this.props.display) divStyle = { display: 'none' };\n    return (\n      <div\n        className={this.props.display}\n        style={divStyle}\n        onClick={e => this.closeModal(e)}\n        id=\"qrCode\"\n      >\n        <section className=\"dapp-modal-container\">\n          <p />\n          {/* <p> */}\n          <div id=\"qrcode\">\n            <QRCode value={this.props.hash} />\n          </div>\n          {/* </p> */}\n          <p />\n          <p> Point a compatible mobile app to this code </p>\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  { ...Actions }\n)(QRCode);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Identicon } from 'ethereum-react-components';\nimport * as Actions from '../../actions/actions';\nimport * as Utils from '../../utils/utils';\n\nexport const EventName = event => {\n  return (\n    <tr>\n      <td>Event name</td>\n      <td>{event.event}</td>\n    </tr>\n  );\n};\n\nexport const Outputs = event => {\n  return (\n    <tr>\n      <td>Return Values</td>\n      <td style={{ wordBreak: 'break-word' }}>\n        from: <strong>{event.returnValues.from}</strong>\n        <br />\n        to: <strong>{event.returnValues.to}</strong>\n        <br />\n        tokenId: <strong>{event.returnValues.tokenId}</strong>\n        <br />\n      </td>\n    </tr>\n  );\n};\n\nexport const Origin = event => {\n  return (\n    <tr>\n      <td>Origin Contract</td>\n      <td>\n        <Identicon\n          classes=\"dapp-identicon dapp-tiny\"\n          title\n          size=\"tiny\"\n          address={event.originalContractAddress}\n        />\n        {event.originalContractName}\n      </td>\n    </tr>\n  );\n};\n\nexport class EventInfo extends Component {\n  constructor() {\n    super();\n    this.closeModal = this.closeModal.bind(this);\n  }\n\n  shouldComponentUpdate(prevProps, prevState) {\n    if (\n      this.props.event !== prevProps.event ||\n      this.props.display !== prevProps.display\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  closeModal(e) {\n    e.preventDefault();\n    if (e.target.getAttribute('id') === 'viewEventInfo') {\n      this.props.closeModal('displayEventInfo');\n    }\n  }\n\n  render() {\n    let divStyle;\n    if (!this.props.display) divStyle = { display: 'none' };\n    const event = this.props.event;\n    console.log(event);\n    return (\n      <div\n        className={this.props.display}\n        style={divStyle}\n        onClick={e => this.closeModal(e)}\n        id=\"viewEventInfo\"\n      >\n        <section className=\"dapp-modal-container transaction-info\">\n          <h1>Event</h1>\n          <p>\n            {Utils.getFullTime(event.timestamp)}\n            <br />\n            <small>{Utils.timeFromNow(event.timestamp)}</small>\n          </p>\n          <table className=\"dapp-zebra\">\n            <tbody>\n              <EventName event={event} />\n              <Outputs event={event} />\n              <Origin event={event} />\n              {/* }\n              <tr>\n                <td>Event name</td>\n                <td>{event.event}</td>\n              </tr>\n              <tr>\n                <td>Return Values</td>\n                <td style={{ wordBreak: 'break-word' }}>\n                  from: <strong>{event.returnValues.from}</strong>\n                  <br />\n                  to: <strong>{event.returnValues.to}</strong>\n                  <br />\n                  tokenId: <strong>{event.returnValues.tokenId}</strong>\n                  <br />\n                </td>\n              </tr>\n              <tr>\n                <td>Origin Contract</td>\n                <td>\n                  <Identicon size=\"tiny\" address={event.originalContractAddress} />\n                  {event.originalContractName}\n                </td>\n              </tr>\n              <tr>\n                <td>Log index</td>\n                <td>{event.logIndex}</td>\n              </tr>\n              <tr>\n                <td>Transaction index</td>\n                <td>{event.transactionIndex}</td>\n              </tr>\n              <tr>\n                <td>Transaction Hash</td>\n                <td>\n                  <a\n                    href={'http://etherscan.io/tx/' + event.transactionHash}\n                    target=\"_blank\"\n                  >\n                    {event.transactionHash}\n                  </a>\n                </td>\n              </tr>\n              <tr>\n                <td>Block</td>\n                <td>\n                  <a\n                    href={'http://etherscan.io/block/' + event.blockHash}\n                    title={event.blockHash}\n                    target=\"_blank\"\n                    className=\"dapp-shorten-text\"\n                  >\n                    {event.blockNumber}\n                    <br />\n                    {event.blockHash}\n                  </a>\n                </td>\n              </tr>\n            */}\n            </tbody>\n          </table>\n        </section>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return state;\n};\n\nexport default connect(\n  mapStateToProps,\n  { ...Actions }\n)(EventInfo);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as Actions from '../../actions/actions';\n\nclass JSONInterface extends Component {\n  shouldComponentUpdate(prevProps, prevState) {\n    if (\n      this.props.display !== prevProps.display ||\n      this.props.JSONInterface !== prevProps.JSONInterface\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  closeModal(e) {\n    e.preventDefault();\n    if (e.target.getAttribute('id') === 'JSONInterface') {\n      this.props.closeModal('displayJSONInterface');\n    }\n  }\n\n  render() {\n    let divStyle;\n    if (!this.props.display) divStyle = { display: 'none' };\n    return (\n      <div\n        className={this.props.display}\n        style={divStyle}\n        onClick={e => this.closeModal(e)}\n        id=\"JSONInterface\"\n      >\n        <section className=\"dapp-modal-container\">\n          <h1>Contract JSON Interface</h1>\n          <textarea\n            readOnly\n            name=\"jsonInterface\"\n            cols=\"40\"\n            rows=\"10\"\n            value={this.props.JSONInterface}\n          />\n          <p>\n            If you want to have someone else execute this contract, send this\n            information along with the contract's address.\n          </p>\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  { ...Actions }\n)(JSONInterface);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport cn from 'classnames';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n// actions\n// import * as Actions from '../../actions/actions';\nimport { displayGlobalNotification } from '../../actions/actions';\n// Modals\n// import NoConnection from './NoConnection';\nimport WatchContract from './WatchContract';\nimport WatchToken from './WatchToken';\nimport DeleteToken from './DeleteToken';\nimport SendTransaction from './SendTransaction';\nimport TransactionInfo from './TransactionInfo';\nimport QRCode from './QRCode';\nimport EventInfo from './EventInfo';\nimport JSONInterface from './JSONInterface';\n\nexport class ModalContainer extends Component {\n  componentDidMount() {\n    window.addEventListener('blur', e =>\n      document.body.classList.add('app-blur')\n    );\n    window.addEventListener('focus', e =>\n      document.body.classList.remove('app-blur')\n    );\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (\n      this.props.globalNotification !== prevProps.globalNotification.display &&\n      this.props.globalNotification.display === true\n    ) {\n      const notification = this.props.globalNotification;\n      const toastConfig = {\n        position: 'bottom-right',\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n      };\n      switch (notification.type) {\n        case 'error':\n          toast.error(notification.msg, toastConfig);\n          break;\n        case 'warning':\n          toast.warning(notification.msg, toastConfig);\n          break;\n        case 'success':\n          toast.success(notification.msg, toastConfig);\n          break;\n        case 'info':\n          toast.info(notification.msg, toastConfig);\n          break;\n        case 'default':\n          toast(notification.msg, toastConfig);\n          break;\n        default:\n          toast('a notification type was not set', toastConfig);\n          break;\n      }\n      this.props.displayGlobalNotification({ display: false });\n    }\n\n    Object.values(this.props.modals).includes(true)\n      ? document.body.classList.add('disable-scroll', 'blur', 'app-blur')\n      : document.body.classList.remove('disable-scroll', 'blur', 'app-blur');\n  }\n\n  render() {\n    const modals = this.props.modals;\n\n    const watchContract = cn({\n      'dapp-modal-overlay': modals.displayWatchContract || false,\n    });\n    const watchToken = cn({\n      'dapp-modal-overlay': modals.displayWatchToken || false,\n    });\n    const deleteToken = cn({\n      'dapp-modal-overlay': modals.displayDeleteToken || false,\n    });\n\n    const viewTransaction = cn({\n      'dapp-modal-overlay': modals.displayTransaction || false,\n    });\n\n    const JsonInterface = cn({\n      'dapp-modal-overlay': modals.displayJSONInterface || false,\n    });\n    const qrCode = cn({\n      'dapp-modal-overlay': modals.displayQRCode || false,\n    });\n\n    const sendTransaction = cn({\n      'dapp-modal-overlay': modals.displaySendTransaction || false,\n    });\n\n    const viewEventInfo = cn({\n      'dapp-modal-overlay': modals.displayEventInfo || false,\n    });\n\n    const txToSend = this.props.TransactionToSend;\n\n    return (\n      <React.Fragment>\n        <ToastContainer\n          position=\"bottom-right\"\n          autoClose={5000}\n          hideProgressBar={false}\n          newestOnTop={false}\n          closeOnClick\n          rtl={false}\n          pauseOnVisibilityChange\n          draggable\n          pauseOnHover\n        />\n        {/* <NoConnection connection={this.props.web3} /> */}\n        <WatchToken display={watchToken} />\n        <WatchContract display={watchContract} />\n        {this.props.TokenToDelete ? (\n          <DeleteToken token={this.props.TokenToDelete} display={deleteToken} />\n        ) : null}\n        {this.props.SelectedTransaction ? (\n          <TransactionInfo\n            display={viewTransaction}\n            transaction={this.props.SelectedTransaction}\n          />\n        ) : null}\n        {this.props.SelectedEvent ? (\n          <EventInfo display={viewEventInfo} event={this.props.SelectedEvent} />\n        ) : null}\n        {/* {Object.keys(txToSend).length && txToSend.constructor === Object ? ( */}\n        {txToSend.value ? <SendTransaction display={sendTransaction} /> : null}\n        {/* }\n        {this.props.TransactionToSend ? (\n          <SendTransaction display={sendTransaction} />\n        ) : null}\n      */}\n        {this.props.qrCode ? (\n          <QRCode hash={this.props.qrCode} display={qrCode} />\n        ) : null}\n        {this.props.JSONInterface ? (\n          <JSONInterface\n            JSONInterface={this.props.JSONInterface}\n            display={JsonInterface}\n          />\n        ) : null}\n      </React.Fragment>\n    );\n  }\n}\n\n// const mapStateToProps = state => {\n//   return state;\n// };\n\nconst mapStateToProps = state => ({\n  // return state;\n  TransactionToSend: state.reducers.TransactionToSend,\n  TokenToDelete: state.reducers.TokenToDelete,\n  SelectedTransaction: state.reducers.SelectedTransaction,\n  JSONInterface: state.reducers.JSONInterface,\n  globalNotification: state.reducers.globalNotification,\n  modals: state.reducers.modals,\n});\n\nexport default connect(\n  mapStateToProps,\n  // { ...Actions }\n  { displayGlobalNotification }\n)(ModalContainer);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\n\nimport { Link } from 'react-router-dom';\nimport '../stylesheets/navbar.css';\n\nimport Tooltip from '@material-ui/core/Tooltip';\nimport SettingsSharp from '@material-ui/icons/SettingsSharp';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport NumberFormat from 'react-number-format';\nimport { displayPriceFormatter } from '../utils/utils';\n\nimport { NavFields } from '../constants/FieldConstants';\nimport SU from './elements/SelectableUnit';\n\nconst HeaderField = field => {\n  return (\n    <li className={field.liClass}>\n      <Link to={field.href}>\n        <i className={field.icon} />\n        <span>{field.displayText}</span>\n      </Link>\n    </li>\n  );\n};\n\nexport class NavBar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = this.props;\n    this.handleScroll = this.handleScroll.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({\n      small: false,\n      sticky: false,\n      time: 'Waiting for blocks...',\n    });\n    this.setState({ displaySU: false });\n    window.addEventListener('scroll', this.handleScroll);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (typeof prevProps.reducers.blockHeader.number === undefined) return;\n    if (\n      prevProps.reducers.blockHeader.number !==\n      this.props.reducers.blockHeader.number\n    ) {\n      clearInterval(this.interval);\n      let time = 0;\n      this.interval = setInterval(() => {\n        time += 1;\n        let text = 's since last block';\n        if (time < 3600 > 59) {\n          time = Math.floor(time / 60);\n          text = ' minutes since last block';\n        }\n        if (time > 3599) {\n          time = Math.floor(time / 3600);\n          text = ' hours since last block';\n        }\n        this.setState({ time: time + text });\n      }, 1000);\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('scroll', this.handleScroll);\n    clearInterval(this.interval);\n  }\n\n  handleScroll() {\n    const scrollPosition = window.scrollY;\n    if (scrollPosition > 150) {\n      this.setState({ small: true, sticky: true });\n    } else if (scrollPosition > 48) {\n      this.setState({ small: true, sticky: false });\n    } else {\n      this.setState({ small: false, sticky: false });\n    }\n  }\n\n  renderHeaderField(field) {\n    return (\n      <li className={field.liClass}>\n        <Link to={field.href}>\n          <i className={field.icon} />\n          <span>{field.displayText}</span>\n        </Link>\n      </li>\n    );\n  }\n\n  toggleSU() {\n    this.state.displaySU\n      ? this.setState({ displaySU: false })\n      : this.setState({ displaySU: true });\n  }\n\n  redirectToSettings(e) {\n    this.props.history.push('/');\n  }\n\n  renderBalanceHeader() {\n    return (\n      <li className=\"balance-nav-li wallet-balance\">\n        <h3>Balance</h3>\n        <span className=\"account-balance\">\n          <NumberFormat\n            value={displayPriceFormatter(\n              this.props,\n              this.props.reducers.totalBalance\n            )}\n            displayType=\"text\"\n            thousandSeparator\n          />\n          &nbsp;\n          <span className=\"inline-form\" name=\"unit\">\n            <button\n              type=\"button\"\n              data-name=\"unit\"\n              data-value=\"ether\"\n              onClick={() => this.toggleSU()}\n            >\n              {this.props.reducers.currency}\n            </button>\n            <SU displaySU={this.state.displaySU} />\n          </span>\n        </span>\n      </li>\n    );\n  }\n\n  renderNetworkHeader(field) {\n    const inlineStyle = { marginLeft: '10px' };\n    return (\n      <React.Fragment>\n        <li className=\"block-info dapp-flex-item\">\n          <Tooltip title=\"Change Network\">\n            <IconButton\n              aria-label=\"Delete\"\n              onClick={e => this.redirectToSettings(e)}\n            >\n              <SettingsSharp />\n            </IconButton>\n          </Tooltip>\n          <i className=\"icon-feed\" />\n          <span style={inlineStyle} className=\"hide-on-small\">\n            {this.props.reducers.peerCount}\n            &nbsp; peers\n          </span>\n          &nbsp; &nbsp;| &nbsp; &nbsp;\n          <i className=\"icon-layers\" />\n          <span>&nbsp; {this.props.reducers.blockHeader.number}</span>\n          <i className=\"icon-clock\" style={inlineStyle} />\n          <span className=\"hide-on-small\">&nbsp; {this.state.time}</span>\n        </li>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    const cn = require('classnames');\n    const newStyles = cn({\n      'dapp-header': true,\n      'dapp-sticky-bar': true,\n      'dapp-small': this.state.small,\n      sticky: this.state.sticky,\n    });\n    return (\n      <header className={newStyles}>\n        <nav>\n          <ul>\n            {this.renderHeaderField(NavFields.Wallet)}\n            {this.renderHeaderField(NavFields.Send)}\n            {this.renderNetworkHeader()}\n            {this.renderHeaderField(NavFields.Contracts)}\n            {this.renderBalanceHeader()}\n          </ul>\n        </nav>\n      </header>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  ...state,\n  timeSinceLastBlock: state.reducers.timeSinceLastBlock,\n  peerCount: state.reducers.peerCount,\n  peerCountIntervalId: state.reducers.peerCountIntervalId,\n  totalBalance: state.reducers.totalBalance,\n  blockHeader: state.reducers.blockHeader,\n  currency: state.reducers.currency,\n});\n\nexport default connect(mapStateToProps)(withRouter(NavBar));\n","import React, { Component } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport web3 from './web3';\n\n// actions\nimport {\n  fetchEthGasStationStats,\n  closeModal,\n  updateConnectedNetwork,\n  setWallets,\n  updateTotalBalance,\n  updateBlockHeader,\n  updateTransactionConfirmation,\n  updateTransaction,\n  createInitWalletContract,\n  updateEtherPrices,\n} from './actions/actions';\nimport * as Utils from './utils/utils';\n// import * as WalletUtils from './utils/WalletUtils';\n\n// views\nimport ViewContainer from './views/ViewContainer';\n\n// Modals\nimport ModalContainer from './components/modals/ModalContainer';\nimport NavBar from './components/Navbar';\n\n// stylesheets\nimport './stylesheets/mergedstyles.css';\nimport './App.css';\n\nexport class App extends Component {\n  constructor(props) {\n    super(props);\n    this.getCryptoComparePrices = this.getCryptoComparePrices.bind(this);\n    this.getCryptoComparePrices();\n    this.CryptoCompareInterval = setInterval(\n      () => this.getCryptoComparePrices(),\n      15000\n    );\n    this.props.fetchEthGasStationStats();\n    this.GasInterval = setInterval(\n      () => this.props.fetchEthGasStationStats(),\n      15000\n    );\n\n    // this.props.closeModal('displayEventInfo');\n  }\n\n  componentDidMount() {\n    this.getEverything();\n  }\n\n  getEverything() {\n    // do once to load on init, then repeat later to update balances\n    try {\n      Utils.checkNetwork(web3, this.props.updateConnectedNetwork);\n      Utils.getAccounts(\n        web3,\n        this.props.setWallets,\n        this.props.updateTotalBalance\n      );\n    } catch (err) {\n      console.error('error', err);\n    }\n\n    try {\n      web3.eth.subscribe('newBlockHeaders', (err, b) => {\n        if (!err) {\n          this.props.updateBlockHeader({\n            gasLimit: b.gasLimit,\n            gasUsed: b.gasUsed,\n            number: b.number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ','),\n            size: b.size,\n            timestamp: b.timestamp,\n          });\n          web3.eth.net.getPeerCount().then(this.props.updatePeerCount);\n        }\n        Utils.getAccounts(\n          web3,\n          this.props.setWallets,\n          this.props.updateTotalBalance\n        );\n        Utils.updateTransactionConfirmation(\n          b,\n          web3,\n          this.props.Transactions,\n          this.props.updateTransactionConfirmation\n        );\n        Utils.updatePendingConfirmations(\n          b,\n          web3,\n          this.props.Transactions,\n          this.props.updateTransaction\n        );\n      });\n    } catch (err) {\n      console.warn('web3 provider not open', err);\n      return err;\n    }\n  }\n\n  getCryptoComparePrices() {\n    Utils.getCryptoComparePrices().then(exchangeRates => {\n      this.props.updateEtherPrices(exchangeRates);\n    });\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.CryptoCompareInterval);\n    clearInterval(this.GasInterval);\n  }\n\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <NavBar />\n          <ViewContainer />\n          <ModalContainer />\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  Transactions: state.reducers.Transactions,\n  web3: state.web3,\n});\n\nexport default connect(\n  mapStateToProps,\n  {\n    fetchEthGasStationStats,\n    closeModal,\n    updateConnectedNetwork,\n    setWallets,\n    updateTotalBalance,\n    updateBlockHeader,\n    updateTransactionConfirmation,\n    updateTransaction,\n    createInitWalletContract,\n    updateEtherPrices,\n  }\n)(App);\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react';\n\nclass ErrorBoundary extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  componentDidCatch(error, info) {\n    // Display fallback UI\n    this.setState({ hasError: true });\n    // You can also log the error to an error reporting service\n    // logErrorToMyService(error, info);\n    console.warn('in error boundary', error, info);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      // You can render any custom fallback UI\n      return <h1>Something went wrong.</h1>;\n    }\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n","export const initialState = {\n  displayAlertMessage: false,\n  alertKey: 'alert_20171104-hidden',\n  peerCountIntervalId: null,\n  currency: 'ETHER',\n  totalBalance: 0.0,\n  Wallets: {},\n  ObservedContracts: {},\n  ObservedTokens: {},\n  CustomContracts: {},\n  Transactions: {},\n  WalletContracts: {},\n  PendingConfirmations: {},\n  ContractsPendingConfirmations: {},\n  Events: {},\n  Tokens: {},\n  peerCount: 0,\n  blockHeader: 0,\n  timeSinceLastBlock: 0,\n  network: '',\n  provider: '',\n  modals: {\n    displayWatchContract: false,\n    displayWatchToken: false,\n    displayDeleteToken: false,\n    displaySendTransaction: false,\n    displayTransaction: false,\n    displayJSONInterface: false,\n    displayQRCode: false,\n    displayEventInfo: false,\n  },\n  ContractToWatch: {},\n  TokenToWatch: {},\n  TokenToDelete: '',\n  GasStats: {},\n  TransactionToSend: {},\n  globalNotification: {\n    display: false,\n  },\n  DeployContractForm: {\n    simpleChecked: true,\n    multisigChecked: false,\n    importWalletChecked: false,\n    importWalletAddress: '',\n    multiSigContract: {\n      ownerCount: 3,\n      confirmationAddressesRequired: 1,\n      dailyLimitAmount: 10,\n      MainOwnerAddress: '',\n      owners: [],\n    },\n  },\n  balancesAutoScanChecked: 0,\n  errorsAutoScanReceived: 0,\n  SelectedEvent: {},\n  qrCode: '',\n  JSONInterface: '',\n  SelectedFunction: {},\n};\n\nconst reducers = (state = initialState, action) => {\n  switch (action.type) {\n    case 'UPDATE_OBSERVED_CONTRACT_NAME':\n      return {\n        ...state,\n        ObservedContracts: {\n          ...state.ObservedContracts,\n          [action.payload.address]: {\n            ...state.ObservedContracts[action.payload.address],\n            name: action.payload.name,\n          },\n        },\n        // TODO: testing update logs for selectedContract\n\n        selectedContract: {\n          ...state.selectedContract,\n          name: action.payload.name,\n        },\n        // selectedContract: {\n        //   ...state.ObservedContracts,\n        //   [action.payload.address]: {\n        //     ...state.ObservedContracts[action.payload.address],\n        //     name: action.payload.name,\n        //   }\n        // },\n      };\n    case 'UPDATE_WALLET_CONTRACT_NAME':\n      return {\n        ...state,\n        WalletContracts: {\n          ...state.WalletContracts,\n          [action.payload.address]: {\n            ...state.WalletContracts[action.payload.address],\n            name: action.payload.name,\n          },\n        },\n        selectedContract: {\n          ...state.selectedContract,\n          name: action.payload.name,\n        },\n        // selectedContract: {\n        //   ...state.WalletContracts,\n        //   [action.payload.address]: {\n        //     ...state.WalletContracts[action.payload.address],\n        //     name: action.payload.name,\n        //   }\n        // },\n      };\n    case 'UPDATE_ADDRESS_NAME':\n      return {\n        ...state,\n        Wallets: {\n          ...state.Wallets,\n          [action.payload.address]: {\n            ...state.Wallets[action.payload.address],\n            name: action.payload.name,\n          },\n        },\n        selectedWallet: {\n          ...state.selectedWallet,\n          name: action.payload.name,\n        },\n      };\n    case 'UPDATE_TOKEN_TO_SEND':\n      return {\n        ...state,\n        TransactionToSend: {\n          ...state.TransactionToSend,\n          sendToken: action.payload.sendToken,\n          tokenToSend: action.payload.tokenToSend,\n        },\n      };\n    case 'UPDATE_CONTRACT_TOKEN_BALANCE':\n      return {\n        ...state,\n        WalletContracts: {\n          ...state.WalletContracts,\n          [action.payload.account]: {\n            ...state.WalletContracts[action.payload.account],\n            tokens: {\n              ...state.WalletContracts[action.payload.account].tokens,\n              [action.payload.tokenAddress]: action.payload.value,\n            },\n          },\n        },\n      };\n    case 'UPDATE_ACCOUNT_TOKEN_BALANCE':\n      return {\n        ...state,\n        Wallets: {\n          ...state.Wallets,\n          [action.payload.account]: {\n            ...state.Wallets[action.payload.account],\n            tokens: {\n              ...state.Wallets[action.payload.account].tokens,\n              [action.payload.tokenAddress]: action.payload.value,\n            },\n          },\n        },\n      };\n    case 'UPDATE_WALLET_CONTRACT':\n      return {\n        ...state,\n        WalletContracts: Object.assign({}, state.WalletContracts, {\n          [action.payload.name]: action.payload.value,\n        }),\n      };\n    case 'DELETE_PENDING_CONTRACT':\n      return {\n        ...state,\n        ContractsPendingConfirmations: Object.assign(\n          {},\n          ...Object.entries(state.ContractsPendingConfirmations)\n            .filter(([k]) => k !== action.payload)\n            .map(([k, v]) => ({ [k]: v }))\n        ),\n      };\n    case 'UPDATE_PENDING_CONTRACTS':\n      return {\n        ...state,\n        ContractsPendingConfirmations: Object.assign(\n          {},\n          state.ContractsPendingConfirmations,\n          {\n            [action.payload.name]: action.payload.value,\n          }\n        ),\n      };\n\n    case 'UPDATE_INITIAL_DEPLOYED_CONTRACT_METHOD_OUTPUTS':\n      return {\n        ...state,\n        WalletContracts: {\n          ...state.WalletContracts,\n          [action.payload.contractAddress]: {\n            ...state.WalletContracts[action.payload.contractAddress],\n            contractConstants: state.WalletContracts[\n              action.payload.contractAddress\n            ].contractConstants.map((item, ind) => {\n              if (item.name === action.payload.name) {\n                return {\n                  ...item,\n                  outputs: [...action.payload.value],\n                };\n              }\n              return item;\n            }),\n          },\n        },\n        // TODO: testing update logs for selectedContract\n      };\n\n    case 'UPDATE_INITIAL_OBSERVED_CONTRACT_METHOD_OUTPUTS':\n      return {\n        ...state,\n        ObservedContracts: {\n          ...state.ObservedContracts,\n          [action.payload.contractAddress]: {\n            ...state.ObservedContracts[action.payload.contractAddress],\n            contractConstants: state.ObservedContracts[\n              action.payload.contractAddress\n            ].contractConstants.map((item, ind) => {\n              if (item.name === action.payload.name) {\n                return {\n                  ...item,\n                  outputs: [...action.payload.value],\n                };\n              }\n              return item;\n            }),\n          },\n        },\n        // TODO: testing update logs for selectedContract\n      };\n    case 'UPDATE_FUNCTION_INPUT':\n      return {\n        ...state,\n        selectedFunction: {\n          ...state.selectedFunction,\n          inputs: state.selectedFunction.inputs.map((item, ind) => {\n            if (parseInt(action.payload.index, 10) === ind) {\n              return {\n                ...item,\n                value: action.payload.value,\n              };\n            }\n            return item;\n          }),\n        },\n      };\n    case 'UPDATE_EXECUTING_WALLET':\n      return {\n        ...state,\n        selectedFunction: Object.assign({}, state.selectedFunction, {\n          [action.payload.name]: action.payload.value,\n        }),\n      };\n    case 'EMPTY_SELECTED_FUNCTION':\n      return {\n        ...state,\n        selectedFunction: Object.assign({}, {}),\n      };\n    case 'UPDATE_SELECTED_FUNCTION':\n      return {\n        ...state,\n        selectedFunction: { ...action.payload },\n      };\n    case 'UPDATE_JSON_INTERFACE':\n      return {\n        ...state,\n        JSONInterface: action.payload,\n      };\n    case 'UPDATE_QR_CODE':\n      return {\n        ...state,\n        qrCode: action.payload,\n      };\n\n    case 'UPDATE_SELECTED_EVENT':\n      return {\n        ...state,\n        SelectedEvent: action.payload,\n      };\n\n    case 'ADD_DEPLOYED_CONTRACT_FUNCTIONS':\n      return {\n        ...state,\n        WalletContracts: {\n          ...state.WalletContracts,\n          [action.payload.address]: {\n            ...state.WalletContracts[action.payload.address],\n            [action.payload.name]: action.payload.value,\n          },\n        },\n        // TODO: testing\n        selectedContract: {\n          ...state.selectedContract,\n          [action.payload.name]: action.payload.value,\n        },\n      };\n    case 'ADD_DEPLOYED_CONTRACT_CONSTANTS':\n      return {\n        ...state,\n        WalletContracts: {\n          ...state.WalletContracts,\n          [action.payload.address]: {\n            ...state.WalletContracts[action.payload.address],\n            [action.payload.name]: action.payload.value,\n          },\n        },\n        // TODO: testing\n        selectedContract: {\n          ...state.selectedContract,\n          [action.payload.name]: action.payload.value,\n        },\n      };\n\n    case 'ADD_OBSERVED_CONTRACT_FUNCTIONS':\n      return {\n        ...state,\n        ObservedContracts: {\n          ...state.ObservedContracts,\n          [action.payload.address]: {\n            ...state.ObservedContracts[action.payload.address],\n            [action.payload.name]: action.payload.value,\n          },\n        },\n        // TODO: testing\n        selectedContract: {\n          ...state.selectedContract,\n          [action.payload.name]: action.payload.value,\n        },\n      };\n    case 'ADD_OBSERVED_CONTRACT_CONSTANTS':\n      return {\n        ...state,\n        ObservedContracts: {\n          ...state.ObservedContracts,\n          [action.payload.address]: {\n            ...state.ObservedContracts[action.payload.address],\n            [action.payload.name]: action.payload.value,\n          },\n        },\n        // TODO: testing\n        selectedContract: {\n          ...state.selectedContract,\n          [action.payload.name]: action.payload.value,\n        },\n      };\n    case 'UPDATE_PAST_CONTRACT_LOGS':\n      return {\n        ...state,\n        ObservedContracts: {\n          ...state.ObservedContracts,\n          [action.payload.address]: {\n            ...state.ObservedContracts[action.payload.address],\n            logs: [\n              ...state.ObservedContracts[action.payload.address].logs,\n              action.payload,\n            ],\n          },\n        },\n        // TODO: testing update logs for selectedContract\n      };\n    case 'ADD_PAST_CONTRACT_LOGS':\n      return {\n        ...state,\n        ObservedContracts: {\n          ...state.ObservedContracts,\n          [action.payload.address]: {\n            ...state.ObservedContracts[action.payload.address],\n            logs: action.payload,\n          },\n        },\n        // TODO: testing update logs for selectedContract\n      };\n    case 'UPDATE_BALANCE_CHECKED':\n      return {\n        ...state,\n        balancesAutoScanChecked: action.payload,\n      };\n    case 'UPDATE_ERR_CHECKED':\n      return {\n        ...state,\n        errorsAutoScanReceived: action.payload,\n      };\n    case 'UPDATE_DCF_RADIO':\n      return {\n        ...state,\n        DeployContractForm: Object.assign(\n          {},\n          state.DeployContractForm,\n          action.payload\n        ),\n      };\n    case 'UPDATE_MAIN_DCF': {\n      return {\n        ...state,\n        DeployContractForm: Object.assign({}, state.DeployContractForm, {\n          [action.payload.name]: action.payload.value,\n        }),\n      };\n    }\n    case 'UPDATE_MAIN_CONTRACT_ADDRESS': {\n      return {\n        ...state,\n        DeployContractForm: Object.assign(\n          {},\n          state.DeployContractForm,\n          action.payload\n        ),\n      };\n    }\n    case 'UPDATE_DEPLOY_CONTRACT_FORM':\n      return {\n        ...state,\n        DeployContractForm: {\n          ...state.DeployContractForm,\n          multiSigContract: {\n            ...action.payload,\n          },\n        },\n      };\n    case 'UPDATE_SELECTED_TRANSACTION':\n      return {\n        ...state,\n        SelectedTransaction: action.payload,\n      };\n    case 'CLEAR_TRANSACTION_TO_SEND':\n      return {\n        ...state,\n        TransactionToSend: {},\n      };\n    case 'UPDATE_TRANSACTION_CONFIRMATION':\n      return {\n        ...state,\n        Transactions: {\n          ...state.Transactions,\n          [action.payload.name]: {\n            ...state.Transactions[action.payload.name],\n            confirmationNumber: action.payload.value,\n          },\n        },\n      };\n    case 'UPDATE_TRANSACTION':\n      return {\n        ...state,\n        Transactions: {\n          ...state.Transactions,\n          [action.payload.name]: {\n            ...state.Transactions[action.payload.name],\n            ...action.payload.value,\n          },\n        },\n      };\n    case 'ADD_TRANSACTION':\n      return {\n        ...state,\n        Transactions: Object.assign({}, state.Transactions, {\n          [action.payload.hash]: action.payload.value,\n        }),\n      };\n    case 'DISPLAY_GLOBAL_NOTIFICATION':\n      return {\n        ...state,\n        globalNotification: Object.assign(\n          {},\n          state.globalNotification,\n          action.payload\n        ),\n      };\n    case 'UPDATE_TRANSACTION_TO_SEND':\n      return {\n        ...state,\n        TransactionToSend: Object.assign({}, state.TransactionToSend, {\n          [action.payload.name]: action.payload.value,\n        }),\n      };\n    // case RECEIVED_GAS_ERROR:\n    case 'RECEIVE_GAS_STATS':\n      return {\n        ...state,\n        GasStats: Object.assign({}, action.payload),\n      };\n    case 'EMPTY_SELECTED_CONTRACT':\n      return {\n        ...state,\n        selectedContract: '',\n      };\n    case 'SET_SELECTED_CONTRACT':\n      return {\n        ...state,\n        selectedContract: action.payload,\n      };\n    case 'SET_TOKEN_TO_DELETE':\n      return {\n        ...state,\n        TokenToDelete: action.payload,\n      };\n    case 'DELETE_TOKEN':\n      return {\n        ...state,\n        ObservedTokens: Object.assign(\n          {},\n          ...Object.entries(state.ObservedTokens)\n            .filter(([k]) => k !== action.payload)\n            .map(([k, v]) => ({ [k]: v }))\n        ),\n        TokenToDelete: '',\n      };\n    case 'ADD_OBSERVED_TOKEN':\n      // overwrites if already existed\n      return {\n        ...state,\n        ObservedTokens: Object.assign({}, state.ObservedTokens, {\n          [action.payload.address]: action.payload.value,\n        }),\n      };\n    case 'CANCEL_TOKEN_TO_WATCH':\n      return {\n        ...state,\n        TokenToWatch: {},\n      };\n    case 'UPDATE_TOKEN_TO_WATCH':\n      return {\n        ...state,\n        TokenToWatch: Object.assign({}, state.TokenToWatch, {\n          [action.payload.name]: action.payload.value,\n        }),\n      };\n    case 'ADD_OBSERVED_CONTRACT':\n      return {\n        ...state,\n        ObservedContracts: Object.assign(\n          {},\n          state.ObservedContracts,\n          action.payload\n        ),\n      };\n    case 'CANCEL_CONTRACT_TO_WATCH':\n      return {\n        ...state,\n        ContractToWatch: {},\n      };\n    case 'UPDATE_CONTRACT_TO_WATCH':\n      return {\n        ...state,\n        ContractToWatch: Object.assign({}, state.ContractToWatch, {\n          [action.payload.name]: action.payload.value,\n        }),\n      };\n    case 'CLOSE_MODAL':\n      return {\n        ...state,\n        modals: Object.assign({}, ...state.modals, {\n          [action.payload]: false,\n        }),\n      };\n    case 'DISPLAY_MODAL':\n      return {\n        ...state,\n        modals: Object.assign({}, ...state.modals, {\n          [action.payload]: true,\n        }),\n      };\n    case 'CREATE_INIT_WALLET_CONTRACT':\n      return {\n        ...state,\n        Wallet: action.payload,\n      };\n    case 'UPDATE_EXCHANGE_RATES':\n      return {\n        ...state,\n        exchangeRates: action.payload,\n      };\n    case 'UPDATE_ETHER_PRICES':\n      return {\n        ...state,\n        prices: action.payload,\n      };\n    case 'EMPTY_SELECTED_WALLET':\n      return {\n        ...state,\n        selectedWallet: '',\n      };\n    case 'SET_SELECTED_WALLET':\n      return {\n        ...state,\n        selectedWallet: action.payload,\n      };\n    case 'UPDATE_DISPLAY_VALUE':\n      return {\n        ...state,\n        displayValue: action.payload,\n      };\n    case 'UPDATE_TOTAL_BALANCE':\n      return {\n        ...state,\n        totalBalance: action.payload,\n      };\n    // case 'SET_WALLETS':\n    //   return {\n    //     ...state,\n    //     Wallets: Object.assign({}, state.Wallets, {\n    //       [action.payload.account]: action.payload.balance,\n    //     }),\n    //   };\n    // Wallets: {\n    //       ...state.Wallets,\n    //       [action.payload.account]: {\n    //         ...state.Wallets[action.payload.account],\n    //         balance: action.balance,\n    //       },\n    //     },\n\n    case 'SET_WALLETS':\n      return {\n        ...state,\n        Wallets: {\n          ...state.Wallets,\n          [action.payload.account]: {\n            ...state.Wallets[action.payload.account],\n            balance: action.payload.balance,\n          },\n        },\n      };\n    case 'UPDATE_PROVIDER':\n      return {\n        ...state,\n        provider: action.payload,\n      };\n    case 'UPDATE_BLOCKHEADER':\n      return {\n        ...state,\n        blockHeader: action.payload,\n      };\n    case 'UPDATE_PEERCOUNT':\n      return {\n        ...state,\n        peerCount: action.payload,\n      };\n    case 'UPDATE_CURRENCY_UNIT':\n      return {\n        ...state,\n        currency: action.payload,\n      };\n    case 'UPDATE_CONNECTED_NETWORK':\n      return {\n        ...state,\n        network: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducers;\n","import { combineReducers } from 'redux';\nimport reducers from './reducers';\n\nconst appReducer = combineReducers({\n  reducers,\n});\n\nconst rootReducer = (state, action) => {\n  let updatedState = state;\n  if (action.type === 'USER_LOGOUT') {\n    updatedState = undefined;\n  }\n  return appReducer(updatedState, action);\n};\n\nexport default rootReducer;\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage'; // defaults to localStorage for web and AsyncStorage for react-native\nimport rootReducer from '../reducers';\n\nconst middlewares = [thunk];\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n  blacklist: [\n    'reducers.selectedFunction',\n    'reducers.web3',\n    'reducers.TransactionToSend',\n    'reducers.network',\n    'reducers.provider',\n    'reducers.blockHeader',\n    'reducers.timeSinceLastBlock',\n    'reducers.peerCount',\n    'reducers.modals',\n    'reducers.DeployContractForm',\n    'reducers.SelectedTransction',\n    'reducers.SelectedWallet',\n    'reducers.SelectedEvent',\n  ],\n};\n\n// const isChrome = window.navigator.userAgent.includes('Chrome');\n\nexport default function configureStore() {\n  /* eslint-disable no-underscore-dangle */\n  const store = createStore(\n    persistReducer(persistConfig, rootReducer),\n    compose(\n      applyMiddleware(...middlewares),\n      window.__REDUX_DEVTOOLS_EXTENSION__ &&\n        window.__REDUX_DEVTOOLS_EXTENSION__()\n    )\n  );\n  /* eslint-enable */\n\n  persistStore(store);\n\n  return store;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'react-app-polyfill/ie9'; // For IE 9-11 support\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport ErrorBoundary from './errorBoundaries/ErrorBoundary';\nimport configureStore from './store/store';\n\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <ErrorBoundary>\n      <App />\n    </ErrorBoundary>\n  </Provider>,\n  document.getElementById('root')\n);\n\nregisterServiceWorker();\n"],"sourceRoot":""}